/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var e={993:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a});var r=n(533),o=n.n(r),i=n(37),l=n.n(i)()(o());l.push([e.id,".App-footer {\n  font-family: 'Poppins', sans-serif;\n  font-weight: 400;\n  color: #000000;\n  border-top: 1.9px solid #dc3630;\n  height: 2.5rem;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  font-style: italic;\n}","",{version:3,sources:["webpack://./src/Footer/Footer.css"],names:[],mappings:"AAAA;EACE,kCAAkC;EAClC,gBAAgB;EAChB,cAAc;EACd,+BAA+B;EAC/B,cAAc;EACd,WAAW;EACX,aAAa;EACb,uBAAuB;EACvB,kBAAkB;AACpB",sourcesContent:[".App-footer {\n  font-family: 'Poppins', sans-serif;\n  font-weight: 400;\n  color: #000000;\n  border-top: 1.9px solid #dc3630;\n  height: 2.5rem;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  font-style: italic;\n}"],sourceRoot:""}]);const a=l},976:(e,t,n)=>{"use strict";var r=n(128),o=[],i=[],l=r.makeRequestCallFromTimer((function(){if(i.length)throw i.shift()}));function a(e){var t;(t=o.length?o.pop():new u).task=e,r(t)}function u(){this.task=null}e.exports=a,u.prototype.call=function(){try{this.task.call()}catch(e){a.onerror?a.onerror(e):(i.push(e),l())}finally{this.task=null,o[o.length]=this}}},128:(e,t,n)=>{"use strict";function r(e){i.length||o(),i[i.length]=e}e.exports=r;var o,i=[],l=0;function a(){for(;l<i.length;){var e=l;if(l+=1,i[e].call(),l>1024){for(var t=0,n=i.length-l;t<n;t++)i[t]=i[t+l];i.length-=l,l=0}}i.length=0,l=0}var u,c,s,f=void 0!==n.g?n.g:self,d=f.MutationObserver||f.WebKitMutationObserver;function p(e){return function(){var t=setTimeout(r,0),n=setInterval(r,50);function r(){clearTimeout(t),clearInterval(n),e()}}}"function"==typeof d?(u=1,c=new d(a),s=document.createTextNode(""),c.observe(s,{characterData:!0}),o=function(){u=-u,s.data=u}):o=p(a),r.requestFlush=o,r.makeRequestCallFromTimer=p},37:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,i){"string"==typeof e&&(e=[[null,e,void 0]]);var l={};if(r)for(var a=0;a<this.length;a++){var u=this[a][0];null!=u&&(l[u]=!0)}for(var c=0;c<e.length;c++){var s=[].concat(e[c]);r&&l[s[0]]||(void 0!==i&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=i),n&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=n):s[2]=n),o&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=o):s[4]="".concat(o)),t.push(s))}},t}},533:e=>{"use strict";e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[t].concat([i]).join("\n")}return[t].join("\n")}},856:e=>{"use strict";var t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,o){for(var i,l,a=function(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}(e),u=1;u<arguments.length;u++){for(var c in i=Object(arguments[u]))n.call(i,c)&&(a[c]=i[c]);if(t){l=t(i);for(var s=0;s<l.length;s++)r.call(i,l[s])&&(a[l[s]]=i[l[s]])}}return a}},465:(e,t,n)=>{"use strict";var r=n(453);function o(){}function i(){}i.resetWarningCache=o,e.exports=function(){function e(e,t,n,o,i,l){if(l!==r){var a=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw a.name="Invariant Violation",a}}function t(){return e}e.isRequired=e;var n={array:e,bigint:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:i,resetWarningCache:o};return n.PropTypes=n,n}},830:(e,t,n)=>{e.exports=n(465)()},453:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},435:(e,t,n)=>{"use strict";var r=n(738),o=n(856),i=n(667);function l(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(l(227));function a(e,t,n,r,o,i,l,a,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}var u=!1,c=null,s=!1,f=null,d={onError:function(e){u=!0,c=e}};function p(e,t,n,r,o,i,l,s,f){u=!1,c=null,a.apply(d,arguments)}var m=null,h=null,y=null;function g(e,t,n){var r=e.type||"unknown-event";e.currentTarget=y(n),function(e,t,n,r,o,i,a,d,m){if(p.apply(this,arguments),u){if(!u)throw Error(l(198));var h=c;u=!1,c=null,s||(s=!0,f=h)}}(r,t,void 0,e),e.currentTarget=null}var v=null,b={};function w(){if(v)for(var e in b){var t=b[e],n=v.indexOf(e);if(!(-1<n))throw Error(l(96,e));if(!x[n]){if(!t.extractEvents)throw Error(l(97,e));for(var r in x[n]=t,n=t.eventTypes){var o=void 0,i=n[r],a=t,u=r;if(E.hasOwnProperty(u))throw Error(l(99,u));E[u]=i;var c=i.phasedRegistrationNames;if(c){for(o in c)c.hasOwnProperty(o)&&k(c[o],a,u);o=!0}else i.registrationName?(k(i.registrationName,a,u),o=!0):o=!1;if(!o)throw Error(l(98,r,e))}}}}function k(e,t,n){if(S[e])throw Error(l(100,e));S[e]=t,T[e]=t.eventTypes[n].dependencies}var x=[],E={},S={},T={};function C(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];if(!b.hasOwnProperty(t)||b[t]!==r){if(b[t])throw Error(l(102,t));b[t]=r,n=!0}}n&&w()}var P=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),_=null,O=null,N=null;function j(e){if(e=h(e)){if("function"!=typeof _)throw Error(l(280));var t=e.stateNode;t&&(t=m(t),_(e.stateNode,e.type,t))}}function M(e){O?N?N.push(e):N=[e]:O=e}function R(){if(O){var e=O,t=N;if(N=O=null,j(e),t)for(e=0;e<t.length;e++)j(t[e])}}function I(e,t){return e(t)}function z(e,t,n,r,o){return e(t,n,r,o)}function A(){}var D=I,F=!1,L=!1;function B(){null===O&&null===N||(A(),R())}function W(e,t,n){if(L)return e(t,n);L=!0;try{return D(e,t,n)}finally{L=!1,B()}}var U=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,H=Object.prototype.hasOwnProperty,V={},Q={};function $(e,t,n,r,o,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=i}var q={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){q[e]=new $(e,0,!1,e,null,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];q[t]=new $(t,1,!1,e[1],null,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){q[e]=new $(e,2,!1,e.toLowerCase(),null,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){q[e]=new $(e,2,!1,e,null,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){q[e]=new $(e,3,!1,e.toLowerCase(),null,!1)})),["checked","multiple","muted","selected"].forEach((function(e){q[e]=new $(e,3,!0,e,null,!1)})),["capture","download"].forEach((function(e){q[e]=new $(e,4,!1,e,null,!1)})),["cols","rows","size","span"].forEach((function(e){q[e]=new $(e,6,!1,e,null,!1)})),["rowSpan","start"].forEach((function(e){q[e]=new $(e,5,!1,e.toLowerCase(),null,!1)}));var K=/[\-:]([a-z])/g;function G(e){return e[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(K,G);q[t]=new $(t,1,!1,e,null,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(K,G);q[t]=new $(t,1,!1,e,"http://www.w3.org/1999/xlink",!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(K,G);q[t]=new $(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1)})),["tabIndex","crossOrigin"].forEach((function(e){q[e]=new $(e,1,!1,e.toLowerCase(),null,!1)})),q.xlinkHref=new $("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach((function(e){q[e]=new $(e,1,!1,e.toLowerCase(),null,!0)}));var Y=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function X(e,t,n,r){var o=q.hasOwnProperty(t)?q[t]:null;(null!==o?0===o.type:!r&&2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1]))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!H.call(Q,e)||!H.call(V,e)&&(U.test(e)?Q[e]=!0:(V[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}Y.hasOwnProperty("ReactCurrentDispatcher")||(Y.ReactCurrentDispatcher={current:null}),Y.hasOwnProperty("ReactCurrentBatchConfig")||(Y.ReactCurrentBatchConfig={suspense:null});var Z=/^(.*)[\\\/]/,J="function"==typeof Symbol&&Symbol.for,ee=J?Symbol.for("react.element"):60103,te=J?Symbol.for("react.portal"):60106,ne=J?Symbol.for("react.fragment"):60107,re=J?Symbol.for("react.strict_mode"):60108,oe=J?Symbol.for("react.profiler"):60114,ie=J?Symbol.for("react.provider"):60109,le=J?Symbol.for("react.context"):60110,ae=J?Symbol.for("react.concurrent_mode"):60111,ue=J?Symbol.for("react.forward_ref"):60112,ce=J?Symbol.for("react.suspense"):60113,se=J?Symbol.for("react.suspense_list"):60120,fe=J?Symbol.for("react.memo"):60115,de=J?Symbol.for("react.lazy"):60116,pe=J?Symbol.for("react.block"):60121,me="function"==typeof Symbol&&Symbol.iterator;function he(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=me&&e[me]||e["@@iterator"])?e:null}function ye(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case ne:return"Fragment";case te:return"Portal";case oe:return"Profiler";case re:return"StrictMode";case ce:return"Suspense";case se:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case le:return"Context.Consumer";case ie:return"Context.Provider";case ue:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case fe:return ye(e.type);case pe:return ye(e.render);case de:if(e=1===e._status?e._result:null)return ye(e)}return null}function ge(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,o=e._debugSource,i=ye(e.type);n=null,r&&(n=ye(r.type)),r=i,i="",o?i=" (at "+o.fileName.replace(Z,"")+":"+o.lineNumber+")":n&&(i=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+i}t+=n,e=e.return}while(e);return t}function ve(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function be(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function we(e){e._valueTracker||(e._valueTracker=function(e){var t=be(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function ke(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=be(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function xe(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Ee(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=ve(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Se(e,t){null!=(t=t.checked)&&X(e,"checked",t,!1)}function Te(e,t){Se(e,t);var n=ve(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?Pe(e,t.type,n):t.hasOwnProperty("defaultValue")&&Pe(e,t.type,ve(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Ce(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function Pe(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function _e(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function Oe(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+ve(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function Ne(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(l(91));return o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function je(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(l(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(l(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:ve(n)}}function Me(e,t){var n=ve(t.value),r=ve(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function Re(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function Ie(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function ze(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?Ie(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var Ae,De,Fe=(De=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((Ae=Ae||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=Ae.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return De(e,t)}))}:De);function Le(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}function Be(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var We={animationend:Be("Animation","AnimationEnd"),animationiteration:Be("Animation","AnimationIteration"),animationstart:Be("Animation","AnimationStart"),transitionend:Be("Transition","TransitionEnd")},Ue={},He={};function Ve(e){if(Ue[e])return Ue[e];if(!We[e])return e;var t,n=We[e];for(t in n)if(n.hasOwnProperty(t)&&t in He)return Ue[e]=n[t];return e}P&&(He=document.createElement("div").style,"AnimationEvent"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),"TransitionEvent"in window||delete We.transitionend.transition);var Qe=Ve("animationend"),$e=Ve("animationiteration"),qe=Ve("animationstart"),Ke=Ve("transitionend"),Ge="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Ye=new("function"==typeof WeakMap?WeakMap:Map);function Xe(e){var t=Ye.get(e);return void 0===t&&(t=new Map,Ye.set(e,t)),t}function Ze(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).effectTag)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Je(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function et(e){if(Ze(e)!==e)throw Error(l(188))}function tt(e){if(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ze(e)))throw Error(l(188));return t!==e?null:e}for(var n=e,r=t;;){var o=n.return;if(null===o)break;var i=o.alternate;if(null===i){if(null!==(r=o.return)){n=r;continue}break}if(o.child===i.child){for(i=o.child;i;){if(i===n)return et(o),e;if(i===r)return et(o),t;i=i.sibling}throw Error(l(188))}if(n.return!==r.return)n=o,r=i;else{for(var a=!1,u=o.child;u;){if(u===n){a=!0,n=o,r=i;break}if(u===r){a=!0,r=o,n=i;break}u=u.sibling}if(!a){for(u=i.child;u;){if(u===n){a=!0,n=i,r=o;break}if(u===r){a=!0,r=i,n=o;break}u=u.sibling}if(!a)throw Error(l(189))}}if(n.alternate!==r)throw Error(l(190))}if(3!==n.tag)throw Error(l(188));return n.stateNode.current===n?e:t}(e),!e)return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function nt(e,t){if(null==t)throw Error(l(30));return null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function rt(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var ot=null;function it(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)g(e,t[r],n[r]);else t&&g(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function lt(e){if(null!==e&&(ot=nt(ot,e)),e=ot,ot=null,e){if(rt(e,it),ot)throw Error(l(95));if(s)throw e=f,s=!1,f=null,e}}function at(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function ut(e){if(!P)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}var ct=[];function st(e){e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>ct.length&&ct.push(e)}function ft(e,t,n,r){if(ct.length){var o=ct.pop();return o.topLevelType=e,o.eventSystemFlags=r,o.nativeEvent=t,o.targetInst=n,o}return{topLevelType:e,eventSystemFlags:r,nativeEvent:t,targetInst:n,ancestors:[]}}function dt(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r=n;if(3===r.tag)r=r.stateNode.containerInfo;else{for(;r.return;)r=r.return;r=3!==r.tag?null:r.stateNode.containerInfo}if(!r)break;5!==(t=n.tag)&&6!==t||e.ancestors.push(n),n=jn(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var o=at(e.nativeEvent);r=e.topLevelType;var i=e.nativeEvent,l=e.eventSystemFlags;0===n&&(l|=64);for(var a=null,u=0;u<x.length;u++){var c=x[u];c&&(c=c.extractEvents(r,t,i,o,l))&&(a=nt(a,c))}lt(a)}}function pt(e,t,n){if(!n.has(e)){switch(e){case"scroll":qt(t,"scroll",!0);break;case"focus":case"blur":qt(t,"focus",!0),qt(t,"blur",!0),n.set("blur",null),n.set("focus",null);break;case"cancel":case"close":ut(e)&&qt(t,e,!0);break;case"invalid":case"submit":case"reset":break;default:-1===Ge.indexOf(e)&&$t(e,t)}n.set(e,null)}}var mt,ht,yt,gt=!1,vt=[],bt=null,wt=null,kt=null,xt=new Map,Et=new Map,St=[],Tt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),Ct="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");function Pt(e,t,n,r,o){return{blockedOn:e,topLevelType:t,eventSystemFlags:32|n,nativeEvent:o,container:r}}function _t(e,t){switch(e){case"focus":case"blur":bt=null;break;case"dragenter":case"dragleave":wt=null;break;case"mouseover":case"mouseout":kt=null;break;case"pointerover":case"pointerout":xt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Et.delete(t.pointerId)}}function Ot(e,t,n,r,o,i){return null===e||e.nativeEvent!==i?(e=Pt(t,n,r,o,i),null!==t&&null!==(t=Mn(t))&&ht(t),e):(e.eventSystemFlags|=r,e)}function Nt(e){var t=jn(e.target);if(null!==t){var n=Ze(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Je(n)))return e.blockedOn=t,void i.unstable_runWithPriority(e.priority,(function(){yt(n)}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function jt(e){if(null!==e.blockedOn)return!1;var t=Xt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);if(null!==t){var n=Mn(t);return null!==n&&ht(n),e.blockedOn=t,!1}return!0}function Mt(e,t,n){jt(e)&&n.delete(t)}function Rt(){for(gt=!1;0<vt.length;){var e=vt[0];if(null!==e.blockedOn){null!==(e=Mn(e.blockedOn))&&mt(e);break}var t=Xt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);null!==t?e.blockedOn=t:vt.shift()}null!==bt&&jt(bt)&&(bt=null),null!==wt&&jt(wt)&&(wt=null),null!==kt&&jt(kt)&&(kt=null),xt.forEach(Mt),Et.forEach(Mt)}function It(e,t){e.blockedOn===t&&(e.blockedOn=null,gt||(gt=!0,i.unstable_scheduleCallback(i.unstable_NormalPriority,Rt)))}function zt(e){function t(t){return It(t,e)}if(0<vt.length){It(vt[0],e);for(var n=1;n<vt.length;n++){var r=vt[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==bt&&It(bt,e),null!==wt&&It(wt,e),null!==kt&&It(kt,e),xt.forEach(t),Et.forEach(t),n=0;n<St.length;n++)(r=St[n]).blockedOn===e&&(r.blockedOn=null);for(;0<St.length&&null===(n=St[0]).blockedOn;)Nt(n),null===n.blockedOn&&St.shift()}var At={},Dt=new Map,Ft=new Map,Lt=["abort","abort",Qe,"animationEnd",$e,"animationIteration",qe,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Ke,"transitionEnd","waiting","waiting"];function Bt(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],o=e[n+1],i="on"+(o[0].toUpperCase()+o.slice(1));i={phasedRegistrationNames:{bubbled:i,captured:i+"Capture"},dependencies:[r],eventPriority:t},Ft.set(r,t),Dt.set(r,i),At[o]=i}}Bt("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Bt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Bt(Lt,2);for(var Wt="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),Ut=0;Ut<Wt.length;Ut++)Ft.set(Wt[Ut],0);var Ht=i.unstable_UserBlockingPriority,Vt=i.unstable_runWithPriority,Qt=!0;function $t(e,t){qt(t,e,!1)}function qt(e,t,n){var r=Ft.get(t);switch(void 0===r?2:r){case 0:r=Kt.bind(null,t,1,e);break;case 1:r=Gt.bind(null,t,1,e);break;default:r=Yt.bind(null,t,1,e)}n?e.addEventListener(t,r,!0):e.addEventListener(t,r,!1)}function Kt(e,t,n,r){F||A();var o=Yt,i=F;F=!0;try{z(o,e,t,n,r)}finally{(F=i)||B()}}function Gt(e,t,n,r){Vt(Ht,Yt.bind(null,e,t,n,r))}function Yt(e,t,n,r){if(Qt)if(0<vt.length&&-1<Tt.indexOf(e))e=Pt(null,e,t,n,r),vt.push(e);else{var o=Xt(e,t,n,r);if(null===o)_t(e,r);else if(-1<Tt.indexOf(e))e=Pt(o,e,t,n,r),vt.push(e);else if(!function(e,t,n,r,o){switch(t){case"focus":return bt=Ot(bt,e,t,n,r,o),!0;case"dragenter":return wt=Ot(wt,e,t,n,r,o),!0;case"mouseover":return kt=Ot(kt,e,t,n,r,o),!0;case"pointerover":var i=o.pointerId;return xt.set(i,Ot(xt.get(i)||null,e,t,n,r,o)),!0;case"gotpointercapture":return i=o.pointerId,Et.set(i,Ot(Et.get(i)||null,e,t,n,r,o)),!0}return!1}(o,e,t,n,r)){_t(e,r),e=ft(e,r,null,t);try{W(dt,e)}finally{st(e)}}}}function Xt(e,t,n,r){if(null!==(n=jn(n=at(r)))){var o=Ze(n);if(null===o)n=null;else{var i=o.tag;if(13===i){if(null!==(n=Je(o)))return n;n=null}else if(3===i){if(o.stateNode.hydrate)return 3===o.tag?o.stateNode.containerInfo:null;n=null}else o!==n&&(n=null)}}e=ft(e,r,n,t);try{W(dt,e)}finally{st(e)}return null}var Zt={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Jt=["Webkit","ms","Moz","O"];function en(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||Zt.hasOwnProperty(e)&&Zt[e]?(""+t).trim():t+"px"}function tn(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=en(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(Zt).forEach((function(e){Jt.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Zt[t]=Zt[e]}))}));var nn=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function rn(e,t){if(t){if(nn[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(l(137,e,""));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(l(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(l(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(l(62,""))}}function on(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var ln="http://www.w3.org/1999/xhtml";function an(e,t){var n=Xe(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=T[t];for(var r=0;r<t.length;r++)pt(t[r],e,n)}function un(){}function cn(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function sn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function fn(e,t){var n,r=sn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=sn(r)}}function dn(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?dn(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function pn(){for(var e=window,t=cn();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=cn((e=t.contentWindow).document)}return t}function mn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var hn="$",yn="/$",gn="$?",vn="$!",bn=null,wn=null;function kn(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function xn(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var En="function"==typeof setTimeout?setTimeout:void 0,Sn="function"==typeof clearTimeout?clearTimeout:void 0;function Tn(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function Cn(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if(n===hn||n===vn||n===gn){if(0===t)return e;t--}else n===yn&&t++}e=e.previousSibling}return null}var Pn=Math.random().toString(36).slice(2),_n="__reactInternalInstance$"+Pn,On="__reactEventHandlers$"+Pn,Nn="__reactContainere$"+Pn;function jn(e){var t=e[_n];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Nn]||n[_n]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=Cn(e);null!==e;){if(n=e[_n])return n;e=Cn(e)}return t}n=(e=n).parentNode}return null}function Mn(e){return!(e=e[_n]||e[Nn])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function Rn(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(l(33))}function In(e){return e[On]||null}function zn(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function An(e,t){var n=e.stateNode;if(!n)return null;var r=m(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(l(231,t,typeof n));return n}function Dn(e,t,n){(t=An(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=nt(n._dispatchListeners,t),n._dispatchInstances=nt(n._dispatchInstances,e))}function Fn(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=zn(t);for(t=n.length;0<t--;)Dn(n[t],"captured",e);for(t=0;t<n.length;t++)Dn(n[t],"bubbled",e)}}function Ln(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=An(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=nt(n._dispatchListeners,t),n._dispatchInstances=nt(n._dispatchInstances,e))}function Bn(e){e&&e.dispatchConfig.registrationName&&Ln(e._targetInst,null,e)}function Wn(e){rt(e,Fn)}var Un=null,Hn=null,Vn=null;function Qn(){if(Vn)return Vn;var e,t,n=Hn,r=n.length,o="value"in Un?Un.value:Un.textContent,i=o.length;for(e=0;e<r&&n[e]===o[e];e++);var l=r-e;for(t=1;t<=l&&n[r-t]===o[i-t];t++);return Vn=o.slice(e,1<t?1-t:void 0)}function $n(){return!0}function qn(){return!1}function Kn(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?$n:qn,this.isPropagationStopped=qn,this}function Gn(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function Yn(e){if(!(e instanceof this))throw Error(l(279));e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function Xn(e){e.eventPool=[],e.getPooled=Gn,e.release=Yn}o(Kn.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=$n)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=$n)},persist:function(){this.isPersistent=$n},isPersistent:qn,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=qn,this._dispatchInstances=this._dispatchListeners=null}}),Kn.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},Kn.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var i=new t;return o(i,n.prototype),n.prototype=i,n.prototype.constructor=n,n.Interface=o({},r.Interface,e),n.extend=r.extend,Xn(n),n},Xn(Kn);var Zn=Kn.extend({data:null}),Jn=Kn.extend({data:null}),er=[9,13,27,32],tr=P&&"CompositionEvent"in window,nr=null;P&&"documentMode"in document&&(nr=document.documentMode);var rr=P&&"TextEvent"in window&&!nr,or=P&&(!tr||nr&&8<nr&&11>=nr),ir=String.fromCharCode(32),lr={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},ar=!1;function ur(e,t){switch(e){case"keyup":return-1!==er.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function cr(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var sr=!1,fr={eventTypes:lr,extractEvents:function(e,t,n,r){var o;if(tr)e:{switch(e){case"compositionstart":var i=lr.compositionStart;break e;case"compositionend":i=lr.compositionEnd;break e;case"compositionupdate":i=lr.compositionUpdate;break e}i=void 0}else sr?ur(e,n)&&(i=lr.compositionEnd):"keydown"===e&&229===n.keyCode&&(i=lr.compositionStart);return i?(or&&"ko"!==n.locale&&(sr||i!==lr.compositionStart?i===lr.compositionEnd&&sr&&(o=Qn()):(Hn="value"in(Un=r)?Un.value:Un.textContent,sr=!0)),i=Zn.getPooled(i,t,n,r),(o||null!==(o=cr(n)))&&(i.data=o),Wn(i),o=i):o=null,(e=rr?function(e,t){switch(e){case"compositionend":return cr(t);case"keypress":return 32!==t.which?null:(ar=!0,ir);case"textInput":return(e=t.data)===ir&&ar?null:e;default:return null}}(e,n):function(e,t){if(sr)return"compositionend"===e||!tr&&ur(e,t)?(e=Qn(),Vn=Hn=Un=null,sr=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return or&&"ko"!==t.locale?null:t.data}}(e,n))?((t=Jn.getPooled(lr.beforeInput,t,n,r)).data=e,Wn(t)):t=null,null===o?t:null===t?o:[o,t]}},dr={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function pr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!dr[e.type]:"textarea"===t}var mr={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function hr(e,t,n){return(e=Kn.getPooled(mr.change,e,t,n)).type="change",M(n),Wn(e),e}var yr=null,gr=null;function vr(e){lt(e)}function br(e){if(ke(Rn(e)))return e}function wr(e,t){if("change"===e)return t}var kr=!1;function xr(){yr&&(yr.detachEvent("onpropertychange",Er),gr=yr=null)}function Er(e){if("value"===e.propertyName&&br(gr))if(e=hr(gr,e,at(e)),F)lt(e);else{F=!0;try{I(vr,e)}finally{F=!1,B()}}}function Sr(e,t,n){"focus"===e?(xr(),gr=n,(yr=t).attachEvent("onpropertychange",Er)):"blur"===e&&xr()}function Tr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return br(gr)}function Cr(e,t){if("click"===e)return br(t)}function Pr(e,t){if("input"===e||"change"===e)return br(t)}P&&(kr=ut("input")&&(!document.documentMode||9<document.documentMode));var _r={eventTypes:mr,_isInputEventSupported:kr,extractEvents:function(e,t,n,r){var o=t?Rn(t):window,i=o.nodeName&&o.nodeName.toLowerCase();if("select"===i||"input"===i&&"file"===o.type)var l=wr;else if(pr(o))if(kr)l=Pr;else{l=Tr;var a=Sr}else(i=o.nodeName)&&"input"===i.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(l=Cr);if(l&&(l=l(e,t)))return hr(l,n,r);a&&a(e,o,t),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&Pe(o,"number",o.value)}},Or=Kn.extend({view:null,detail:null}),Nr={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function jr(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Nr[e])&&!!t[e]}function Mr(){return jr}var Rr=0,Ir=0,zr=!1,Ar=!1,Dr=Or.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Mr,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Rr;return Rr=e.screenX,zr?"mousemove"===e.type?e.screenX-t:0:(zr=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=Ir;return Ir=e.screenY,Ar?"mousemove"===e.type?e.screenY-t:0:(Ar=!0,0)}}),Fr=Dr.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Lr={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Br={eventTypes:Lr,extractEvents:function(e,t,n,r,o){var i="mouseover"===e||"pointerover"===e,l="mouseout"===e||"pointerout"===e;if(i&&0==(32&o)&&(n.relatedTarget||n.fromElement)||!l&&!i)return null;if(i=r.window===r?r:(i=r.ownerDocument)?i.defaultView||i.parentWindow:window,l?(l=t,null!==(t=(t=n.relatedTarget||n.toElement)?jn(t):null)&&(t!==Ze(t)||5!==t.tag&&6!==t.tag)&&(t=null)):l=null,l===t)return null;if("mouseout"===e||"mouseover"===e)var a=Dr,u=Lr.mouseLeave,c=Lr.mouseEnter,s="mouse";else"pointerout"!==e&&"pointerover"!==e||(a=Fr,u=Lr.pointerLeave,c=Lr.pointerEnter,s="pointer");if(e=null==l?i:Rn(l),i=null==t?i:Rn(t),(u=a.getPooled(u,l,n,r)).type=s+"leave",u.target=e,u.relatedTarget=i,(n=a.getPooled(c,t,n,r)).type=s+"enter",n.target=i,n.relatedTarget=e,s=t,(r=l)&&s)e:{for(c=s,l=0,e=a=r;e;e=zn(e))l++;for(e=0,t=c;t;t=zn(t))e++;for(;0<l-e;)a=zn(a),l--;for(;0<e-l;)c=zn(c),e--;for(;l--;){if(a===c||a===c.alternate)break e;a=zn(a),c=zn(c)}a=null}else a=null;for(c=a,a=[];r&&r!==c&&(null===(l=r.alternate)||l!==c);)a.push(r),r=zn(r);for(r=[];s&&s!==c&&(null===(l=s.alternate)||l!==c);)r.push(s),s=zn(s);for(s=0;s<a.length;s++)Ln(a[s],"bubbled",u);for(s=r.length;0<s--;)Ln(r[s],"captured",n);return 0==(64&o)?[u]:[u,n]}},Wr="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},Ur=Object.prototype.hasOwnProperty;function Hr(e,t){if(Wr(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Ur.call(t,n[r])||!Wr(e[n[r]],t[n[r]]))return!1;return!0}var Vr=P&&"documentMode"in document&&11>=document.documentMode,Qr={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},$r=null,qr=null,Kr=null,Gr=!1;function Yr(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Gr||null==$r||$r!==cn(n)?null:(n="selectionStart"in(n=$r)&&mn(n)?{start:n.selectionStart,end:n.selectionEnd}:{anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Kr&&Hr(Kr,n)?null:(Kr=n,(e=Kn.getPooled(Qr.select,qr,e,t)).type="select",e.target=$r,Wn(e),e))}var Xr={eventTypes:Qr,extractEvents:function(e,t,n,r,o,i){if(!(i=!(o=i||(r.window===r?r.document:9===r.nodeType?r:r.ownerDocument)))){e:{o=Xe(o),i=T.onSelect;for(var l=0;l<i.length;l++)if(!o.has(i[l])){o=!1;break e}o=!0}i=!o}if(i)return null;switch(o=t?Rn(t):window,e){case"focus":(pr(o)||"true"===o.contentEditable)&&($r=o,qr=t,Kr=null);break;case"blur":Kr=qr=$r=null;break;case"mousedown":Gr=!0;break;case"contextmenu":case"mouseup":case"dragend":return Gr=!1,Yr(n,r);case"selectionchange":if(Vr)break;case"keydown":case"keyup":return Yr(n,r)}return null}},Zr=Kn.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Jr=Kn.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),eo=Or.extend({relatedTarget:null});function to(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var no={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},ro={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},oo=Or.extend({key:function(e){if(e.key){var t=no[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=to(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?ro[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Mr,charCode:function(e){return"keypress"===e.type?to(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?to(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),io=Dr.extend({dataTransfer:null}),lo=Or.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Mr}),ao=Kn.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),uo=Dr.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),co={eventTypes:At,extractEvents:function(e,t,n,r){var o=Dt.get(e);if(!o)return null;switch(e){case"keypress":if(0===to(n))return null;case"keydown":case"keyup":e=oo;break;case"blur":case"focus":e=eo;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Dr;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=io;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=lo;break;case Qe:case $e:case qe:e=Zr;break;case Ke:e=ao;break;case"scroll":e=Or;break;case"wheel":e=uo;break;case"copy":case"cut":case"paste":e=Jr;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Fr;break;default:e=Kn}return Wn(t=e.getPooled(o,t,n,r)),t}};if(v)throw Error(l(101));v=Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),w(),m=In,h=Mn,y=Rn,C({SimpleEventPlugin:co,EnterLeaveEventPlugin:Br,ChangeEventPlugin:_r,SelectEventPlugin:Xr,BeforeInputEventPlugin:fr});var so=[],fo=-1;function po(e){0>fo||(e.current=so[fo],so[fo]=null,fo--)}function mo(e,t){fo++,so[fo]=e.current,e.current=t}var ho={},yo={current:ho},go={current:!1},vo=ho;function bo(e,t){var n=e.type.contextTypes;if(!n)return ho;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in n)i[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function wo(e){return null!=e.childContextTypes}function ko(){po(go),po(yo)}function xo(e,t,n){if(yo.current!==ho)throw Error(l(168));mo(yo,t),mo(go,n)}function Eo(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var i in r=r.getChildContext())if(!(i in e))throw Error(l(108,ye(t)||"Unknown",i));return o({},n,{},r)}function So(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||ho,vo=yo.current,mo(yo,e),mo(go,go.current),!0}function To(e,t,n){var r=e.stateNode;if(!r)throw Error(l(169));n?(e=Eo(e,t,vo),r.__reactInternalMemoizedMergedChildContext=e,po(go),po(yo),mo(yo,e)):po(go),mo(go,n)}var Co=i.unstable_runWithPriority,Po=i.unstable_scheduleCallback,_o=i.unstable_cancelCallback,Oo=i.unstable_requestPaint,No=i.unstable_now,jo=i.unstable_getCurrentPriorityLevel,Mo=i.unstable_ImmediatePriority,Ro=i.unstable_UserBlockingPriority,Io=i.unstable_NormalPriority,zo=i.unstable_LowPriority,Ao=i.unstable_IdlePriority,Do={},Fo=i.unstable_shouldYield,Lo=void 0!==Oo?Oo:function(){},Bo=null,Wo=null,Uo=!1,Ho=No(),Vo=1e4>Ho?No:function(){return No()-Ho};function Qo(){switch(jo()){case Mo:return 99;case Ro:return 98;case Io:return 97;case zo:return 96;case Ao:return 95;default:throw Error(l(332))}}function $o(e){switch(e){case 99:return Mo;case 98:return Ro;case 97:return Io;case 96:return zo;case 95:return Ao;default:throw Error(l(332))}}function qo(e,t){return e=$o(e),Co(e,t)}function Ko(e,t,n){return e=$o(e),Po(e,t,n)}function Go(e){return null===Bo?(Bo=[e],Wo=Po(Mo,Xo)):Bo.push(e),Do}function Yo(){if(null!==Wo){var e=Wo;Wo=null,_o(e)}Xo()}function Xo(){if(!Uo&&null!==Bo){Uo=!0;var e=0;try{var t=Bo;qo(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Bo=null}catch(t){throw null!==Bo&&(Bo=Bo.slice(e+1)),Po(Mo,Yo),t}finally{Uo=!1}}}function Zo(e,t,n){return 1073741821-(1+((1073741821-e+t/10)/(n/=10)|0))*n}function Jo(e,t){if(e&&e.defaultProps)for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var ei={current:null},ti=null,ni=null,ri=null;function oi(){ri=ni=ti=null}function ii(e){var t=ei.current;po(ei),e.type._context._currentValue=t}function li(e,t){for(;null!==e;){var n=e.alternate;if(e.childExpirationTime<t)e.childExpirationTime=t,null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t);else{if(!(null!==n&&n.childExpirationTime<t))break;n.childExpirationTime=t}e=e.return}}function ai(e,t){ti=e,ri=ni=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(e.expirationTime>=t&&(Il=!0),e.firstContext=null)}function ui(e,t){if(ri!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(ri=e,t=1073741823),t={context:e,observedBits:t,next:null},null===ni){if(null===ti)throw Error(l(308));ni=t,ti.dependencies={expirationTime:0,firstContext:t,responders:null}}else ni=ni.next=t;return e._currentValue}var ci=!1;function si(e){e.updateQueue={baseState:e.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}function fi(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,baseQueue:e.baseQueue,shared:e.shared,effects:e.effects})}function di(e,t){return(e={expirationTime:e,suspenseConfig:t,tag:0,payload:null,callback:null,next:null}).next=e}function pi(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function mi(e,t){var n=e.alternate;null!==n&&fi(n,e),null===(n=(e=e.updateQueue).baseQueue)?(e.baseQueue=t.next=t,t.next=t):(t.next=n.next,n.next=t)}function hi(e,t,n,r){var i=e.updateQueue;ci=!1;var l=i.baseQueue,a=i.shared.pending;if(null!==a){if(null!==l){var u=l.next;l.next=a.next,a.next=u}l=a,i.shared.pending=null,null!==(u=e.alternate)&&null!==(u=u.updateQueue)&&(u.baseQueue=a)}if(null!==l){u=l.next;var c=i.baseState,s=0,f=null,d=null,p=null;if(null!==u)for(var m=u;;){if((a=m.expirationTime)<r){var h={expirationTime:m.expirationTime,suspenseConfig:m.suspenseConfig,tag:m.tag,payload:m.payload,callback:m.callback,next:null};null===p?(d=p=h,f=c):p=p.next=h,a>s&&(s=a)}else{null!==p&&(p=p.next={expirationTime:1073741823,suspenseConfig:m.suspenseConfig,tag:m.tag,payload:m.payload,callback:m.callback,next:null}),wu(a,m.suspenseConfig);e:{var y=e,g=m;switch(a=t,h=n,g.tag){case 1:if("function"==typeof(y=g.payload)){c=y.call(h,c,a);break e}c=y;break e;case 3:y.effectTag=-4097&y.effectTag|64;case 0:if(null==(a="function"==typeof(y=g.payload)?y.call(h,c,a):y))break e;c=o({},c,a);break e;case 2:ci=!0}}null!==m.callback&&(e.effectTag|=32,null===(a=i.effects)?i.effects=[m]:a.push(m))}if(null===(m=m.next)||m===u){if(null===(a=i.shared.pending))break;m=l.next=a.next,a.next=u,i.baseQueue=l=a,i.shared.pending=null}}null===p?f=c:p.next=d,i.baseState=f,i.baseQueue=p,ku(s),e.expirationTime=s,e.memoizedState=c}}function yi(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],o=r.callback;if(null!==o){if(r.callback=null,r=o,o=n,"function"!=typeof r)throw Error(l(191,r));r.call(o)}}}var gi=Y.ReactCurrentBatchConfig,vi=(new r.Component).refs;function bi(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:o({},t,n),e.memoizedState=n,0===e.expirationTime&&(e.updateQueue.baseState=n)}var wi={isMounted:function(e){return!!(e=e._reactInternalFiber)&&Ze(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=au(),o=gi.suspense;(o=di(r=uu(r,e,o),o)).payload=t,null!=n&&(o.callback=n),pi(e,o),cu(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=au(),o=gi.suspense;(o=di(r=uu(r,e,o),o)).tag=1,o.payload=t,null!=n&&(o.callback=n),pi(e,o),cu(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=au(),r=gi.suspense;(r=di(n=uu(n,e,r),r)).tag=2,null!=t&&(r.callback=t),pi(e,r),cu(e,n)}};function ki(e,t,n,r,o,i,l){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,i,l):!(t.prototype&&t.prototype.isPureReactComponent&&Hr(n,r)&&Hr(o,i))}function xi(e,t,n){var r=!1,o=ho,i=t.contextType;return"object"==typeof i&&null!==i?i=ui(i):(o=wo(t)?vo:yo.current,i=(r=null!=(r=t.contextTypes))?bo(e,o):ho),t=new t(n,i),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=wi,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=i),t}function Ei(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&wi.enqueueReplaceState(t,t.state,null)}function Si(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=vi,si(e);var i=t.contextType;"object"==typeof i&&null!==i?o.context=ui(i):(i=wo(t)?vo:yo.current,o.context=bo(e,i)),hi(e,n,o,r),o.state=e.memoizedState,"function"==typeof(i=t.getDerivedStateFromProps)&&(bi(e,t,i,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&wi.enqueueReplaceState(o,o.state,null),hi(e,n,o,r),o.state=e.memoizedState),"function"==typeof o.componentDidMount&&(e.effectTag|=4)}var Ti=Array.isArray;function Ci(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(l(309));var r=n.stateNode}if(!r)throw Error(l(147,e));var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:(t=function(e){var t=r.refs;t===vi&&(t=r.refs={}),null===e?delete t[o]:t[o]=e},t._stringRef=o,t)}if("string"!=typeof e)throw Error(l(284));if(!n._owner)throw Error(l(290,e))}return e}function Pi(e,t){if("textarea"!==e.type)throw Error(l(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,""))}function _i(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t){return(e=Wu(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function a(t){return e&&null===t.alternate&&(t.effectTag=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Vu(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=o(t,n.props)).ref=Ci(e,t,n),r.return=e,r):((r=Uu(n.type,n.key,n.props,null,e.mode,r)).ref=Ci(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Qu(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function f(e,t,n,r,i){return null===t||7!==t.tag?((t=Hu(n,e.mode,r,i)).return=e,t):((t=o(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Vu(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case ee:return(n=Uu(t.type,t.key,t.props,null,e.mode,n)).ref=Ci(e,null,t),n.return=e,n;case te:return(t=Qu(t,e.mode,n)).return=e,t}if(Ti(t)||he(t))return(t=Hu(t,e.mode,n,null)).return=e,t;Pi(e,t)}return null}function p(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case ee:return n.key===o?n.type===ne?f(e,t,n.props.children,r,o):c(e,t,n,r):null;case te:return n.key===o?s(e,t,n,r):null}if(Ti(n)||he(n))return null!==o?null:f(e,t,n,r,null);Pi(e,n)}return null}function m(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case ee:return e=e.get(null===r.key?n:r.key)||null,r.type===ne?f(t,e,r.props.children,o,r.key):c(t,e,r,o);case te:return s(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(Ti(r)||he(r))return f(t,e=e.get(n)||null,r,o,null);Pi(t,r)}return null}function h(o,l,a,u){for(var c=null,s=null,f=l,h=l=0,y=null;null!==f&&h<a.length;h++){f.index>h?(y=f,f=null):y=f.sibling;var g=p(o,f,a[h],u);if(null===g){null===f&&(f=y);break}e&&f&&null===g.alternate&&t(o,f),l=i(g,l,h),null===s?c=g:s.sibling=g,s=g,f=y}if(h===a.length)return n(o,f),c;if(null===f){for(;h<a.length;h++)null!==(f=d(o,a[h],u))&&(l=i(f,l,h),null===s?c=f:s.sibling=f,s=f);return c}for(f=r(o,f);h<a.length;h++)null!==(y=m(f,o,h,a[h],u))&&(e&&null!==y.alternate&&f.delete(null===y.key?h:y.key),l=i(y,l,h),null===s?c=y:s.sibling=y,s=y);return e&&f.forEach((function(e){return t(o,e)})),c}function y(o,a,u,c){var s=he(u);if("function"!=typeof s)throw Error(l(150));if(null==(u=s.call(u)))throw Error(l(151));for(var f=s=null,h=a,y=a=0,g=null,v=u.next();null!==h&&!v.done;y++,v=u.next()){h.index>y?(g=h,h=null):g=h.sibling;var b=p(o,h,v.value,c);if(null===b){null===h&&(h=g);break}e&&h&&null===b.alternate&&t(o,h),a=i(b,a,y),null===f?s=b:f.sibling=b,f=b,h=g}if(v.done)return n(o,h),s;if(null===h){for(;!v.done;y++,v=u.next())null!==(v=d(o,v.value,c))&&(a=i(v,a,y),null===f?s=v:f.sibling=v,f=v);return s}for(h=r(o,h);!v.done;y++,v=u.next())null!==(v=m(h,o,y,v.value,c))&&(e&&null!==v.alternate&&h.delete(null===v.key?y:v.key),a=i(v,a,y),null===f?s=v:f.sibling=v,f=v);return e&&h.forEach((function(e){return t(o,e)})),s}return function(e,r,i,u){var c="object"==typeof i&&null!==i&&i.type===ne&&null===i.key;c&&(i=i.props.children);var s="object"==typeof i&&null!==i;if(s)switch(i.$$typeof){case ee:e:{for(s=i.key,c=r;null!==c;){if(c.key===s){if(7===c.tag){if(i.type===ne){n(e,c.sibling),(r=o(c,i.props.children)).return=e,e=r;break e}}else if(c.elementType===i.type){n(e,c.sibling),(r=o(c,i.props)).ref=Ci(e,c,i),r.return=e,e=r;break e}n(e,c);break}t(e,c),c=c.sibling}i.type===ne?((r=Hu(i.props.children,e.mode,u,i.key)).return=e,e=r):((u=Uu(i.type,i.key,i.props,null,e.mode,u)).ref=Ci(e,r,i),u.return=e,e=u)}return a(e);case te:e:{for(c=i.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(e,r.sibling),(r=o(r,i.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Qu(i,e.mode,u)).return=e,e=r}return a(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,i)).return=e,e=r):(n(e,r),(r=Vu(i,e.mode,u)).return=e,e=r),a(e);if(Ti(i))return h(e,r,i,u);if(he(i))return y(e,r,i,u);if(s&&Pi(e,i),void 0===i&&!c)switch(e.tag){case 1:case 0:throw e=e.type,Error(l(152,e.displayName||e.name||"Component"))}return n(e,r)}}var Oi=_i(!0),Ni=_i(!1),ji={},Mi={current:ji},Ri={current:ji},Ii={current:ji};function zi(e){if(e===ji)throw Error(l(174));return e}function Ai(e,t){switch(mo(Ii,t),mo(Ri,e),mo(Mi,ji),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:ze(null,"");break;default:t=ze(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}po(Mi),mo(Mi,t)}function Di(){po(Mi),po(Ri),po(Ii)}function Fi(e){zi(Ii.current);var t=zi(Mi.current),n=ze(t,e.type);t!==n&&(mo(Ri,e),mo(Mi,n))}function Li(e){Ri.current===e&&(po(Mi),po(Ri))}var Bi={current:0};function Wi(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||n.data===gn||n.data===vn))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.effectTag))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}function Ui(e,t){return{responder:e,props:t}}var Hi=Y.ReactCurrentDispatcher,Vi=Y.ReactCurrentBatchConfig,Qi=0,$i=null,qi=null,Ki=null,Gi=!1;function Yi(){throw Error(l(321))}function Xi(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Wr(e[n],t[n]))return!1;return!0}function Zi(e,t,n,r,o,i){if(Qi=i,$i=t,t.memoizedState=null,t.updateQueue=null,t.expirationTime=0,Hi.current=null===e||null===e.memoizedState?kl:xl,e=n(r,o),t.expirationTime===Qi){i=0;do{if(t.expirationTime=0,!(25>i))throw Error(l(301));i+=1,Ki=qi=null,t.updateQueue=null,Hi.current=El,e=n(r,o)}while(t.expirationTime===Qi)}if(Hi.current=wl,t=null!==qi&&null!==qi.next,Qi=0,Ki=qi=$i=null,Gi=!1,t)throw Error(l(300));return e}function Ji(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Ki?$i.memoizedState=Ki=e:Ki=Ki.next=e,Ki}function el(){if(null===qi){var e=$i.alternate;e=null!==e?e.memoizedState:null}else e=qi.next;var t=null===Ki?$i.memoizedState:Ki.next;if(null!==t)Ki=t,qi=e;else{if(null===e)throw Error(l(310));e={memoizedState:(qi=e).memoizedState,baseState:qi.baseState,baseQueue:qi.baseQueue,queue:qi.queue,next:null},null===Ki?$i.memoizedState=Ki=e:Ki=Ki.next=e}return Ki}function tl(e,t){return"function"==typeof t?t(e):t}function nl(e){var t=el(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var r=qi,o=r.baseQueue,i=n.pending;if(null!==i){if(null!==o){var a=o.next;o.next=i.next,i.next=a}r.baseQueue=o=i,n.pending=null}if(null!==o){o=o.next,r=r.baseState;var u=a=i=null,c=o;do{var s=c.expirationTime;if(s<Qi){var f={expirationTime:c.expirationTime,suspenseConfig:c.suspenseConfig,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null};null===u?(a=u=f,i=r):u=u.next=f,s>$i.expirationTime&&($i.expirationTime=s,ku(s))}else null!==u&&(u=u.next={expirationTime:1073741823,suspenseConfig:c.suspenseConfig,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null}),wu(s,c.suspenseConfig),r=c.eagerReducer===e?c.eagerState:e(r,c.action);c=c.next}while(null!==c&&c!==o);null===u?i=r:u.next=a,Wr(r,t.memoizedState)||(Il=!0),t.memoizedState=r,t.baseState=i,t.baseQueue=u,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function rl(e){var t=el(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var r=n.dispatch,o=n.pending,i=t.memoizedState;if(null!==o){n.pending=null;var a=o=o.next;do{i=e(i,a.action),a=a.next}while(a!==o);Wr(i,t.memoizedState)||(Il=!0),t.memoizedState=i,null===t.baseQueue&&(t.baseState=i),n.lastRenderedState=i}return[i,r]}function ol(e){var t=Ji();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:tl,lastRenderedState:e}).dispatch=bl.bind(null,$i,e),[t.memoizedState,e]}function il(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=$i.updateQueue)?(t={lastEffect:null},$i.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function ll(){return el().memoizedState}function al(e,t,n,r){var o=Ji();$i.effectTag|=e,o.memoizedState=il(1|t,n,void 0,void 0===r?null:r)}function ul(e,t,n,r){var o=el();r=void 0===r?null:r;var i=void 0;if(null!==qi){var l=qi.memoizedState;if(i=l.destroy,null!==r&&Xi(r,l.deps))return void il(t,n,i,r)}$i.effectTag|=e,o.memoizedState=il(1|t,n,i,r)}function cl(e,t){return al(516,4,e,t)}function sl(e,t){return ul(516,4,e,t)}function fl(e,t){return ul(4,2,e,t)}function dl(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function pl(e,t,n){return n=null!=n?n.concat([e]):null,ul(4,2,dl.bind(null,t,e),n)}function ml(){}function hl(e,t){return Ji().memoizedState=[e,void 0===t?null:t],e}function yl(e,t){var n=el();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Xi(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function gl(e,t){var n=el();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Xi(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function vl(e,t,n){var r=Qo();qo(98>r?98:r,(function(){e(!0)})),qo(97<r?97:r,(function(){var r=Vi.suspense;Vi.suspense=void 0===t?null:t;try{e(!1),n()}finally{Vi.suspense=r}}))}function bl(e,t,n){var r=au(),o=gi.suspense;o={expirationTime:r=uu(r,e,o),suspenseConfig:o,action:n,eagerReducer:null,eagerState:null,next:null};var i=t.pending;if(null===i?o.next=o:(o.next=i.next,i.next=o),t.pending=o,i=e.alternate,e===$i||null!==i&&i===$i)Gi=!0,o.expirationTime=Qi,$i.expirationTime=Qi;else{if(0===e.expirationTime&&(null===i||0===i.expirationTime)&&null!==(i=t.lastRenderedReducer))try{var l=t.lastRenderedState,a=i(l,n);if(o.eagerReducer=i,o.eagerState=a,Wr(a,l))return}catch(e){}cu(e,r)}}var wl={readContext:ui,useCallback:Yi,useContext:Yi,useEffect:Yi,useImperativeHandle:Yi,useLayoutEffect:Yi,useMemo:Yi,useReducer:Yi,useRef:Yi,useState:Yi,useDebugValue:Yi,useResponder:Yi,useDeferredValue:Yi,useTransition:Yi},kl={readContext:ui,useCallback:hl,useContext:ui,useEffect:cl,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,al(4,2,dl.bind(null,t,e),n)},useLayoutEffect:function(e,t){return al(4,2,e,t)},useMemo:function(e,t){var n=Ji();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=Ji();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=bl.bind(null,$i,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Ji().memoizedState=e},useState:ol,useDebugValue:ml,useResponder:Ui,useDeferredValue:function(e,t){var n=ol(e),r=n[0],o=n[1];return cl((function(){var n=Vi.suspense;Vi.suspense=void 0===t?null:t;try{o(e)}finally{Vi.suspense=n}}),[e,t]),r},useTransition:function(e){var t=ol(!1),n=t[0];return t=t[1],[hl(vl.bind(null,t,e),[t,e]),n]}},xl={readContext:ui,useCallback:yl,useContext:ui,useEffect:sl,useImperativeHandle:pl,useLayoutEffect:fl,useMemo:gl,useReducer:nl,useRef:ll,useState:function(){return nl(tl)},useDebugValue:ml,useResponder:Ui,useDeferredValue:function(e,t){var n=nl(tl),r=n[0],o=n[1];return sl((function(){var n=Vi.suspense;Vi.suspense=void 0===t?null:t;try{o(e)}finally{Vi.suspense=n}}),[e,t]),r},useTransition:function(e){var t=nl(tl),n=t[0];return t=t[1],[yl(vl.bind(null,t,e),[t,e]),n]}},El={readContext:ui,useCallback:yl,useContext:ui,useEffect:sl,useImperativeHandle:pl,useLayoutEffect:fl,useMemo:gl,useReducer:rl,useRef:ll,useState:function(){return rl(tl)},useDebugValue:ml,useResponder:Ui,useDeferredValue:function(e,t){var n=rl(tl),r=n[0],o=n[1];return sl((function(){var n=Vi.suspense;Vi.suspense=void 0===t?null:t;try{o(e)}finally{Vi.suspense=n}}),[e,t]),r},useTransition:function(e){var t=rl(tl),n=t[0];return t=t[1],[yl(vl.bind(null,t,e),[t,e]),n]}},Sl=null,Tl=null,Cl=!1;function Pl(e,t){var n=Lu(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function _l(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);default:return!1}}function Ol(e){if(Cl){var t=Tl;if(t){var n=t;if(!_l(e,t)){if(!(t=Tn(n.nextSibling))||!_l(e,t))return e.effectTag=-1025&e.effectTag|2,Cl=!1,void(Sl=e);Pl(Sl,n)}Sl=e,Tl=Tn(t.firstChild)}else e.effectTag=-1025&e.effectTag|2,Cl=!1,Sl=e}}function Nl(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Sl=e}function jl(e){if(e!==Sl)return!1;if(!Cl)return Nl(e),Cl=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!xn(t,e.memoizedProps))for(t=Tl;t;)Pl(e,t),t=Tn(t.nextSibling);if(Nl(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(l(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if(n===yn){if(0===t){Tl=Tn(e.nextSibling);break e}t--}else n!==hn&&n!==vn&&n!==gn||t++}e=e.nextSibling}Tl=null}}else Tl=Sl?Tn(e.stateNode.nextSibling):null;return!0}function Ml(){Tl=Sl=null,Cl=!1}var Rl=Y.ReactCurrentOwner,Il=!1;function zl(e,t,n,r){t.child=null===e?Ni(t,null,n,r):Oi(t,e.child,n,r)}function Al(e,t,n,r,o){n=n.render;var i=t.ref;return ai(t,o),r=Zi(e,t,n,r,i,o),null===e||Il?(t.effectTag|=1,zl(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Jl(e,t,o))}function Dl(e,t,n,r,o,i){if(null===e){var l=n.type;return"function"!=typeof l||Bu(l)||void 0!==l.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Uu(n.type,null,r,null,t.mode,i)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=l,Fl(e,t,l,r,o,i))}return l=e.child,o<i&&(o=l.memoizedProps,(n=null!==(n=n.compare)?n:Hr)(o,r)&&e.ref===t.ref)?Jl(e,t,i):(t.effectTag|=1,(e=Wu(l,r)).ref=t.ref,e.return=t,t.child=e)}function Fl(e,t,n,r,o,i){return null!==e&&Hr(e.memoizedProps,r)&&e.ref===t.ref&&(Il=!1,o<i)?(t.expirationTime=e.expirationTime,Jl(e,t,i)):Bl(e,t,n,r,i)}function Ll(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function Bl(e,t,n,r,o){var i=wo(n)?vo:yo.current;return i=bo(t,i),ai(t,o),n=Zi(e,t,n,r,i,o),null===e||Il?(t.effectTag|=1,zl(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Jl(e,t,o))}function Wl(e,t,n,r,o){if(wo(n)){var i=!0;So(t)}else i=!1;if(ai(t,o),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),xi(t,n,r),Si(t,n,r,o),r=!0;else if(null===e){var l=t.stateNode,a=t.memoizedProps;l.props=a;var u=l.context,c=n.contextType;c="object"==typeof c&&null!==c?ui(c):bo(t,c=wo(n)?vo:yo.current);var s=n.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof l.getSnapshotBeforeUpdate;f||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(a!==r||u!==c)&&Ei(t,l,r,c),ci=!1;var d=t.memoizedState;l.state=d,hi(t,r,l,o),u=t.memoizedState,a!==r||d!==u||go.current||ci?("function"==typeof s&&(bi(t,n,s,r),u=t.memoizedState),(a=ci||ki(t,n,a,r,d,u,c))?(f||"function"!=typeof l.UNSAFE_componentWillMount&&"function"!=typeof l.componentWillMount||("function"==typeof l.componentWillMount&&l.componentWillMount(),"function"==typeof l.UNSAFE_componentWillMount&&l.UNSAFE_componentWillMount()),"function"==typeof l.componentDidMount&&(t.effectTag|=4)):("function"==typeof l.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=u),l.props=r,l.state=u,l.context=c,r=a):("function"==typeof l.componentDidMount&&(t.effectTag|=4),r=!1)}else l=t.stateNode,fi(e,t),a=t.memoizedProps,l.props=t.type===t.elementType?a:Jo(t.type,a),u=l.context,c="object"==typeof(c=n.contextType)&&null!==c?ui(c):bo(t,c=wo(n)?vo:yo.current),(f="function"==typeof(s=n.getDerivedStateFromProps)||"function"==typeof l.getSnapshotBeforeUpdate)||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(a!==r||u!==c)&&Ei(t,l,r,c),ci=!1,u=t.memoizedState,l.state=u,hi(t,r,l,o),d=t.memoizedState,a!==r||u!==d||go.current||ci?("function"==typeof s&&(bi(t,n,s,r),d=t.memoizedState),(s=ci||ki(t,n,a,r,u,d,c))?(f||"function"!=typeof l.UNSAFE_componentWillUpdate&&"function"!=typeof l.componentWillUpdate||("function"==typeof l.componentWillUpdate&&l.componentWillUpdate(r,d,c),"function"==typeof l.UNSAFE_componentWillUpdate&&l.UNSAFE_componentWillUpdate(r,d,c)),"function"==typeof l.componentDidUpdate&&(t.effectTag|=4),"function"==typeof l.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof l.componentDidUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof l.getSnapshotBeforeUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=d),l.props=r,l.state=d,l.context=c,r=s):("function"!=typeof l.componentDidUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof l.getSnapshotBeforeUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),r=!1);return Ul(e,t,n,r,i,o)}function Ul(e,t,n,r,o,i){Ll(e,t);var l=0!=(64&t.effectTag);if(!r&&!l)return o&&To(t,n,!1),Jl(e,t,i);r=t.stateNode,Rl.current=t;var a=l&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&l?(t.child=Oi(t,e.child,null,i),t.child=Oi(t,null,a,i)):zl(e,t,a,i),t.memoizedState=r.state,o&&To(t,n,!0),t.child}function Hl(e){var t=e.stateNode;t.pendingContext?xo(0,t.pendingContext,t.pendingContext!==t.context):t.context&&xo(0,t.context,!1),Ai(e,t.containerInfo)}var Vl,Ql,$l,ql,Kl={dehydrated:null,retryTime:0};function Gl(e,t,n){var r,o=t.mode,i=t.pendingProps,l=Bi.current,a=!1;if((r=0!=(64&t.effectTag))||(r=0!=(2&l)&&(null===e||null!==e.memoizedState)),r?(a=!0,t.effectTag&=-65):null!==e&&null===e.memoizedState||void 0===i.fallback||!0===i.unstable_avoidThisFallback||(l|=1),mo(Bi,1&l),null===e){if(void 0!==i.fallback&&Ol(t),a){if(a=i.fallback,(i=Hu(null,o,0,null)).return=t,0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,i.child=e;null!==e;)e.return=i,e=e.sibling;return(n=Hu(a,o,n,null)).return=t,i.sibling=n,t.memoizedState=Kl,t.child=i,n}return o=i.children,t.memoizedState=null,t.child=Ni(t,null,o,n)}if(null!==e.memoizedState){if(o=(e=e.child).sibling,a){if(i=i.fallback,(n=Wu(e,e.pendingProps)).return=t,0==(2&t.mode)&&(a=null!==t.memoizedState?t.child.child:t.child)!==e.child)for(n.child=a;null!==a;)a.return=n,a=a.sibling;return(o=Wu(o,i)).return=t,n.sibling=o,n.childExpirationTime=0,t.memoizedState=Kl,t.child=n,o}return n=Oi(t,e.child,i.children,n),t.memoizedState=null,t.child=n}if(e=e.child,a){if(a=i.fallback,(i=Hu(null,o,0,null)).return=t,i.child=e,null!==e&&(e.return=i),0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,i.child=e;null!==e;)e.return=i,e=e.sibling;return(n=Hu(a,o,n,null)).return=t,i.sibling=n,n.effectTag|=2,i.childExpirationTime=0,t.memoizedState=Kl,t.child=i,n}return t.memoizedState=null,t.child=Oi(t,e,i.children,n)}function Yl(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t),li(e.return,t)}function Xl(e,t,n,r,o,i){var l=e.memoizedState;null===l?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailExpiration:0,tailMode:o,lastEffect:i}:(l.isBackwards=t,l.rendering=null,l.renderingStartTime=0,l.last=r,l.tail=n,l.tailExpiration=0,l.tailMode=o,l.lastEffect=i)}function Zl(e,t,n){var r=t.pendingProps,o=r.revealOrder,i=r.tail;if(zl(e,t,r.children,n),0!=(2&(r=Bi.current)))r=1&r|2,t.effectTag|=64;else{if(null!==e&&0!=(64&e.effectTag))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Yl(e,n);else if(19===e.tag)Yl(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(mo(Bi,r),0==(2&t.mode))t.memoizedState=null;else switch(o){case"forwards":for(n=t.child,o=null;null!==n;)null!==(e=n.alternate)&&null===Wi(e)&&(o=n),n=n.sibling;null===(n=o)?(o=t.child,t.child=null):(o=n.sibling,n.sibling=null),Xl(t,!1,o,n,i,t.lastEffect);break;case"backwards":for(n=null,o=t.child,t.child=null;null!==o;){if(null!==(e=o.alternate)&&null===Wi(e)){t.child=o;break}e=o.sibling,o.sibling=n,n=o,o=e}Xl(t,!0,n,null,i,t.lastEffect);break;case"together":Xl(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function Jl(e,t,n){null!==e&&(t.dependencies=e.dependencies);var r=t.expirationTime;if(0!==r&&ku(r),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child)throw Error(l(153));if(null!==t.child){for(n=Wu(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Wu(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function ea(e,t){switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function ta(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:case 17:return wo(t.type)&&ko(),null;case 3:return Di(),po(go),po(yo),(n=t.stateNode).pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),null!==e&&null!==e.child||!jl(t)||(t.effectTag|=4),Ql(t),null;case 5:Li(t),n=zi(Ii.current);var i=t.type;if(null!==e&&null!=t.stateNode)$l(e,t,i,r,n),e.ref!==t.ref&&(t.effectTag|=128);else{if(!r){if(null===t.stateNode)throw Error(l(166));return null}if(e=zi(Mi.current),jl(t)){r=t.stateNode,i=t.type;var a=t.memoizedProps;switch(r[_n]=t,r[On]=a,i){case"iframe":case"object":case"embed":$t("load",r);break;case"video":case"audio":for(e=0;e<Ge.length;e++)$t(Ge[e],r);break;case"source":$t("error",r);break;case"img":case"image":case"link":$t("error",r),$t("load",r);break;case"form":$t("reset",r),$t("submit",r);break;case"details":$t("toggle",r);break;case"input":Ee(r,a),$t("invalid",r),an(n,"onChange");break;case"select":r._wrapperState={wasMultiple:!!a.multiple},$t("invalid",r),an(n,"onChange");break;case"textarea":je(r,a),$t("invalid",r),an(n,"onChange")}for(var u in rn(i,a),e=null,a)if(a.hasOwnProperty(u)){var c=a[u];"children"===u?"string"==typeof c?r.textContent!==c&&(e=["children",c]):"number"==typeof c&&r.textContent!==""+c&&(e=["children",""+c]):S.hasOwnProperty(u)&&null!=c&&an(n,u)}switch(i){case"input":we(r),Ce(r,a,!0);break;case"textarea":we(r),Re(r);break;case"select":case"option":break;default:"function"==typeof a.onClick&&(r.onclick=un)}n=e,t.updateQueue=n,null!==n&&(t.effectTag|=4)}else{switch(u=9===n.nodeType?n:n.ownerDocument,e===ln&&(e=Ie(i)),e===ln?"script"===i?((e=u.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=u.createElement(i,{is:r.is}):(e=u.createElement(i),"select"===i&&(u=e,r.multiple?u.multiple=!0:r.size&&(u.size=r.size))):e=u.createElementNS(e,i),e[_n]=t,e[On]=r,Vl(e,t,!1,!1),t.stateNode=e,u=on(i,r),i){case"iframe":case"object":case"embed":$t("load",e),c=r;break;case"video":case"audio":for(c=0;c<Ge.length;c++)$t(Ge[c],e);c=r;break;case"source":$t("error",e),c=r;break;case"img":case"image":case"link":$t("error",e),$t("load",e),c=r;break;case"form":$t("reset",e),$t("submit",e),c=r;break;case"details":$t("toggle",e),c=r;break;case"input":Ee(e,r),c=xe(e,r),$t("invalid",e),an(n,"onChange");break;case"option":c=_e(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},c=o({},r,{value:void 0}),$t("invalid",e),an(n,"onChange");break;case"textarea":je(e,r),c=Ne(e,r),$t("invalid",e),an(n,"onChange");break;default:c=r}rn(i,c);var s=c;for(a in s)if(s.hasOwnProperty(a)){var f=s[a];"style"===a?tn(e,f):"dangerouslySetInnerHTML"===a?null!=(f=f?f.__html:void 0)&&Fe(e,f):"children"===a?"string"==typeof f?("textarea"!==i||""!==f)&&Le(e,f):"number"==typeof f&&Le(e,""+f):"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&"autoFocus"!==a&&(S.hasOwnProperty(a)?null!=f&&an(n,a):null!=f&&X(e,a,f,u))}switch(i){case"input":we(e),Ce(e,r,!1);break;case"textarea":we(e),Re(e);break;case"option":null!=r.value&&e.setAttribute("value",""+ve(r.value));break;case"select":e.multiple=!!r.multiple,null!=(n=r.value)?Oe(e,!!r.multiple,n,!1):null!=r.defaultValue&&Oe(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof c.onClick&&(e.onclick=un)}kn(i,r)&&(t.effectTag|=4)}null!==t.ref&&(t.effectTag|=128)}return null;case 6:if(e&&null!=t.stateNode)ql(e,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(l(166));n=zi(Ii.current),zi(Mi.current),jl(t)?(n=t.stateNode,r=t.memoizedProps,n[_n]=t,n.nodeValue!==r&&(t.effectTag|=4)):((n=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[_n]=t,t.stateNode=n)}return null;case 13:return po(Bi),r=t.memoizedState,0!=(64&t.effectTag)?(t.expirationTime=n,t):(n=null!==r,r=!1,null===e?void 0!==t.memoizedProps.fallback&&jl(t):(r=null!==(i=e.memoizedState),n||null===i||null!==(i=e.child.sibling)&&(null!==(a=t.firstEffect)?(t.firstEffect=i,i.nextEffect=a):(t.firstEffect=t.lastEffect=i,i.nextEffect=null),i.effectTag=8)),n&&!r&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Bi.current)?Wa===ja&&(Wa=Ia):(Wa!==ja&&Wa!==Ia||(Wa=za),0!==$a&&null!==Fa&&(Ku(Fa,Ba),Gu(Fa,$a)))),(n||r)&&(t.effectTag|=4),null);case 4:return Di(),Ql(t),null;case 10:return ii(t),null;case 19:if(po(Bi),null===(r=t.memoizedState))return null;if(i=0!=(64&t.effectTag),null===(a=r.rendering)){if(i)ea(r,!1);else if(Wa!==ja||null!==e&&0!=(64&e.effectTag))for(a=t.child;null!==a;){if(null!==(e=Wi(a))){for(t.effectTag|=64,ea(r,!1),null!==(i=e.updateQueue)&&(t.updateQueue=i,t.effectTag|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=t.child;null!==r;)a=n,(i=r).effectTag&=2,i.nextEffect=null,i.firstEffect=null,i.lastEffect=null,null===(e=i.alternate)?(i.childExpirationTime=0,i.expirationTime=a,i.child=null,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null):(i.childExpirationTime=e.childExpirationTime,i.expirationTime=e.expirationTime,i.child=e.child,i.memoizedProps=e.memoizedProps,i.memoizedState=e.memoizedState,i.updateQueue=e.updateQueue,a=e.dependencies,i.dependencies=null===a?null:{expirationTime:a.expirationTime,firstContext:a.firstContext,responders:a.responders}),r=r.sibling;return mo(Bi,1&Bi.current|2),t.child}a=a.sibling}}else{if(!i)if(null!==(e=Wi(a))){if(t.effectTag|=64,i=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.effectTag|=4),ea(r,!0),null===r.tail&&"hidden"===r.tailMode&&!a.alternate)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*Vo()-r.renderingStartTime>r.tailExpiration&&1<n&&(t.effectTag|=64,i=!0,ea(r,!1),t.expirationTime=t.childExpirationTime=n-1);r.isBackwards?(a.sibling=t.child,t.child=a):(null!==(n=r.last)?n.sibling=a:t.child=a,r.last=a)}return null!==r.tail?(0===r.tailExpiration&&(r.tailExpiration=Vo()+500),n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=Vo(),n.sibling=null,t=Bi.current,mo(Bi,i?1&t|2:1&t),n):null}throw Error(l(156,t.tag))}function na(e){switch(e.tag){case 1:wo(e.type)&&ko();var t=e.effectTag;return 4096&t?(e.effectTag=-4097&t|64,e):null;case 3:if(Di(),po(go),po(yo),0!=(64&(t=e.effectTag)))throw Error(l(285));return e.effectTag=-4097&t|64,e;case 5:return Li(e),null;case 13:return po(Bi),4096&(t=e.effectTag)?(e.effectTag=-4097&t|64,e):null;case 19:return po(Bi),null;case 4:return Di(),null;case 10:return ii(e),null;default:return null}}function ra(e,t){return{value:e,source:t,stack:ge(t)}}Vl=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Ql=function(){},$l=function(e,t,n,r,i){var l=e.memoizedProps;if(l!==r){var a,u,c=t.stateNode;switch(zi(Mi.current),e=null,n){case"input":l=xe(c,l),r=xe(c,r),e=[];break;case"option":l=_e(c,l),r=_e(c,r),e=[];break;case"select":l=o({},l,{value:void 0}),r=o({},r,{value:void 0}),e=[];break;case"textarea":l=Ne(c,l),r=Ne(c,r),e=[];break;default:"function"!=typeof l.onClick&&"function"==typeof r.onClick&&(c.onclick=un)}for(a in rn(n,r),n=null,l)if(!r.hasOwnProperty(a)&&l.hasOwnProperty(a)&&null!=l[a])if("style"===a)for(u in c=l[a])c.hasOwnProperty(u)&&(n||(n={}),n[u]="");else"dangerouslySetInnerHTML"!==a&&"children"!==a&&"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&"autoFocus"!==a&&(S.hasOwnProperty(a)?e||(e=[]):(e=e||[]).push(a,null));for(a in r){var s=r[a];if(c=null!=l?l[a]:void 0,r.hasOwnProperty(a)&&s!==c&&(null!=s||null!=c))if("style"===a)if(c){for(u in c)!c.hasOwnProperty(u)||s&&s.hasOwnProperty(u)||(n||(n={}),n[u]="");for(u in s)s.hasOwnProperty(u)&&c[u]!==s[u]&&(n||(n={}),n[u]=s[u])}else n||(e||(e=[]),e.push(a,n)),n=s;else"dangerouslySetInnerHTML"===a?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(e=e||[]).push(a,s)):"children"===a?c===s||"string"!=typeof s&&"number"!=typeof s||(e=e||[]).push(a,""+s):"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&(S.hasOwnProperty(a)?(null!=s&&an(i,a),e||c===s||(e=[])):(e=e||[]).push(a,s))}n&&(e=e||[]).push("style",n),i=e,(t.updateQueue=i)&&(t.effectTag|=4)}},ql=function(e,t,n,r){n!==r&&(t.effectTag|=4)};var oa="function"==typeof WeakSet?WeakSet:Set;function ia(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=ge(n)),null!==n&&ye(n.type),t=t.value,null!==e&&1===e.tag&&ye(e.type);try{console.error(t)}catch(e){setTimeout((function(){throw e}))}}function la(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Ru(e,t)}else t.current=null}function aa(e,t){switch(t.tag){case 0:case 11:case 15:case 22:case 3:case 5:case 6:case 4:case 17:return;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:Jo(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return}throw Error(l(163))}function ua(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.destroy;n.destroy=void 0,void 0!==r&&r()}n=n.next}while(n!==t)}}function ca(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function sa(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:return void ca(3,n);case 1:if(e=n.stateNode,4&n.effectTag)if(null===t)e.componentDidMount();else{var r=n.elementType===n.type?t.memoizedProps:Jo(n.type,t.memoizedProps);e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate)}return void(null!==(t=n.updateQueue)&&yi(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:case 1:e=n.child.stateNode}yi(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.effectTag&&kn(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:case 19:case 17:case 20:case 21:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&zt(n)))))}throw Error(l(163))}function fa(e,t,n){switch("function"==typeof Du&&Du(t),t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var r=e.next;qo(97<n?97:n,(function(){var e=r;do{var n=e.destroy;if(void 0!==n){var o=t;try{n()}catch(e){Ru(o,e)}}e=e.next}while(e!==r)}))}break;case 1:la(t),"function"==typeof(n=t.stateNode).componentWillUnmount&&function(e,t){try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){Ru(e,t)}}(t,n);break;case 5:la(t);break;case 4:ga(e,t,n)}}function da(e){var t=e.alternate;e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.alternate=null,e.firstEffect=null,e.lastEffect=null,e.pendingProps=null,e.memoizedProps=null,e.stateNode=null,null!==t&&da(t)}function pa(e){return 5===e.tag||3===e.tag||4===e.tag}function ma(e){e:{for(var t=e.return;null!==t;){if(pa(t)){var n=t;break e}t=t.return}throw Error(l(160))}switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(l(161))}16&n.effectTag&&(Le(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||pa(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}r?ha(e,n,t):ya(e,n,t)}function ha(e,t,n){var r=e.tag,o=5===r||6===r;if(o)e=o?e.stateNode:e.stateNode.instance,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=un));else if(4!==r&&null!==(e=e.child))for(ha(e,t,n),e=e.sibling;null!==e;)ha(e,t,n),e=e.sibling}function ya(e,t,n){var r=e.tag,o=5===r||6===r;if(o)e=o?e.stateNode:e.stateNode.instance,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(ya(e,t,n),e=e.sibling;null!==e;)ya(e,t,n),e=e.sibling}function ga(e,t,n){for(var r,o,i=t,a=!1;;){if(!a){a=i.return;e:for(;;){if(null===a)throw Error(l(160));switch(r=a.stateNode,a.tag){case 5:o=!1;break e;case 3:case 4:r=r.containerInfo,o=!0;break e}a=a.return}a=!0}if(5===i.tag||6===i.tag){e:for(var u=e,c=i,s=n,f=c;;)if(fa(u,f,s),null!==f.child&&4!==f.tag)f.child.return=f,f=f.child;else{if(f===c)break e;for(;null===f.sibling;){if(null===f.return||f.return===c)break e;f=f.return}f.sibling.return=f.return,f=f.sibling}o?(u=r,c=i.stateNode,8===u.nodeType?u.parentNode.removeChild(c):u.removeChild(c)):r.removeChild(i.stateNode)}else if(4===i.tag){if(null!==i.child){r=i.stateNode.containerInfo,o=!0,i.child.return=i,i=i.child;continue}}else if(fa(e,i,n),null!==i.child){i.child.return=i,i=i.child;continue}if(i===t)break;for(;null===i.sibling;){if(null===i.return||i.return===t)return;4===(i=i.return).tag&&(a=!1)}i.sibling.return=i.return,i=i.sibling}}function va(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:return void ua(3,t);case 1:case 12:case 17:return;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps,o=null!==e?e.memoizedProps:r;e=t.type;var i=t.updateQueue;if(t.updateQueue=null,null!==i){for(n[On]=r,"input"===e&&"radio"===r.type&&null!=r.name&&Se(n,r),on(e,o),t=on(e,r),o=0;o<i.length;o+=2){var a=i[o],u=i[o+1];"style"===a?tn(n,u):"dangerouslySetInnerHTML"===a?Fe(n,u):"children"===a?Le(n,u):X(n,a,u,t)}switch(e){case"input":Te(n,r);break;case"textarea":Me(n,r);break;case"select":t=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(e=r.value)?Oe(n,!!r.multiple,e,!1):t!==!!r.multiple&&(null!=r.defaultValue?Oe(n,!!r.multiple,r.defaultValue,!0):Oe(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(l(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((t=t.stateNode).hydrate&&(t.hydrate=!1,zt(t.containerInfo)));case 13:if(n=t,null===t.memoizedState?r=!1:(r=!0,n=t.child,Ka=Vo()),null!==n)e:for(e=n;;){if(5===e.tag)i=e.stateNode,r?"function"==typeof(i=i.style).setProperty?i.setProperty("display","none","important"):i.display="none":(i=e.stateNode,o=null!=(o=e.memoizedProps.style)&&o.hasOwnProperty("display")?o.display:null,i.style.display=en("display",o));else if(6===e.tag)e.stateNode.nodeValue=r?"":e.memoizedProps;else{if(13===e.tag&&null!==e.memoizedState&&null===e.memoizedState.dehydrated){(i=e.child.sibling).return=e,e=i;continue}if(null!==e.child){e.child.return=e,e=e.child;continue}}if(e===n)break;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}return void ba(t);case 19:return void ba(t)}throw Error(l(163))}function ba(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new oa),t.forEach((function(t){var r=zu.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}var wa="function"==typeof WeakMap?WeakMap:Map;function ka(e,t,n){(n=di(n,null)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Xa||(Xa=!0,Za=r),ia(e,t)},n}function xa(e,t,n){(n=di(n,null)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return ia(e,t),r(o)}}var i=e.stateNode;return null!==i&&"function"==typeof i.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Ja?Ja=new Set([this]):Ja.add(this),ia(e,t));var n=t.stack;this.componentDidCatch(t.value,{componentStack:null!==n?n:""})}),n}var Ea,Sa=Math.ceil,Ta=Y.ReactCurrentDispatcher,Ca=Y.ReactCurrentOwner,Pa=0,_a=8,Oa=16,Na=32,ja=0,Ma=1,Ra=2,Ia=3,za=4,Aa=5,Da=Pa,Fa=null,La=null,Ba=0,Wa=ja,Ua=null,Ha=1073741823,Va=1073741823,Qa=null,$a=0,qa=!1,Ka=0,Ga=500,Ya=null,Xa=!1,Za=null,Ja=null,eu=!1,tu=null,nu=90,ru=null,ou=0,iu=null,lu=0;function au(){return(Da&(Oa|Na))!==Pa?1073741821-(Vo()/10|0):0!==lu?lu:lu=1073741821-(Vo()/10|0)}function uu(e,t,n){if(0==(2&(t=t.mode)))return 1073741823;var r=Qo();if(0==(4&t))return 99===r?1073741823:1073741822;if((Da&Oa)!==Pa)return Ba;if(null!==n)e=Zo(e,0|n.timeoutMs||5e3,250);else switch(r){case 99:e=1073741823;break;case 98:e=Zo(e,150,100);break;case 97:case 96:e=Zo(e,5e3,250);break;case 95:e=2;break;default:throw Error(l(326))}return null!==Fa&&e===Ba&&--e,e}function cu(e,t){if(50<ou)throw ou=0,iu=null,Error(l(185));if(null!==(e=su(e,t))){var n=Qo();1073741823===t?(Da&_a)!==Pa&&(Da&(Oa|Na))===Pa?mu(e):(du(e),Da===Pa&&Yo()):du(e),(4&Da)===Pa||98!==n&&99!==n||(null===ru?ru=new Map([[e,t]]):(void 0===(n=ru.get(e))||n>t)&&ru.set(e,t))}}function su(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,o=null;if(null===r&&3===e.tag)o=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return null!==o&&(Fa===o&&(ku(t),Wa===za&&Ku(o,Ba)),Gu(o,t)),o}function fu(e){var t=e.lastExpiredTime;if(0!==t)return t;if(!qu(e,t=e.firstPendingTime))return t;var n=e.lastPingedTime;return 2>=(e=n>(e=e.nextKnownPendingLevel)?n:e)&&t!==e?0:e}function du(e){if(0!==e.lastExpiredTime)e.callbackExpirationTime=1073741823,e.callbackPriority=99,e.callbackNode=Go(mu.bind(null,e));else{var t=fu(e),n=e.callbackNode;if(0===t)null!==n&&(e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90);else{var r=au();if(r=1073741823===t?99:1===t||2===t?95:0>=(r=10*(1073741821-t)-10*(1073741821-r))?99:250>=r?98:5250>=r?97:95,null!==n){var o=e.callbackPriority;if(e.callbackExpirationTime===t&&o>=r)return;n!==Do&&_o(n)}e.callbackExpirationTime=t,e.callbackPriority=r,t=1073741823===t?Go(mu.bind(null,e)):Ko(r,pu.bind(null,e),{timeout:10*(1073741821-t)-Vo()}),e.callbackNode=t}}}function pu(e,t){if(lu=0,t)return Yu(e,t=au()),du(e),null;var n=fu(e);if(0!==n){if(t=e.callbackNode,(Da&(Oa|Na))!==Pa)throw Error(l(327));if(Nu(),e===Fa&&n===Ba||gu(e,n),null!==La){var r=Da;Da|=Oa;for(var o=bu();;)try{Eu();break}catch(t){vu(e,t)}if(oi(),Da=r,Ta.current=o,Wa===Ma)throw t=Ua,gu(e,n),Ku(e,n),du(e),t;if(null===La)switch(o=e.finishedWork=e.current.alternate,e.finishedExpirationTime=n,r=Wa,Fa=null,r){case ja:case Ma:throw Error(l(345));case Ra:Yu(e,2<n?2:n);break;case Ia:if(Ku(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=Cu(o)),1073741823===Ha&&10<(o=Ka+Ga-Vo())){if(qa){var i=e.lastPingedTime;if(0===i||i>=n){e.lastPingedTime=n,gu(e,n);break}}if(0!==(i=fu(e))&&i!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}e.timeoutHandle=En(Pu.bind(null,e),o);break}Pu(e);break;case za:if(Ku(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=Cu(o)),qa&&(0===(o=e.lastPingedTime)||o>=n)){e.lastPingedTime=n,gu(e,n);break}if(0!==(o=fu(e))&&o!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}if(1073741823!==Va?r=10*(1073741821-Va)-Vo():1073741823===Ha?r=0:(r=10*(1073741821-Ha)-5e3,0>(r=(o=Vo())-r)&&(r=0),(n=10*(1073741821-n)-o)<(r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*Sa(r/1960))-r)&&(r=n)),10<r){e.timeoutHandle=En(Pu.bind(null,e),r);break}Pu(e);break;case Aa:if(1073741823!==Ha&&null!==Qa){i=Ha;var a=Qa;if(0>=(r=0|a.busyMinDurationMs)?r=0:(o=0|a.busyDelayMs,r=(i=Vo()-(10*(1073741821-i)-(0|a.timeoutMs||5e3)))<=o?0:o+r-i),10<r){Ku(e,n),e.timeoutHandle=En(Pu.bind(null,e),r);break}}Pu(e);break;default:throw Error(l(329))}if(du(e),e.callbackNode===t)return pu.bind(null,e)}}return null}function mu(e){var t=e.lastExpiredTime;if(t=0!==t?t:1073741823,(Da&(Oa|Na))!==Pa)throw Error(l(327));if(Nu(),e===Fa&&t===Ba||gu(e,t),null!==La){var n=Da;Da|=Oa;for(var r=bu();;)try{xu();break}catch(t){vu(e,t)}if(oi(),Da=n,Ta.current=r,Wa===Ma)throw n=Ua,gu(e,t),Ku(e,t),du(e),n;if(null!==La)throw Error(l(261));e.finishedWork=e.current.alternate,e.finishedExpirationTime=t,Fa=null,Pu(e),du(e)}return null}function hu(e,t){var n=Da;Da|=1;try{return e(t)}finally{(Da=n)===Pa&&Yo()}}function yu(e,t){var n=Da;Da&=-2,Da|=_a;try{return e(t)}finally{(Da=n)===Pa&&Yo()}}function gu(e,t){e.finishedWork=null,e.finishedExpirationTime=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,Sn(n)),null!==La)for(n=La.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&ko();break;case 3:Di(),po(go),po(yo);break;case 5:Li(r);break;case 4:Di();break;case 13:case 19:po(Bi);break;case 10:ii(r)}n=n.return}Fa=e,La=Wu(e.current,null),Ba=t,Wa=ja,Ua=null,Va=Ha=1073741823,Qa=null,$a=0,qa=!1}function vu(e,t){for(;;){try{if(oi(),Hi.current=wl,Gi)for(var n=$i.memoizedState;null!==n;){var r=n.queue;null!==r&&(r.pending=null),n=n.next}if(Qi=0,Ki=qi=$i=null,Gi=!1,null===La||null===La.return)return Wa=Ma,Ua=t,La=null;e:{var o=e,i=La.return,l=La,a=t;if(t=Ba,l.effectTag|=2048,l.firstEffect=l.lastEffect=null,null!==a&&"object"==typeof a&&"function"==typeof a.then){var u=a;if(0==(2&l.mode)){var c=l.alternate;c?(l.updateQueue=c.updateQueue,l.memoizedState=c.memoizedState,l.expirationTime=c.expirationTime):(l.updateQueue=null,l.memoizedState=null)}var s=0!=(1&Bi.current),f=i;do{var d;if(d=13===f.tag){var p=f.memoizedState;if(null!==p)d=null!==p.dehydrated;else{var m=f.memoizedProps;d=void 0!==m.fallback&&(!0!==m.unstable_avoidThisFallback||!s)}}if(d){var h=f.updateQueue;if(null===h){var y=new Set;y.add(u),f.updateQueue=y}else h.add(u);if(0==(2&f.mode)){if(f.effectTag|=64,l.effectTag&=-2981,1===l.tag)if(null===l.alternate)l.tag=17;else{var g=di(1073741823,null);g.tag=2,pi(l,g)}l.expirationTime=1073741823;break e}a=void 0,l=t;var v=o.pingCache;if(null===v?(v=o.pingCache=new wa,a=new Set,v.set(u,a)):void 0===(a=v.get(u))&&(a=new Set,v.set(u,a)),!a.has(l)){a.add(l);var b=Iu.bind(null,o,u,l);u.then(b,b)}f.effectTag|=4096,f.expirationTime=t;break e}f=f.return}while(null!==f);a=Error((ye(l.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+ge(l))}Wa!==Aa&&(Wa=Ra),a=ra(a,l),f=i;do{switch(f.tag){case 3:u=a,f.effectTag|=4096,f.expirationTime=t,mi(f,ka(f,u,t));break e;case 1:u=a;var w=f.type,k=f.stateNode;if(0==(64&f.effectTag)&&("function"==typeof w.getDerivedStateFromError||null!==k&&"function"==typeof k.componentDidCatch&&(null===Ja||!Ja.has(k)))){f.effectTag|=4096,f.expirationTime=t,mi(f,xa(f,u,t));break e}}f=f.return}while(null!==f)}La=Tu(La)}catch(e){t=e;continue}break}}function bu(){var e=Ta.current;return Ta.current=wl,null===e?wl:e}function wu(e,t){e<Ha&&2<e&&(Ha=e),null!==t&&e<Va&&2<e&&(Va=e,Qa=t)}function ku(e){e>$a&&($a=e)}function xu(){for(;null!==La;)La=Su(La)}function Eu(){for(;null!==La&&!Fo();)La=Su(La)}function Su(e){var t=Ea(e.alternate,e,Ba);return e.memoizedProps=e.pendingProps,null===t&&(t=Tu(e)),Ca.current=null,t}function Tu(e){La=e;do{var t=La.alternate;if(e=La.return,0==(2048&La.effectTag)){if(t=ta(t,La,Ba),1===Ba||1!==La.childExpirationTime){for(var n=0,r=La.child;null!==r;){var o=r.expirationTime,i=r.childExpirationTime;o>n&&(n=o),i>n&&(n=i),r=r.sibling}La.childExpirationTime=n}if(null!==t)return t;null!==e&&0==(2048&e.effectTag)&&(null===e.firstEffect&&(e.firstEffect=La.firstEffect),null!==La.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=La.firstEffect),e.lastEffect=La.lastEffect),1<La.effectTag&&(null!==e.lastEffect?e.lastEffect.nextEffect=La:e.firstEffect=La,e.lastEffect=La))}else{if(null!==(t=na(La)))return t.effectTag&=2047,t;null!==e&&(e.firstEffect=e.lastEffect=null,e.effectTag|=2048)}if(null!==(t=La.sibling))return t;La=e}while(null!==La);return Wa===ja&&(Wa=Aa),null}function Cu(e){var t=e.expirationTime;return t>(e=e.childExpirationTime)?t:e}function Pu(e){var t=Qo();return qo(99,_u.bind(null,e,t)),null}function _u(e,t){do{Nu()}while(null!==tu);if((Da&(Oa|Na))!==Pa)throw Error(l(327));var n=e.finishedWork,r=e.finishedExpirationTime;if(null===n)return null;if(e.finishedWork=null,e.finishedExpirationTime=0,n===e.current)throw Error(l(177));e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90,e.nextKnownPendingLevel=0;var o=Cu(n);if(e.firstPendingTime=o,r<=e.lastSuspendedTime?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:r<=e.firstSuspendedTime&&(e.firstSuspendedTime=r-1),r<=e.lastPingedTime&&(e.lastPingedTime=0),r<=e.lastExpiredTime&&(e.lastExpiredTime=0),e===Fa&&(La=Fa=null,Ba=0),1<n.effectTag?null!==n.lastEffect?(n.lastEffect.nextEffect=n,o=n.firstEffect):o=n:o=n.firstEffect,null!==o){var i=Da;Da|=Na,Ca.current=null,bn=Qt;var a=pn();if(mn(a)){if("selectionStart"in a)var u={start:a.selectionStart,end:a.selectionEnd};else e:{var c=(u=(u=a.ownerDocument)&&u.defaultView||window).getSelection&&u.getSelection();if(c&&0!==c.rangeCount){u=c.anchorNode;var s=c.anchorOffset,f=c.focusNode;c=c.focusOffset;try{u.nodeType,f.nodeType}catch(e){u=null;break e}var d=0,p=-1,m=-1,h=0,y=0,g=a,v=null;t:for(;;){for(var b;g!==u||0!==s&&3!==g.nodeType||(p=d+s),g!==f||0!==c&&3!==g.nodeType||(m=d+c),3===g.nodeType&&(d+=g.nodeValue.length),null!==(b=g.firstChild);)v=g,g=b;for(;;){if(g===a)break t;if(v===u&&++h===s&&(p=d),v===f&&++y===c&&(m=d),null!==(b=g.nextSibling))break;v=(g=v).parentNode}g=b}u=-1===p||-1===m?null:{start:p,end:m}}else u=null}u=u||{start:0,end:0}}else u=null;wn={activeElementDetached:null,focusedElem:a,selectionRange:u},Qt=!1,Ya=o;do{try{Ou()}catch(e){if(null===Ya)throw Error(l(330));Ru(Ya,e),Ya=Ya.nextEffect}}while(null!==Ya);Ya=o;do{try{for(a=e,u=t;null!==Ya;){var w=Ya.effectTag;if(16&w&&Le(Ya.stateNode,""),128&w){var k=Ya.alternate;if(null!==k){var x=k.ref;null!==x&&("function"==typeof x?x(null):x.current=null)}}switch(1038&w){case 2:ma(Ya),Ya.effectTag&=-3;break;case 6:ma(Ya),Ya.effectTag&=-3,va(Ya.alternate,Ya);break;case 1024:Ya.effectTag&=-1025;break;case 1028:Ya.effectTag&=-1025,va(Ya.alternate,Ya);break;case 4:va(Ya.alternate,Ya);break;case 8:ga(a,s=Ya,u),da(s)}Ya=Ya.nextEffect}}catch(e){if(null===Ya)throw Error(l(330));Ru(Ya,e),Ya=Ya.nextEffect}}while(null!==Ya);if(x=wn,k=pn(),w=x.focusedElem,u=x.selectionRange,k!==w&&w&&w.ownerDocument&&dn(w.ownerDocument.documentElement,w)){null!==u&&mn(w)&&(k=u.start,void 0===(x=u.end)&&(x=k),"selectionStart"in w?(w.selectionStart=k,w.selectionEnd=Math.min(x,w.value.length)):(x=(k=w.ownerDocument||document)&&k.defaultView||window).getSelection&&(x=x.getSelection(),s=w.textContent.length,a=Math.min(u.start,s),u=void 0===u.end?a:Math.min(u.end,s),!x.extend&&a>u&&(s=u,u=a,a=s),s=fn(w,a),f=fn(w,u),s&&f&&(1!==x.rangeCount||x.anchorNode!==s.node||x.anchorOffset!==s.offset||x.focusNode!==f.node||x.focusOffset!==f.offset)&&((k=k.createRange()).setStart(s.node,s.offset),x.removeAllRanges(),a>u?(x.addRange(k),x.extend(f.node,f.offset)):(k.setEnd(f.node,f.offset),x.addRange(k))))),k=[];for(x=w;x=x.parentNode;)1===x.nodeType&&k.push({element:x,left:x.scrollLeft,top:x.scrollTop});for("function"==typeof w.focus&&w.focus(),w=0;w<k.length;w++)(x=k[w]).element.scrollLeft=x.left,x.element.scrollTop=x.top}Qt=!!bn,wn=bn=null,e.current=n,Ya=o;do{try{for(w=e;null!==Ya;){var E=Ya.effectTag;if(36&E&&sa(w,Ya.alternate,Ya),128&E){k=void 0;var S=Ya.ref;if(null!==S){var T=Ya.stateNode;Ya.tag,k=T,"function"==typeof S?S(k):S.current=k}}Ya=Ya.nextEffect}}catch(e){if(null===Ya)throw Error(l(330));Ru(Ya,e),Ya=Ya.nextEffect}}while(null!==Ya);Ya=null,Lo(),Da=i}else e.current=n;if(eu)eu=!1,tu=e,nu=t;else for(Ya=o;null!==Ya;)t=Ya.nextEffect,Ya.nextEffect=null,Ya=t;if(0===(t=e.firstPendingTime)&&(Ja=null),1073741823===t?e===iu?ou++:(ou=0,iu=e):ou=0,"function"==typeof Au&&Au(n.stateNode,r),du(e),Xa)throw Xa=!1,e=Za,Za=null,e;return(Da&_a)!==Pa||Yo(),null}function Ou(){for(;null!==Ya;){var e=Ya.effectTag;0!=(256&e)&&aa(Ya.alternate,Ya),0==(512&e)||eu||(eu=!0,Ko(97,(function(){return Nu(),null}))),Ya=Ya.nextEffect}}function Nu(){if(90!==nu){var e=97<nu?97:nu;return nu=90,qo(e,ju)}}function ju(){if(null===tu)return!1;var e=tu;if(tu=null,(Da&(Oa|Na))!==Pa)throw Error(l(331));var t=Da;for(Da|=Na,e=e.current.firstEffect;null!==e;){try{var n=e;if(0!=(512&n.effectTag))switch(n.tag){case 0:case 11:case 15:case 22:ua(5,n),ca(5,n)}}catch(t){if(null===e)throw Error(l(330));Ru(e,t)}n=e.nextEffect,e.nextEffect=null,e=n}return Da=t,Yo(),!0}function Mu(e,t,n){pi(e,t=ka(e,t=ra(n,t),1073741823)),null!==(e=su(e,1073741823))&&du(e)}function Ru(e,t){if(3===e.tag)Mu(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){Mu(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Ja||!Ja.has(r))){pi(n,e=xa(n,e=ra(t,e),1073741823)),null!==(n=su(n,1073741823))&&du(n);break}}n=n.return}}function Iu(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),Fa===e&&Ba===n?Wa===za||Wa===Ia&&1073741823===Ha&&Vo()-Ka<Ga?gu(e,Ba):qa=!0:qu(e,n)&&(0!==(t=e.lastPingedTime)&&t<n||(e.lastPingedTime=n,du(e)))}function zu(e,t){var n=e.stateNode;null!==n&&n.delete(t),0==(t=0)&&(t=uu(t=au(),e,null)),null!==(e=su(e,t))&&du(e)}Ea=function(e,t,n){var r=t.expirationTime;if(null!==e){var o=t.pendingProps;if(e.memoizedProps!==o||go.current)Il=!0;else{if(r<n){switch(Il=!1,t.tag){case 3:Hl(t),Ml();break;case 5:if(Fi(t),4&t.mode&&1!==n&&o.hidden)return t.expirationTime=t.childExpirationTime=1,null;break;case 1:wo(t.type)&&So(t);break;case 4:Ai(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value,o=t.type._context,mo(ei,o._currentValue),o._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?Gl(e,t,n):(mo(Bi,1&Bi.current),null!==(t=Jl(e,t,n))?t.sibling:null);mo(Bi,1&Bi.current);break;case 19:if(r=t.childExpirationTime>=n,0!=(64&e.effectTag)){if(r)return Zl(e,t,n);t.effectTag|=64}if(null!==(o=t.memoizedState)&&(o.rendering=null,o.tail=null),mo(Bi,Bi.current),!r)return null}return Jl(e,t,n)}Il=!1}}else Il=!1;switch(t.expirationTime=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,o=bo(t,yo.current),ai(t,n),o=Zi(null,t,r,e,o,n),t.effectTag|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,wo(r)){var i=!0;So(t)}else i=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null,si(t);var a=r.getDerivedStateFromProps;"function"==typeof a&&bi(t,r,a,e),o.updater=wi,t.stateNode=o,o._reactInternalFiber=t,Si(t,r,e,n),t=Ul(null,t,r,!0,i,n)}else t.tag=0,zl(null,t,o,n),t=t.child;return t;case 16:e:{if(o=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,function(e){if(-1===e._status){e._status=0;var t=e._ctor;t=t(),e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}}(o),1!==o._status)throw o._result;switch(o=o._result,t.type=o,i=t.tag=function(e){if("function"==typeof e)return Bu(e)?1:0;if(null!=e){if((e=e.$$typeof)===ue)return 11;if(e===fe)return 14}return 2}(o),e=Jo(o,e),i){case 0:t=Bl(null,t,o,e,n);break e;case 1:t=Wl(null,t,o,e,n);break e;case 11:t=Al(null,t,o,e,n);break e;case 14:t=Dl(null,t,o,Jo(o.type,e),r,n);break e}throw Error(l(306,o,""))}return t;case 0:return r=t.type,o=t.pendingProps,Bl(e,t,r,o=t.elementType===r?o:Jo(r,o),n);case 1:return r=t.type,o=t.pendingProps,Wl(e,t,r,o=t.elementType===r?o:Jo(r,o),n);case 3:if(Hl(t),r=t.updateQueue,null===e||null===r)throw Error(l(282));if(r=t.pendingProps,o=null!==(o=t.memoizedState)?o.element:null,fi(e,t),hi(t,r,null,n),(r=t.memoizedState.element)===o)Ml(),t=Jl(e,t,n);else{if((o=t.stateNode.hydrate)&&(Tl=Tn(t.stateNode.containerInfo.firstChild),Sl=t,o=Cl=!0),o)for(n=Ni(t,null,r,n),t.child=n;n;)n.effectTag=-3&n.effectTag|1024,n=n.sibling;else zl(e,t,r,n),Ml();t=t.child}return t;case 5:return Fi(t),null===e&&Ol(t),r=t.type,o=t.pendingProps,i=null!==e?e.memoizedProps:null,a=o.children,xn(r,o)?a=null:null!==i&&xn(r,i)&&(t.effectTag|=16),Ll(e,t),4&t.mode&&1!==n&&o.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(zl(e,t,a,n),t=t.child),t;case 6:return null===e&&Ol(t),null;case 13:return Gl(e,t,n);case 4:return Ai(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Oi(t,null,r,n):zl(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,Al(e,t,r,o=t.elementType===r?o:Jo(r,o),n);case 7:return zl(e,t,t.pendingProps,n),t.child;case 8:case 12:return zl(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,o=t.pendingProps,a=t.memoizedProps,i=o.value;var u=t.type._context;if(mo(ei,u._currentValue),u._currentValue=i,null!==a)if(u=a.value,0==(i=Wr(u,i)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,i):1073741823))){if(a.children===o.children&&!go.current){t=Jl(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var c=u.dependencies;if(null!==c){a=u.child;for(var s=c.firstContext;null!==s;){if(s.context===r&&0!=(s.observedBits&i)){1===u.tag&&((s=di(n,null)).tag=2,pi(u,s)),u.expirationTime<n&&(u.expirationTime=n),null!==(s=u.alternate)&&s.expirationTime<n&&(s.expirationTime=n),li(u.return,n),c.expirationTime<n&&(c.expirationTime=n);break}s=s.next}}else a=10===u.tag&&u.type===t.type?null:u.child;if(null!==a)a.return=u;else for(a=u;null!==a;){if(a===t){a=null;break}if(null!==(u=a.sibling)){u.return=a.return,a=u;break}a=a.return}u=a}zl(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=(i=t.pendingProps).children,ai(t,n),r=r(o=ui(o,i.unstable_observedBits)),t.effectTag|=1,zl(e,t,r,n),t.child;case 14:return i=Jo(o=t.type,t.pendingProps),Dl(e,t,o,i=Jo(o.type,i),r,n);case 15:return Fl(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:Jo(r,o),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,wo(r)?(e=!0,So(t)):e=!1,ai(t,n),xi(t,r,o),Si(t,r,o,n),Ul(null,t,r,!0,e,n);case 19:return Zl(e,t,n)}throw Error(l(156,t.tag))};var Au=null,Du=null;function Fu(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Lu(e,t,n,r){return new Fu(e,t,n,r)}function Bu(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Wu(e,t){var n=e.alternate;return null===n?((n=Lu(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{expirationTime:t.expirationTime,firstContext:t.firstContext,responders:t.responders},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Uu(e,t,n,r,o,i){var a=2;if(r=e,"function"==typeof e)Bu(e)&&(a=1);else if("string"==typeof e)a=5;else e:switch(e){case ne:return Hu(n.children,o,i,t);case ae:a=8,o|=7;break;case re:a=8,o|=1;break;case oe:return(e=Lu(12,n,t,8|o)).elementType=oe,e.type=oe,e.expirationTime=i,e;case ce:return(e=Lu(13,n,t,o)).type=ce,e.elementType=ce,e.expirationTime=i,e;case se:return(e=Lu(19,n,t,o)).elementType=se,e.expirationTime=i,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case ie:a=10;break e;case le:a=9;break e;case ue:a=11;break e;case fe:a=14;break e;case de:a=16,r=null;break e;case pe:a=22;break e}throw Error(l(130,null==e?e:typeof e,""))}return(t=Lu(a,n,t,o)).elementType=e,t.type=r,t.expirationTime=i,t}function Hu(e,t,n,r){return(e=Lu(7,e,r,t)).expirationTime=n,e}function Vu(e,t,n){return(e=Lu(6,e,null,t)).expirationTime=n,e}function Qu(e,t,n){return(t=Lu(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function $u(e,t,n){this.tag=t,this.current=null,this.containerInfo=e,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}function qu(e,t){var n=e.firstSuspendedTime;return e=e.lastSuspendedTime,0!==n&&n>=t&&e<=t}function Ku(e,t){var n=e.firstSuspendedTime,r=e.lastSuspendedTime;n<t&&(e.firstSuspendedTime=t),(r>t||0===n)&&(e.lastSuspendedTime=t),t<=e.lastPingedTime&&(e.lastPingedTime=0),t<=e.lastExpiredTime&&(e.lastExpiredTime=0)}function Gu(e,t){t>e.firstPendingTime&&(e.firstPendingTime=t);var n=e.firstSuspendedTime;0!==n&&(t>=n?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:t>=e.lastSuspendedTime&&(e.lastSuspendedTime=t+1),t>e.nextKnownPendingLevel&&(e.nextKnownPendingLevel=t))}function Yu(e,t){var n=e.lastExpiredTime;(0===n||n>t)&&(e.lastExpiredTime=t)}function Xu(e,t,n,r){var o=t.current,i=au(),a=gi.suspense;i=uu(i,o,a);e:if(n){t:{if(Ze(n=n._reactInternalFiber)!==n||1!==n.tag)throw Error(l(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(wo(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(l(171))}if(1===n.tag){var c=n.type;if(wo(c)){n=Eo(n,c,u);break e}}n=u}else n=ho;return null===t.context?t.context=n:t.pendingContext=n,(t=di(i,a)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),pi(o,t),cu(o,i),i}function Zu(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Ju(e,t){null!==(e=e.memoizedState)&&null!==e.dehydrated&&e.retryTime<t&&(e.retryTime=t)}function ec(e,t){Ju(e,t),(e=e.alternate)&&Ju(e,t)}function tc(e,t,n){var r=new $u(e,t,n=null!=n&&!0===n.hydrate),o=Lu(3,null,null,2===t?7:1===t?3:0);r.current=o,o.stateNode=r,si(o),e[Nn]=r.current,n&&0!==t&&function(e,t){var n=Xe(t);Tt.forEach((function(e){pt(e,t,n)})),Ct.forEach((function(e){pt(e,t,n)}))}(0,9===e.nodeType?e:e.ownerDocument),this._internalRoot=r}function nc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function rc(e,t,n,r,o){var i=n._reactRootContainer;if(i){var l=i._internalRoot;if("function"==typeof o){var a=o;o=function(){var e=Zu(l);a.call(e)}}Xu(t,l,e,o)}else{if(i=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new tc(e,0,t?{hydrate:!0}:void 0)}(n,r),l=i._internalRoot,"function"==typeof o){var u=o;o=function(){var e=Zu(l);u.call(e)}}yu((function(){Xu(t,l,e,o)}))}return Zu(l)}function oc(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!nc(t))throw Error(l(200));return function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:te,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)}tc.prototype.render=function(e){Xu(e,this._internalRoot,null,null)},tc.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Xu(null,e,null,(function(){t[Nn]=null}))},mt=function(e){if(13===e.tag){var t=Zo(au(),150,100);cu(e,t),ec(e,t)}},ht=function(e){13===e.tag&&(cu(e,3),ec(e,3))},yt=function(e){if(13===e.tag){var t=au();cu(e,t=uu(t,e,null)),ec(e,t)}},_=function(e,t,n){switch(t){case"input":if(Te(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=In(r);if(!o)throw Error(l(90));ke(r),Te(r,o)}}}break;case"textarea":Me(e,n);break;case"select":null!=(t=n.value)&&Oe(e,!!n.multiple,t,!1)}},I=hu,z=function(e,t,n,r,o){var i=Da;Da|=4;try{return qo(98,e.bind(null,t,n,r,o))}finally{(Da=i)===Pa&&Yo()}},A=function(){(Da&(1|Oa|Na))===Pa&&(function(){if(null!==ru){var e=ru;ru=null,e.forEach((function(e,t){Yu(t,e),du(t)})),Yo()}}(),Nu())},D=function(e,t){var n=Da;Da|=2;try{return e(t)}finally{(Da=n)===Pa&&Yo()}};var ic={Events:[Mn,Rn,In,C,E,Wn,function(e){rt(e,Bn)},M,R,Yt,lt,Nu,{current:!1}]};!function(e){var t=e.findFiberByHostInstance;!function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);Au=function(e){try{t.onCommitFiberRoot(n,e,void 0,64==(64&e.current.effectTag))}catch(e){}},Du=function(e){try{t.onCommitFiberUnmount(n,e)}catch(e){}}}catch(e){}}(o({},e,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:Y.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=tt(e))?null:e.stateNode},findFiberByHostInstance:function(e){return t?t(e):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null}))}({findFiberByHostInstance:jn,bundleType:0,version:"16.14.0",rendererPackageName:"react-dom"}),t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ic,t.createPortal=oc,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;if(void 0===t){if("function"==typeof e.render)throw Error(l(188));throw Error(l(268,Object.keys(e)))}return null===(e=tt(t))?null:e.stateNode},t.flushSync=function(e,t){if((Da&(Oa|Na))!==Pa)throw Error(l(187));var n=Da;Da|=1;try{return qo(99,e.bind(null,t))}finally{Da=n,Yo()}},t.hydrate=function(e,t,n){if(!nc(t))throw Error(l(200));return rc(null,e,t,!0,n)},t.render=function(e,t,n){if(!nc(t))throw Error(l(200));return rc(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!nc(e))throw Error(l(40));return!!e._reactRootContainer&&(yu((function(){rc(null,null,e,!1,(function(){e._reactRootContainer=null,e[Nn]=null}))})),!0)},t.unstable_batchedUpdates=hu,t.unstable_createPortal=function(e,t){return oc(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!nc(n))throw Error(l(200));if(null==e||void 0===e._reactInternalFiber)throw Error(l(38));return rc(e,t,n,!1,r)},t.version="16.14.0"},896:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(435)},233:(e,t,n)=>{"use strict";var r=n(856),o="function"==typeof Symbol&&Symbol.for,i=o?Symbol.for("react.element"):60103,l=o?Symbol.for("react.portal"):60106,a=o?Symbol.for("react.fragment"):60107,u=o?Symbol.for("react.strict_mode"):60108,c=o?Symbol.for("react.profiler"):60114,s=o?Symbol.for("react.provider"):60109,f=o?Symbol.for("react.context"):60110,d=o?Symbol.for("react.forward_ref"):60112,p=o?Symbol.for("react.suspense"):60113,m=o?Symbol.for("react.memo"):60115,h=o?Symbol.for("react.lazy"):60116,y="function"==typeof Symbol&&Symbol.iterator;function g(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var v={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},b={};function w(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||v}function k(){}function x(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||v}w.prototype.isReactComponent={},w.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(g(85));this.updater.enqueueSetState(this,e,t,"setState")},w.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},k.prototype=w.prototype;var E=x.prototype=new k;E.constructor=x,r(E,w.prototype),E.isPureReactComponent=!0;var S={current:null},T=Object.prototype.hasOwnProperty,C={key:!0,ref:!0,__self:!0,__source:!0};function P(e,t,n){var r,o={},l=null,a=null;if(null!=t)for(r in void 0!==t.ref&&(a=t.ref),void 0!==t.key&&(l=""+t.key),t)T.call(t,r)&&!C.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];o.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:i,type:e,key:l,ref:a,props:o,_owner:S.current}}function _(e){return"object"==typeof e&&null!==e&&e.$$typeof===i}var O=/\/+/g,N=[];function j(e,t,n,r){if(N.length){var o=N.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function M(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>N.length&&N.push(e)}function R(e,t,n,r){var o=typeof e;"undefined"!==o&&"boolean"!==o||(e=null);var a=!1;if(null===e)a=!0;else switch(o){case"string":case"number":a=!0;break;case"object":switch(e.$$typeof){case i:case l:a=!0}}if(a)return n(r,e,""===t?"."+z(e,0):t),1;if(a=0,t=""===t?".":t+":",Array.isArray(e))for(var u=0;u<e.length;u++){var c=t+z(o=e[u],u);a+=R(o,c,n,r)}else if("function"==typeof(c=null===e||"object"!=typeof e?null:"function"==typeof(c=y&&e[y]||e["@@iterator"])?c:null))for(e=c.call(e),u=0;!(o=e.next()).done;)a+=R(o=o.value,c=t+z(o,u++),n,r);else if("object"===o)throw n=""+e,Error(g(31,"[object Object]"===n?"object with keys {"+Object.keys(e).join(", ")+"}":n,""));return a}function I(e,t,n){return null==e?0:R(e,"",t,n)}function z(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function A(e,t){e.func.call(e.context,t,e.count++)}function D(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?F(e,r,n,(function(e){return e})):null!=e&&(_(e)&&(e=function(e,t){return{$$typeof:i,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(O,"$&/")+"/")+n)),r.push(e))}function F(e,t,n,r,o){var i="";null!=n&&(i=(""+n).replace(O,"$&/")+"/"),I(e,D,t=j(t,i,r,o)),M(t)}var L={current:null};function B(){var e=L.current;if(null===e)throw Error(g(321));return e}var W={ReactCurrentDispatcher:L,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:S,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:function(e,t,n){if(null==e)return e;var r=[];return F(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;I(e,A,t=j(null,null,t,n)),M(t)},count:function(e){return I(e,(function(){return null}),null)},toArray:function(e){var t=[];return F(e,t,null,(function(e){return e})),t},only:function(e){if(!_(e))throw Error(g(143));return e}},t.Component=w,t.Fragment=a,t.Profiler=c,t.PureComponent=x,t.StrictMode=u,t.Suspense=p,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W,t.cloneElement=function(e,t,n){if(null==e)throw Error(g(267,e));var o=r({},e.props),l=e.key,a=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(a=t.ref,u=S.current),void 0!==t.key&&(l=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(s in t)T.call(t,s)&&!C.hasOwnProperty(s)&&(o[s]=void 0===t[s]&&void 0!==c?c[s]:t[s])}var s=arguments.length-2;if(1===s)o.children=n;else if(1<s){c=Array(s);for(var f=0;f<s;f++)c[f]=arguments[f+2];o.children=c}return{$$typeof:i,type:e.type,key:l,ref:a,props:o,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},t.createElement=P,t.createFactory=function(e){var t=P.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:d,render:e}},t.isValidElement=_,t.lazy=function(e){return{$$typeof:h,_ctor:e,_status:-1,_result:null}},t.memo=function(e,t){return{$$typeof:m,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return B().useCallback(e,t)},t.useContext=function(e,t){return B().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return B().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return B().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return B().useLayoutEffect(e,t)},t.useMemo=function(e,t){return B().useMemo(e,t)},t.useReducer=function(e,t,n){return B().useReducer(e,t,n)},t.useRef=function(e){return B().useRef(e)},t.useState=function(e){return B().useState(e)},t.version="16.14.0"},738:(e,t,n)=>{"use strict";e.exports=n(233)},101:(e,t)=>{"use strict";var n,r,o,i,l;if("undefined"==typeof window||"function"!=typeof MessageChannel){var a=null,u=null,c=function(){if(null!==a)try{var e=t.unstable_now();a(!0,e),a=null}catch(e){throw setTimeout(c,0),e}},s=Date.now();t.unstable_now=function(){return Date.now()-s},n=function(e){null!==a?setTimeout(n,0,e):(a=e,setTimeout(c,0))},r=function(e,t){u=setTimeout(e,t)},o=function(){clearTimeout(u)},i=function(){return!1},l=t.unstable_forceFrameRate=function(){}}else{var f=window.performance,d=window.Date,p=window.setTimeout,m=window.clearTimeout;if("undefined"!=typeof console){var h=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof h&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"==typeof f&&"function"==typeof f.now)t.unstable_now=function(){return f.now()};else{var y=d.now();t.unstable_now=function(){return d.now()-y}}var g=!1,v=null,b=-1,w=5,k=0;i=function(){return t.unstable_now()>=k},l=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):w=0<e?Math.floor(1e3/e):5};var x=new MessageChannel,E=x.port2;x.port1.onmessage=function(){if(null!==v){var e=t.unstable_now();k=e+w;try{v(!0,e)?E.postMessage(null):(g=!1,v=null)}catch(e){throw E.postMessage(null),e}}else g=!1},n=function(e){v=e,g||(g=!0,E.postMessage(null))},r=function(e,n){b=p((function(){e(t.unstable_now())}),n)},o=function(){m(b),b=-1}}function S(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,o=e[r];if(!(void 0!==o&&0<P(o,t)))break e;e[r]=t,e[n]=o,n=r}}function T(e){return void 0===(e=e[0])?null:e}function C(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,o=e.length;r<o;){var i=2*(r+1)-1,l=e[i],a=i+1,u=e[a];if(void 0!==l&&0>P(l,n))void 0!==u&&0>P(u,l)?(e[r]=u,e[a]=n,r=a):(e[r]=l,e[i]=n,r=i);else{if(!(void 0!==u&&0>P(u,n)))break e;e[r]=u,e[a]=n,r=a}}}return t}return null}function P(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var _=[],O=[],N=1,j=null,M=3,R=!1,I=!1,z=!1;function A(e){for(var t=T(O);null!==t;){if(null===t.callback)C(O);else{if(!(t.startTime<=e))break;C(O),t.sortIndex=t.expirationTime,S(_,t)}t=T(O)}}function D(e){if(z=!1,A(e),!I)if(null!==T(_))I=!0,n(F);else{var t=T(O);null!==t&&r(D,t.startTime-e)}}function F(e,n){I=!1,z&&(z=!1,o()),R=!0;var l=M;try{for(A(n),j=T(_);null!==j&&(!(j.expirationTime>n)||e&&!i());){var a=j.callback;if(null!==a){j.callback=null,M=j.priorityLevel;var u=a(j.expirationTime<=n);n=t.unstable_now(),"function"==typeof u?j.callback=u:j===T(_)&&C(_),A(n)}else C(_);j=T(_)}if(null!==j)var c=!0;else{var s=T(O);null!==s&&r(D,s.startTime-n),c=!1}return c}finally{j=null,M=l,R=!1}}function L(e){switch(e){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}var B=l;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){I||R||(I=!0,n(F))},t.unstable_getCurrentPriorityLevel=function(){return M},t.unstable_getFirstCallbackNode=function(){return T(_)},t.unstable_next=function(e){switch(M){case 1:case 2:case 3:var t=3;break;default:t=M}var n=M;M=t;try{return e()}finally{M=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=B,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=M;M=e;try{return t()}finally{M=n}},t.unstable_scheduleCallback=function(e,i,l){var a=t.unstable_now();if("object"==typeof l&&null!==l){var u=l.delay;u="number"==typeof u&&0<u?a+u:a,l="number"==typeof l.timeout?l.timeout:L(e)}else l=L(e),u=a;return e={id:N++,callback:i,priorityLevel:e,startTime:u,expirationTime:l=u+l,sortIndex:-1},u>a?(e.sortIndex=u,S(O,e),null===T(_)&&e===T(O)&&(z?o():z=!0,r(D,u-a))):(e.sortIndex=l,S(_,e),I||R||(I=!0,n(F))),e},t.unstable_shouldYield=function(){var e=t.unstable_now();A(e);var n=T(_);return n!==j&&null!==j&&null!==n&&null!==n.callback&&n.startTime<=e&&n.expirationTime<j.expirationTime||i()},t.unstable_wrapCallback=function(e){var t=M;return function(){var n=M;M=t;try{return e.apply(this,arguments)}finally{M=n}}}},667:(e,t,n)=>{"use strict";e.exports=n(101)},290:e=>{"use strict";e.exports=function(e){for(var t=5381,n=e.length;n;)t=33*t^e.charCodeAt(--n);return t>>>0}},379:e=>{"use strict";var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var i={},l=[],a=0;a<e.length;a++){var u=e[a],c=r.base?u[0]+r.base:u[0],s=i[c]||0,f="".concat(c," ").concat(s);i[c]=s+1;var d=n(f),p={css:u[1],media:u[2],sourceMap:u[3],supports:u[4],layer:u[5]};if(-1!==d)t[d].references++,t[d].updater(p);else{var m=o(p,r);r.byIndex=a,t.splice(a,0,{identifier:f,updater:m,references:1})}l.push(f)}return l}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var i=r(e=e||[],o=o||{});return function(e){e=e||[];for(var l=0;l<i.length;l++){var a=n(i[l]);t[a].references--}for(var u=r(e,o),c=0;c<i.length;c++){var s=n(i[c]);0===t[s].references&&(t[s].updater(),t.splice(s,1))}i=u}}},569:e=>{"use strict";var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{"use strict";e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{"use strict";e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={id:r,exports:{}};return e[r](i,i.exports,n),i.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");if(r.length)for(var o=r.length-1;o>-1&&!e;)e=r[o--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.nc=void 0,(()=>{"use strict";var e=n(738),t=n(896);const r=n.p+"images/close-icon.png";var o=n(830),i=n.n(o),l=e.memo((function(t){var n=t.type,r=t.html,o=t.value,i=t.markAsRead,l=t.id,a={color:"default"===n?"blue":"urgent"===n?"red":"inherit"},u=function(){i&&l&&i(l)};return e.createElement(e.Fragment,null,n&&o?e.createElement("li",{style:a,"data-notification-type":n,onClick:u},o):null,r?e.createElement("li",{style:a,"data-urgent":!0,dangerouslySetInnerHTML:{__html:r.__html},onClick:u}):null)}));l.propTypes={type:i().string.isRequired,html:i().shape({__html:i().string}),value:i().string,markAsRead:i().func,id:i().number},l.defaultProps={type:"default",markAsRead:null,id:null};const a=l,u=i().shape({id:i().number.isRequired,html:i().shape({__html:i().string.isRequired}).isRequired,type:i().string.isRequired,value:i().string});var c=n(290),s=n.n(c),f=n(976),d=n.n(f);function p(e){return p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},p(e)}function m(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function h(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){m(e,t,n[t])}))}return e}function y(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var g=/([A-Z])/g,v=function(e){return"-".concat(e.toLowerCase())},b={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridColumn:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},w=["Webkit","ms","Moz","O"];Object.keys(b).forEach((function(e){w.forEach((function(t){b[function(e,t){return e+t.charAt(0).toUpperCase()+t.substring(1)}(t,e)]=b[e]}))}));var k=function(e,t){return"number"==typeof t?b[e]?""+t:t+"px":""+t},x=function(e,t){return S(k(e,t))},E=function(e,t){return s()(e).toString(36)},S=function(e){return"!"===e[e.length-10]&&" !important"===e.slice(-11)?e:"".concat(e," !important")},T="undefined"!=typeof Map,C=function(){function e(){this.elements={},this.keyOrder=[]}var t=e.prototype;return t.forEach=function(e){for(var t=0;t<this.keyOrder.length;t++)e(this.elements[this.keyOrder[t]],this.keyOrder[t])},t.set=function(t,n,r){if(this.elements.hasOwnProperty(t)){if(r){var o=this.keyOrder.indexOf(t);this.keyOrder.splice(o,1),this.keyOrder.push(t)}}else this.keyOrder.push(t);if(null!=n){if(T&&n instanceof Map||n instanceof e){var i=this.elements.hasOwnProperty(t)?this.elements[t]:new e;return n.forEach((function(e,t){i.set(t,e,r)})),void(this.elements[t]=i)}if(Array.isArray(n)||"object"!==p(n))this.elements[t]=n;else{for(var l=this.elements.hasOwnProperty(t)?this.elements[t]:new e,a=Object.keys(n),u=0;u<a.length;u+=1)l.set(a[u],n[a[u]],r);this.elements[t]=l}}else this.elements[t]=n},t.get=function(e){return this.elements[e]},t.has=function(e){return this.elements.hasOwnProperty(e)},t.addStyleType=function(t){var n=this;if(T&&t instanceof Map||t instanceof e)t.forEach((function(e,t){n.set(t,e,!0)}));else for(var r=Object.keys(t),o=0;o<r.length;o++)this.set(r[o],t[r[o]],!0)},e}();function P(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}function _(e,t){return e(t={exports:{}},t.exports),t.exports}var O=_((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return e.charAt(0).toUpperCase()+e.slice(1)}}));P(O);var N=_((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n){if(e.hasOwnProperty(t)){for(var o={},i=e[t],l=(0,r.default)(t),a=Object.keys(n),u=0;u<a.length;u++){var c=a[u];if(c===t)for(var s=0;s<i.length;s++)o[i[s]+l]=n[t];o[c]=n[c]}return o}return n};var n,r=(n=O)&&n.__esModule?n:{default:n}}));P(N);var j=_((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n,r,o){for(var i=0,l=e.length;i<l;++i){var a=e[i](t,n,r,o);if(a)return a}}}));P(j);var M=_((function(e,t){function n(e,t){-1===e.indexOf(t)&&e.push(t)}Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if(Array.isArray(t))for(var r=0,o=t.length;r<o;++r)n(e,t[r]);else n(e,t)}}));P(M);var R=_((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return e instanceof Object&&!Array.isArray(e)}}));P(R);var I=_((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=e.prefixMap,l=e.plugins;return function e(a){for(var u in a){var c=a[u];if((0,i.default)(c))a[u]=e(c);else if(Array.isArray(c)){for(var s=[],f=0,d=c.length;f<d;++f){var p=(0,r.default)(l,u,c[f],a,t);(0,o.default)(s,p||c[f])}s.length>0&&(a[u]=s)}else{var m=(0,r.default)(l,u,c,a,t);m&&(a[u]=m),a=(0,n.default)(t,u,a)}}return a}};var n=l(N),r=l(j),o=l(M),i=l(R);function l(e){return e&&e.__esModule?e:{default:e}}})),z=P(I),A=_((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&"text"===t)return["-webkit-text","text"]}})),D=P(A),F=_((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return"string"==typeof e&&n.test(e)};var n=/-webkit-|-moz-|-ms-/;e.exports=t.default}));P(F);var L=_((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&t.indexOf("calc(")>-1)return o.map((function(e){return t.replace(/calc\(/g,e+"calc(")}))};var n,r=(n=F)&&n.__esModule?n:{default:n},o=["-webkit-","-moz-",""]})),B=P(L),W=_((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&t.indexOf("cross-fade(")>-1)return o.map((function(e){return t.replace(/cross-fade\(/g,e+"cross-fade(")}))};var n,r=(n=F)&&n.__esModule?n:{default:n},o=["-webkit-",""]})),U=P(W),H=_((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("cursor"===e&&r.hasOwnProperty(t))return n.map((function(e){return e+t}))};var n=["-webkit-","-moz-",""],r={"zoom-in":!0,"zoom-out":!0,grab:!0,grabbing:!0}})),V=P(H),Q=_((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&t.indexOf("filter(")>-1)return o.map((function(e){return t.replace(/filter\(/g,e+"filter(")}))};var n,r=(n=F)&&n.__esModule?n:{default:n},o=["-webkit-",""]})),$=P(Q),q=_((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("display"===e&&n.hasOwnProperty(t))return n[t]};var n={flex:["-webkit-box","-moz-box","-ms-flexbox","-webkit-flex","flex"],"inline-flex":["-webkit-inline-box","-moz-inline-box","-ms-inline-flexbox","-webkit-inline-flex","inline-flex"]}})),K=P(q),G=_((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,l){if(Object.prototype.hasOwnProperty.call(r,e)&&(l[r[e]]=n[t]||t),"flex"===e){if(Object.prototype.hasOwnProperty.call(o,t))return void(l.msFlex=o[t]);if(i.test(t))return void(l.msFlex=t+" 1 0%");var a=t.split(/\s/);switch(a.length){case 1:return void(l.msFlex="1 1 "+t);case 2:return void(i.test(a[1])?l.msFlex=a[0]+" "+a[1]+" 0%":l.msFlex=a[0]+" 1 "+a[1]);default:l.msFlex=t}}};var n={"space-around":"distribute","space-between":"justify","flex-start":"start","flex-end":"end"},r={alignContent:"msFlexLinePack",alignSelf:"msFlexItemAlign",alignItems:"msFlexAlign",justifyContent:"msFlexPack",order:"msFlexOrder",flexGrow:"msFlexPositive",flexShrink:"msFlexNegative",flexBasis:"msFlexPreferredSize"},o={auto:"1 1 auto",inherit:"inherit",initial:"0 1 auto",none:"0 0 auto",unset:"unset"},i=/^\d+(\.\d+)?$/})),Y=P(G),X=_((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,o){"flexDirection"===e&&"string"==typeof t&&(t.indexOf("column")>-1?o.WebkitBoxOrient="vertical":o.WebkitBoxOrient="horizontal",t.indexOf("reverse")>-1?o.WebkitBoxDirection="reverse":o.WebkitBoxDirection="normal"),r.hasOwnProperty(e)&&(o[r[e]]=n[t]||t)};var n={"space-around":"justify","space-between":"justify","flex-start":"start","flex-end":"end","wrap-reverse":"multiple",wrap:"multiple"},r={alignItems:"WebkitBoxAlign",justifyContent:"WebkitBoxPack",flexWrap:"WebkitBoxLines",flexGrow:"WebkitBoxFlex"}})),Z=P(X),J=_((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&i.test(t))return o.map((function(e){return t.replace(i,(function(t){return e+t}))}))};var n,r=(n=F)&&n.__esModule?n:{default:n},o=["-webkit-","-moz-",""],i=/linear-gradient|radial-gradient|repeating-linear-gradient|repeating-radial-gradient/gi})),ee=P(J),te=_((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});var n=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var n=[],r=!0,o=!1,i=void 0;try{for(var l,a=e[Symbol.iterator]();!(r=(l=a.next()).done)&&(n.push(l.value),!t||n.length!==t);r=!0);}catch(e){o=!0,i=e}finally{try{!r&&a.return&&a.return()}finally{if(o)throw i}}return n}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")};function r(e){return"number"==typeof e&&!isNaN(e)}t.default=function(e,t,n){if("display"===e&&t in i)return i[t];e in l&&(0,l[e])(t,n)};var o=["center","end","start","stretch"],i={"inline-grid":["-ms-inline-grid","inline-grid"],grid:["-ms-grid","grid"]},l={alignSelf:function(e,t){o.indexOf(e)>-1&&(t.msGridRowAlign=e)},gridColumn:function(e,t){if(r(e))t.msGridColumn=e;else{var o=e.split("/").map((function(e){return+e})),i=n(o,2),a=i[0],u=i[1];l.gridColumnStart(a,t),l.gridColumnEnd(u,t)}},gridColumnEnd:function(e,t){var n=t.msGridColumn;r(e)&&r(n)&&(t.msGridColumnSpan=e-n)},gridColumnStart:function(e,t){r(e)&&(t.msGridColumn=e)},gridRow:function(e,t){if(r(e))t.msGridRow=e;else{var o=e.split("/").map((function(e){return+e})),i=n(o,2),a=i[0],u=i[1];l.gridRowStart(a,t),l.gridRowEnd(u,t)}},gridRowEnd:function(e,t){var n=t.msGridRow;r(e)&&r(n)&&(t.msGridRowSpan=e-n)},gridRowStart:function(e,t){r(e)&&(t.msGridRow=e)},gridTemplateColumns:function(e,t){t.msGridColumns=e},gridTemplateRows:function(e,t){t.msGridRows=e},justifySelf:function(e,t){o.indexOf(e)>-1&&(t.msGridColumnAlign=e)}}})),ne=P(te),re=_((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&t.indexOf("image-set(")>-1)return o.map((function(e){return t.replace(/image-set\(/g,e+"image-set(")}))};var n,r=(n=F)&&n.__esModule?n:{default:n},o=["-webkit-",""]})),oe=P(re),ie=_((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,r){if(Object.prototype.hasOwnProperty.call(n,e))for(var o=n[e],i=0,l=o.length;i<l;++i)r[o[i]]=t};var n={marginBlockStart:["WebkitMarginBefore"],marginBlockEnd:["WebkitMarginAfter"],marginInlineStart:["WebkitMarginStart","MozMarginStart"],marginInlineEnd:["WebkitMarginEnd","MozMarginEnd"],paddingBlockStart:["WebkitPaddingBefore"],paddingBlockEnd:["WebkitPaddingAfter"],paddingInlineStart:["WebkitPaddingStart","MozPaddingStart"],paddingInlineEnd:["WebkitPaddingEnd","MozPaddingEnd"],borderBlockStart:["WebkitBorderBefore"],borderBlockStartColor:["WebkitBorderBeforeColor"],borderBlockStartStyle:["WebkitBorderBeforeStyle"],borderBlockStartWidth:["WebkitBorderBeforeWidth"],borderBlockEnd:["WebkitBorderAfter"],borderBlockEndColor:["WebkitBorderAfterColor"],borderBlockEndStyle:["WebkitBorderAfterStyle"],borderBlockEndWidth:["WebkitBorderAfterWidth"],borderInlineStart:["WebkitBorderStart","MozBorderStart"],borderInlineStartColor:["WebkitBorderStartColor","MozBorderStartColor"],borderInlineStartStyle:["WebkitBorderStartStyle","MozBorderStartStyle"],borderInlineStartWidth:["WebkitBorderStartWidth","MozBorderStartWidth"],borderInlineEnd:["WebkitBorderEnd","MozBorderEnd"],borderInlineEndColor:["WebkitBorderEndColor","MozBorderEndColor"],borderInlineEndStyle:["WebkitBorderEndStyle","MozBorderEndStyle"],borderInlineEndWidth:["WebkitBorderEndWidth","MozBorderEndWidth"]}})),le=P(ie),ae=_((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("position"===e&&"sticky"===t)return["-webkit-sticky","sticky"]}})),ue=P(ae),ce=_((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if(r.hasOwnProperty(e)&&o.hasOwnProperty(t))return n.map((function(e){return e+t}))};var n=["-webkit-","-moz-",""],r={maxHeight:!0,maxWidth:!0,width:!0,height:!0,columnWidth:!0,minWidth:!0,minHeight:!0},o={"min-content":!0,"max-content":!0,"fill-available":!0,"fit-content":!0,"contain-floats":!0}})),se=P(ce),fe=/[A-Z]/g,de=/^ms-/,pe={};function me(e){return"-"+e.toLowerCase()}var he,ye=(he=Object.freeze({default:function(e){if(pe.hasOwnProperty(e))return pe[e];var t=e.replace(fe,me);return pe[e]=de.test(t)?"-"+t:t}}))&&he.default||he,ge=_((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e)};var n,r=(n=ye)&&n.__esModule?n:{default:n};e.exports=t.default}));P(ge);var ve=_((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,i,u){if("string"==typeof t&&l.hasOwnProperty(e)){var c=function(e,t){if((0,r.default)(e))return e;for(var o=e.split(/,(?![^()]*(?:\([^()]*\))?\))/g),i=0,l=o.length;i<l;++i){var u=o[i],c=[u];for(var s in t){var f=(0,n.default)(s);if(u.indexOf(f)>-1&&"order"!==f)for(var d=t[s],p=0,m=d.length;p<m;++p)c.unshift(u.replace(f,a[d[p]]+f))}o[i]=c.join(",")}return o.join(",")}(t,u),s=c.split(/,(?![^()]*(?:\([^()]*\))?\))/g).filter((function(e){return!/-moz-|-ms-/.test(e)})).join(",");if(e.indexOf("Webkit")>-1)return s;var f=c.split(/,(?![^()]*(?:\([^()]*\))?\))/g).filter((function(e){return!/-webkit-|-ms-/.test(e)})).join(",");return e.indexOf("Moz")>-1?f:(i["Webkit"+(0,o.default)(e)]=s,i["Moz"+(0,o.default)(e)]=f,c)}};var n=i(ge),r=i(F),o=i(O);function i(e){return e&&e.__esModule?e:{default:e}}var l={transition:!0,transitionProperty:!0,WebkitTransition:!0,WebkitTransitionProperty:!0,MozTransition:!0,MozTransitionProperty:!0},a={Webkit:"-webkit-",Moz:"-moz-",ms:"-ms-"}})),be=["Webkit"],we=["Moz"],ke=["ms"],xe=["Webkit","Moz"],Ee=["Webkit","ms"],Se=["Webkit","Moz","ms"],Te=z({plugins:[D,B,U,V,$,K,Y,Z,ee,ne,oe,le,ue,se,P(ve)],prefixMap:{transform:Ee,transformOrigin:Ee,transformOriginX:Ee,transformOriginY:Ee,backfaceVisibility:be,perspective:be,perspectiveOrigin:be,transformStyle:be,transformOriginZ:be,animation:be,animationDelay:be,animationDirection:be,animationFillMode:be,animationDuration:be,animationIterationCount:be,animationName:be,animationPlayState:be,animationTimingFunction:be,appearance:xe,userSelect:Se,fontKerning:be,textEmphasisPosition:be,textEmphasis:be,textEmphasisStyle:be,textEmphasisColor:be,boxDecorationBreak:be,clipPath:be,maskImage:be,maskMode:be,maskRepeat:be,maskPosition:be,maskClip:be,maskOrigin:be,maskSize:be,maskComposite:be,mask:be,maskBorderSource:be,maskBorderMode:be,maskBorderSlice:be,maskBorderWidth:be,maskBorderOutset:be,maskBorderRepeat:be,maskBorder:be,maskType:be,textDecorationStyle:xe,textDecorationSkip:xe,textDecorationLine:xe,textDecorationColor:xe,filter:be,fontFeatureSettings:xe,breakAfter:Se,breakBefore:Se,breakInside:Se,columnCount:xe,columnFill:xe,columnGap:xe,columnRule:xe,columnRuleColor:xe,columnRuleStyle:xe,columnRuleWidth:xe,columns:xe,columnSpan:xe,columnWidth:xe,writingMode:Ee,flex:Ee,flexBasis:be,flexDirection:Ee,flexGrow:be,flexFlow:Ee,flexShrink:be,flexWrap:Ee,alignContent:be,alignItems:be,alignSelf:be,justifyContent:be,order:be,transitionDelay:be,transitionDuration:be,transitionProperty:be,transitionTimingFunction:be,backdropFilter:be,scrollSnapType:Ee,scrollSnapPointsX:Ee,scrollSnapPointsY:Ee,scrollSnapDestination:Ee,scrollSnapCoordinate:Ee,shapeImageThreshold:be,shapeImageMargin:be,shapeImageOutside:be,hyphens:Se,flowInto:Ee,flowFrom:Ee,regionFragment:Ee,textOrientation:be,boxSizing:we,textAlignLast:we,tabSize:we,wrapFlow:ke,wrapThrough:ke,wrapMargin:ke,touchAction:ke,textSizeAdjust:Ee,borderImage:be,borderImageOutset:be,borderImageRepeat:be,borderImageSlice:be,borderImageSource:be,borderImageWidth:be}}),Ce=[function(e,t,n){return":"!==e[0]?null:n(t+e)},function(e,t,n){if("@"!==e[0])return null;var r=n(t);return["".concat(e,"{").concat(r.join(""),"}")]}],Pe=function e(t,n,r,o,i){for(var l=new C,a=0;a<n.length;a++)l.addStyleType(n[a]);var u=new C,c=[];l.forEach((function(n,l){r.some((function(a){var u=a(l,t,(function(t){return e(t,[n],r,o,i)}));if(null!=u)return Array.isArray(u)?c.push.apply(c,y(u)):(console.warn("WARNING: Selector handlers should return an array of rules.Returning a string containing multiple rules is deprecated.",a),c.push("@media all {".concat(u,"}"))),!0}))||u.set(l,n,!0)}));var s=Ne(t,u,o,i,r);return s&&c.unshift(s),c},_e=function(e,t,n){return"".concat((r=e,o=r.replace(g,v),"m"===o[0]&&"s"===o[1]&&"-"===o[2]?"-".concat(o):o),":").concat(n(e,t),";");var r,o},Oe=function(e,t){return e[t]=!0,e},Ne=function(e,t,n,r,o){!function(e,t,n){if(t)for(var r=Object.keys(t),o=0;o<r.length;o++){var i=r[o];e.has(i)&&e.set(i,t[i](e.get(i),n),!1)}}(t,n,o);var i=Object.keys(t.elements).reduce(Oe,Object.create(null)),l=Te(t.elements),a=Object.keys(l);if(a.length!==t.keyOrder.length)for(var u=0;u<a.length;u++)if(!i[a[u]]){var c;if((c="W"===a[u][0]?a[u][6].toLowerCase()+a[u].slice(7):"o"===a[u][1]?a[u][3].toLowerCase()+a[u].slice(4):a[u][2].toLowerCase()+a[u].slice(3))&&i[c]){var s=t.keyOrder.indexOf(c);t.keyOrder.splice(s,0,a[u])}else t.keyOrder.unshift(a[u])}for(var f=!1===r?k:x,d=[],p=0;p<t.keyOrder.length;p++){var m=t.keyOrder[p],h=l[m];if(Array.isArray(h))for(var y=0;y<h.length;y++)d.push(_e(m,h[y],f));else d.push(_e(m,h,f))}return d.length?"".concat(e,"{").concat(d.join(""),"}"):""},je=null,Me={fontFamily:function e(t){if(Array.isArray(t)){var n={};return t.forEach((function(t){n[e(t)]=!0})),Object.keys(n).join(",")}return"object"===p(t)?(De(t.src,"@font-face",[t],!1),'"'.concat(t.fontFamily,'"')):t},animationName:function e(t,n){if(Array.isArray(t))return t.map((function(t){return e(t,n)})).join(",");if("object"===p(t)){var r="keyframe_".concat((i=t,E(JSON.stringify(i)))),o="@keyframes ".concat(r,"{");return t instanceof C?t.forEach((function(e,t){o+=Pe(t,[e],n,Me,!1).join("")})):Object.keys(t).forEach((function(e){o+=Pe(e,[t[e]],n,Me,!1).join("")})),Ae(r,[o+="}"]),r}return t;var i}},Re={},Ie=[],ze=!1,Ae=function(e,t){var n;if(!Re[e]){if(!ze){if("undefined"==typeof document)throw new Error("Cannot automatically buffer without a document");ze=!0,d()(We)}(n=Ie).push.apply(n,y(t)),Re[e]=!0}},De=function(e,t,n,r){var o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[];if(!Re[e]){var i=Pe(t,n,o,Me,r);Ae(e,i)}},Fe=function(){Ie=[],Re={},ze=!1,je=null},Le=function(e){delete Re[e]},Be=function(){ze=!1;var e=Ie;return Ie=[],e},We=function(){var e=Be();e.length>0&&function(e){if(null==je&&null==(je=document.querySelector("style[data-aphrodite]"))){var t=document.head||document.getElementsByTagName("head")[0];(je=document.createElement("style")).type="text/css",je.setAttribute("data-aphrodite",""),t.appendChild(je)}var n=je.styleSheet||je.sheet;if(n.insertRule){var r=n.cssRules.length;e.forEach((function(e){try{n.insertRule(e,r),r+=1}catch(e){}}))}else je.innerText=(je.innerText||"")+e.join("")}(e)},Ue=function e(t,n,r,o){for(var i=0;i<t.length;i+=1)if(t[i])if(Array.isArray(t[i]))o+=e(t[i],n,r,o);else{if(!("_definition"in(l=t[i])&&"_name"in l&&"_len"in l))throw new Error("Invalid Style Definition: Styles should be defined using the StyleSheet.create method.");n.push(t[i]._name),r.push(t[i]._definition),o+=t[i]._len}var l;return o},He=function(e,t,n){var r,o=[],i=[],l=Ue(t,o,i,0);return 0===o.length?"":(r=1===o.length?"_".concat(o[0]):"_".concat(E(o.join())).concat((l%36).toString(36)),De(r,".".concat(r),i,e,n),r)},Ve=function(e,t){return"".concat(t,"_").concat(E(e))},Qe=E,$e={create:function(e){for(var t={},n=Object.keys(e),r=0;r<n.length;r+=1){var o=n[r],i=e[o],l=JSON.stringify(i);t[o]={_len:l.length,_name:Qe(l,o),_definition:i}}return t},rehydrate:function(){(arguments.length>0&&void 0!==arguments[0]?arguments[0]:[]).forEach((function(e){Re[e]=!0}))}},qe="undefined"!=typeof window?null:{renderStatic:function(e){return Fe(),function(){if(ze)throw new Error("Cannot buffer while already buffering");ze=!0}(),{html:e(),css:{content:Be().join(""),renderedClassNames:Object.keys(Re)}}}},Ke=function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Ce;return{StyleSheet:h({},$e,{extend:function(r){var o=r.map((function(e){return e.selectorHandler})).filter((function(e){return e}));return e(t,n.concat(o))}}),StyleSheetServer:qe,StyleSheetTestUtils:null,minify:function(e){Qe=e?E:Ve},css:function(){for(var e=arguments.length,r=new Array(e),o=0;o<e;o++)r[o]=arguments[o];return He(t,r,n)},flushToStyleTag:We,injectAndGetClassName:He,defaultSelectorHandlers:Ce,reset:Fe,resetInjectedStyle:Le}}(!0),Ge=Ke.StyleSheet,Ye=(Ke.StyleSheetServer,Ke.StyleSheetTestUtils,Ke.css);function Xe(e){return Xe="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Xe(e)}function Ze(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,Je(r.key),r)}}function Je(e){var t=function(e,t){if("object"!=Xe(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=Xe(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==Xe(t)?t:String(t)}function et(e,t,n){return t=nt(t),function(e,t){if(t&&("object"===Xe(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,tt()?Reflect.construct(t,n||[],nt(e).constructor):t.apply(e,n))}function tt(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(tt=function(){return!!e})()}function nt(e){return nt=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},nt(e)}function rt(e,t){return rt=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},rt(e,t)}Ke.minify,Ke.flushToStyleTag,Ke.injectAndGetClassName,Ke.defaultSelectorHandlers,Ke.reset,Ke.resetInjectedStyle;var ot=function(t){function n(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),et(this,n,arguments)}var o,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&rt(e,t)}(n,t),o=n,(i=[{key:"render",value:function(){var t=this.props,n=t.listNotifications,o=t.displayDrawer,i=t.handleDisplayDrawer,l=t.handleHideDrawer,u=t.markNotificationAsRead;return e.createElement(e.Fragment,null,o?e.createElement("div",{className:"flex-area"},e.createElement("div",{className:Ye(it.menuItem)},e.createElement("p",{onClick:i},"Your notifications")),e.createElement("div",{className:Ye(it.Notifications)},e.createElement("button",{style:{color:"#3a3a3a",fontWeight:"bold",background:"none",border:"none",fontSize:"10px",position:"absolute",right:"2px",top:"2px",cursor:"pointer"},"aria-label":"Close",onClick:l},e.createElement("img",{className:Ye(it.buttonImage),src:r,alt:"closeIcon",width:"10px"})),e.createElement("p",{className:Ye(it.NotificationsText)},"Here is the list of notifications"),e.createElement("ul",{className:Ye(it.NotificationsList)},n&&n.length>0?n.map((function(t){var n=t.id,r=t.html,o=t.type,i=t.value;return e.createElement(a,{key:n,type:o,value:i,html:r,markAsRead:u})})):e.createElement(a,{value:"No new Notification for now"})))):e.createElement("div",{className:Ye(it.menuItem)},e.createElement("p",{onClick:i},"Your notifications")))}}])&&Ze(o.prototype,i),Object.defineProperty(o,"prototype",{writable:!1}),n}(e.PureComponent),it=Ge.create({Notifications:{border:"0.0625rem dashed red",padding:"0.3125rem",position:"absolute",width:"25rem",right:"0.9375rem",top:"3.125rem","@media (max-width: 900px)":{width:"95%",height:"100vw",backgroundColor:"white",border:"none",boxShadow:"0px 0px 4px 1px rgba(0, 0, 0, .3)"}},NotificationsText:{"@media (max-width: 900px)":{fontSize:"20px"}},NotificationsList:{"@media (max-width: 900px)":{listStyle:"none",padding:0,borderBottom:"0.0625rem solid "}},buttonImage:{width:"10px"},'[data-notification-type="default"]':{color:"#0d0563"},'[data-notification-type="urgent"]':{color:"#e0354b"},"[data-urgent]":{color:"red"},menuItem:{textAlign:"right",backgroundColor:"#fff8f8",cursor:"pointer",transition:"opacity 0.3s ease-in-out",":hover":{animationName:[{"0%, 20%, 50%, 80%, 100%":{transform:"translateY(0)"},"40%":{transform:"translateY(-5px)"},"60%":{transform:"translateY(5px)"}},{"0%":{opacity:.5},"100%":{opacity:1}}],animationDuration:"0.5s",animationIterationCount:3,opacity:.5},"@media (max-width: 900px)":{display:"none"}}});ot.propTypes={displayDrawer:i().bool,listNotifications:i().arrayOf(u),onCloseDrawer:i().func,handleDisplayDrawer:i().func.isRequired,handleHideDrawer:i().func.isRequired,markNotificationAsRead:i().func.isRequired},ot.defaultProps={listNotifications:[],handleDisplayDrawer:function(){},handleHideDrawer:function(){}};const lt=ot;function at(e){return at="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},at(e)}function ut(e,t,n){return(t=st(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function ct(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,st(r.key),r)}}function st(e){var t=function(e,t){if("object"!=at(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=at(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==at(t)?t:String(t)}function ft(e,t,n){return t=pt(t),function(e,t){if(t&&("object"===at(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return mt(e)}(e,dt()?Reflect.construct(t,n||[],pt(e).constructor):t.apply(e,n))}function dt(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(dt=function(){return!!e})()}function pt(e){return pt=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},pt(e)}function mt(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function ht(e,t){return ht=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},ht(e,t)}var yt=function(t){function n(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),(t=ft(this,n,[e])).state={email:"",password:"",enableSubmit:!1},t.handleSubmit=t.handleSubmit.bind(mt(t)),t.handleChange=t.handleChange.bind(mt(t)),t.handleChangeEmail=t.handleChangeEmail.bind(mt(t)),t.handleChangePassword=t.handleChangePassword.bind(mt(t)),t}var r,o;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&ht(e,t)}(n,t),r=n,(o=[{key:"handleSubmit",value:function(e){e.preventDefault();var t=this.state,n=t.email,r=t.password;this.props.logIn(n,r)}},{key:"handleChange",value:function(e){e.persist();var t=e.target,n=t.name,r=t.value;this.setState((function(e){return ut(ut({},n,r),"enableSubmit",""!==e.email&&""!==e.password)}))}},{key:"handleChangeEmail",value:function(e){e.persist(),this.handleChange(e)}},{key:"handleChangePassword",value:function(e){e.persist(),this.handleChange(e)}},{key:"render",value:function(){var t=this.state,n=t.email,r=t.password,o=t.enableSubmit;return e.createElement("div",{className:Ye(vt.appBody)},e.createElement("p",null,"Login to access the full dashboard"),e.createElement("form",{onSubmit:this.handleSubmit},e.createElement("div",{className:Ye(vt.appLogin)},e.createElement("label",{htmlFor:"email"},"Email:"),e.createElement("input",{type:"email",name:"email",id:"email",value:n,onChange:this.handleChangeEmail}),e.createElement("label",{htmlFor:"password"},"Password:"),e.createElement("input",{type:"password",name:"password",id:"password",value:r,onChange:this.handleChangePassword}),e.createElement("input",{type:"submit",className:Ye(vt.loginButton),value:"OK",disabled:!o}))))}}])&&ct(r.prototype,o),Object.defineProperty(r,"prototype",{writable:!1}),n}(e.Component);const gt=yt;var vt=Ge.create({appBody:{fontFamily:"Poppins, sans-serif",color:"#000000",overflow:"none"},appLogin:{display:"flex",gap:"1.5%",marginLeft:"5%","@media (max-width: 900px)":{display:"flex",flexDirection:"column",border:"none",width:"35%"}},loginButton:{backgroundColor:"white",border:"1px solid #000",borderRadius:"2px",boxShadow:"0 0 1px 1px #000",cursor:"pointer",transition:"all 0.3s ease-in-out",":hover":{backgroundColor:"#000",color:"#fff"},"@media (max-width: 900px)":{marginTop:"1.5%",width:"15%"}}}),bt=n(379),wt=n.n(bt),kt=n(795),xt=n.n(kt),Et=n(569),St=n.n(Et),Tt=n(565),Ct=n.n(Tt),Pt=n(216),_t=n.n(Pt),Ot=n(589),Nt=n.n(Ot),jt=n(993),Mt={};Mt.styleTagTransform=Nt(),Mt.setAttributes=Ct(),Mt.insert=St().bind(null,"head"),Mt.domAPI=xt(),Mt.insertStyleElement=_t(),wt()(jt.Z,Mt),jt.Z&&jt.Z.locals&&jt.Z.locals;var Rt={email:"",password:"",isLoggedIn:!1},It=(0,e.createContext)({user:Rt,logOut:function(){Rt.isLoggedIn=!1}});const zt=function(){var t=(0,e.useContext)(It).user;return e.createElement("div",{className:"App-footer"},e.createElement("p",null,"Copyright ",(new Date).getFullYear()," - ","Holberton School main dashboard"),t.isLoggedIn&&e.createElement("p",null,e.createElement("a",{href:"/contact"},"Contact us")))},At=n.p+"images/holberton-logo.jpg";function Dt(e){return Dt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Dt(e)}function Ft(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,Ht(r.key),r)}}function Lt(e,t,n){return t=Wt(t),function(e,t){if(t&&("object"===Dt(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,Bt()?Reflect.construct(t,n||[],Wt(e).constructor):t.apply(e,n))}function Bt(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(Bt=function(){return!!e})()}function Wt(e){return Wt=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Wt(e)}function Ut(e,t){return Ut=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},Ut(e,t)}function Ht(e){var t=function(e,t){if("object"!=Dt(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=Dt(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==Dt(t)?t:String(t)}var Vt,Qt,$t,qt=function(t){function n(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),Lt(this,n,arguments)}var r,o;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&Ut(e,t)}(n,t),r=n,o=[{key:"render",value:function(){var t=this.context,n=t.user,r=t.logOut;return e.createElement(e.Fragment,null,e.createElement("div",{className:Ye(Kt.header)},e.createElement("img",{src:At,alt:"Holberton logo"}),e.createElement("h1",null,"School dashboard")),n.isLoggedIn&&e.createElement("section",{className:Ye(Kt.welcomeMessage),id:"logoutSection"},"Welcome ",e.createElement("strong",null,n.email),e.createElement("em",null,e.createElement("a",{href:"#",onClick:r,className:Ye(Kt.logoutLink)},"(logout)"))))}}],o&&Ft(r.prototype,o),Object.defineProperty(r,"prototype",{writable:!1}),n}(e.Component);Vt=qt,$t=It,(Qt=Ht(Qt="contextType"))in Vt?Object.defineProperty(Vt,Qt,{value:$t,enumerable:!0,configurable:!0,writable:!0}):Vt[Qt]=$t;var Kt=Ge.create({header:{display:"flex",flexDirection:"row",justifyContent:"left",alignItems:"center",backgroundSize:"auto",fontFamily:"Poppins, sans-serif",fontWeight:400,color:"#dc3630",borderBottom:"1.9px solid #dc3630",width:"100%"},welcomeMessage:{marginTop:"1rem",marginLeft:"10px",display:"flex",gap:"10px"},logoutLink:{fontStyle:"italic",fontSize:"0.8em",color:"black",marginRight:"10px",textDecoration:"none"}});const Gt=qt;function Yt(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function Xt(t){var n,r,o=t.isHeader,i=t.textFirstCell,l=t.textSecondCell,a=(n=(0,e.useState)(!1),r=2,function(e){if(Array.isArray(e))return e}(n)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i,l,a=[],u=!0,c=!1;try{if(i=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;u=!1}else for(;!(u=(r=i.call(n)).done)&&(a.push(r.value),a.length!==t);u=!0);}catch(e){c=!0,o=e}finally{try{if(!u&&null!=n.return&&(l=n.return(),Object(l)!==l))return}finally{if(c)throw o}}return a}}(n,r)||function(e,t){if(e){if("string"==typeof e)return Yt(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Yt(e,t):void 0}}(n,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),u=a[0],c=a[1],s={backgroundColor:o?"#deb5b545":u?"#e6e4e4":"#f5f5f5ab"};return e.createElement("tr",{style:s},o?null===l?e.createElement("th",{colSpan:2},i):e.createElement(e.Fragment,null,e.createElement("th",null,i),e.createElement("th",null,l)):e.createElement(e.Fragment,null,e.createElement("td",null,null===i?e.createElement("input",{type:"checkbox",checked:u,onChange:function(){c(!u)}}):i),e.createElement("td",null,l)))}Xt.propTypes={isHeader:i().bool,textFirstCell:i().string,textSecondCell:i().string},Xt.defaultProps={isHeader:!1,textFirstCell:null,textSecondCell:null};const Zt=i().shape({id:i().number.isRequired,name:i().string.isRequired,credit:i().number.isRequired});function Jt(t){var n=t.listCourses;return e.createElement("table",{className:Ye(en.courseList)},e.createElement("thead",null,e.createElement(Xt,{textFirstCell:"Available courses",isHeader:!0}),e.createElement(Xt,{textFirstCell:"Course name",textSecondCell:"Credit",isHeader:!0})),e.createElement("tbody",null,0===n.length?e.createElement(Xt,{isHeader:!1,textFirstCell:"No course available yet"}):n.map((function(t){return e.createElement(Xt,{key:t.id,isHeader:!1,textFirstCell:t.name,textSecondCell:t.credit.toString()})}))))}var en=Ge.create({courseList:{marginTop:"1.25rem",border:"1px solid",width:"80%",borderColor:"rgba(0, 0, 0, 0.32)",borderRadius:"5px",fontFamily:"Poppins",fontWeight:400,fontSize:"1.25rem",color:"#000000"},tableHeader:{textAlign:"center",border:"1px solid",borderColor:"rgba(0, 0, 0, 0.32)",padding:"0.5rem"},tableHeaderFirst:{textAlign:"left",border:"1px solid",borderRight:"none",borderColor:"rgba(0, 0, 0, 0.32)"},tableHeaderSecond:{textAlign:"left",border:"1px solid",borderLeft:"none",borderRight:"none",borderColor:"rgba(0, 0, 0, 0.32)"}});Jt.propTypes={listCourses:i().arrayOf(Zt)},Jt.defaultProps={listCourses:[]};var tn=function(t){var n=t.title,r=t.children,o=Ge.create({bodySection:{margin:"40px",display:"block"}});return e.createElement("div",{className:Ye(o.bodySection)},e.createElement("h2",null,n),r)};tn.propTypes={title:i().string.isRequired,children:i().node.isRequired};const nn=tn;function rn(e){return rn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},rn(e)}function on(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function ln(e,t,n){var r;return r=function(e,t){if("object"!=rn(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=rn(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(t),(t="symbol"==rn(r)?r:String(r))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var an=function(t){return e.createElement("div",{className:"bodySectionWithMargin"},e.createElement(nn,t))};an.propTypes=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?on(Object(n),!0).forEach((function(t){ln(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):on(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({},nn.propTypes);const un=an;function cn(e){return cn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},cn(e)}function sn(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function fn(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?sn(Object(n),!0).forEach((function(t){vn(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):sn(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function dn(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,bn(r.key),r)}}function pn(e,t,n){return t=hn(t),function(e,t){if(t&&("object"===cn(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return yn(e)}(e,mn()?Reflect.construct(t,n||[],hn(e).constructor):t.apply(e,n))}function mn(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(mn=function(){return!!e})()}function hn(e){return hn=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},hn(e)}function yn(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function gn(e,t){return gn=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},gn(e,t)}function vn(e,t,n){return(t=bn(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function bn(e){var t=function(e,t){if("object"!=cn(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=cn(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==cn(t)?t:String(t)}var wn=function(t){function n(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),vn(yn(t=pn(this,n,[e])),"handleDisplayDrawer",(function(){t.setState({displayDrawer:!0})})),vn(yn(t),"handleHideDrawer",(function(){t.setState({displayDrawer:!1}),console.log("Close button has been clicked")})),vn(yn(t),"logIn",(function(e,n){t.setState({user:fn(fn({},t.state.user),{},{email:e,password:n,isLoggedIn:!0})})})),vn(yn(t),"logOut",(function(){t.setState({user:fn(fn({},t.state.user),{},{email:"",password:"",isLoggedIn:!1})})})),t.state={displayDrawer:!1,user:Rt,logOut:t.logOut,listNotifications:[{id:1,type:"default",value:"New course available"},{id:2,type:"urgent",value:"New resume available"},{id:3,type:"urgent",html:{__html:"<strong>Urgent requirement</strong> - complete by EOD"}}]},t.handleDisplayDrawer=t.handleDisplayDrawer.bind(yn(t)),t.handleHideDrawer=t.handleHideDrawer.bind(yn(t)),t.logIn=t.logIn.bind(yn(t)),t.logOut=t.logOut.bind(yn(t)),t.markNotificationAsRead=t.markNotificationAsRead.bind(yn(t)),t}var r,o;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&gn(e,t)}(n,t),r=n,(o=[{key:"markNotificationAsRead",value:function(e){this.setState((function(t){return{listNotifications:t.listNotifications.filter((function(t){return t.id!==e}))}}))}},{key:"render",value:function(){return e.createElement(It.Provider,{value:{user:this.state.user,logOut:this.state.logOut}},e.createElement("div",{className:Ye(kn.app)},e.createElement(lt,{listNotifications:this.state.listNotifications,markNotificationAsRead:this.markNotificationAsRead,displayDrawer:this.state.displayDrawer,handleDisplayDrawer:this.handleDisplayDrawer,handleHideDrawer:this.handleHideDrawer}),e.createElement("div",{className:Ye(kn.appHeader)},e.createElement(Gt,null)),e.createElement("div",{className:Ye(kn.appBody)},this.state.user.isLoggedIn?e.createElement(un,{title:"Course list"},e.createElement(Jt,{listCourses:this.listCourses})):e.createElement(un,{title:"Log in to continue"},e.createElement(gt,{logIn:this.logIn})),e.createElement(nn,{title:"News from the School"},e.createElement("p",null,"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla eget neque ornare, venenatis eros non, placerat elit."))),e.createElement("div",{className:Ye(kn.appFooter)},e.createElement(zt,null))))}}])&&dn(r.prototype,o),Object.defineProperty(r,"prototype",{writable:!1}),n}(e.Component),kn=Ge.create({app:{display:"flex",flexDirection:"column",minHeight:"100vh",fontFamily:"Poppins, sans-serif",margin:"0.625rem",flex:1},appFooter:{fontFamily:"Poppins, sans-serif",fontWeight:400,color:"#000000",borderTop:"1.9px solid #dc3630",height:"2.5rem",width:"100%",display:"flex",justifyContent:"center",fontStyle:"italic"}});wn.defaultProps={isLoggedIn:!1,logOut:function(){}},wn.propTypes={isLoggedIn:i().bool,logOut:i().func};const xn=wn;t.render(e.createElement(e.StrictMode,null,e.createElement(xn,null),","),document.getElementById("root"))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QU8sVUFDUHdvQyxVQUFXLHNCQUNYeGtDLE9BQVEsU0FDUkQsTUFBTyxPQUNQMlosUUFBUyxPQUNUa1gsZUFBZ0IsU0FDaEJ3UixVQUFXLFlBSWY2QixHQUFJbjdCLGFBQWUsQ0FDakIyNEIsWUFBWSxFQUNaRSxPQUFRLFdBRVIsR0FHRnNDLEdBQUlsWixVQUFZLENBQ2QwVyxXQUFZamtELElBQUFBLEtBQ1pta0QsT0FBUW5rRCxJQUFBQSxNQUdWLFlDdktBaW5ELEVBQUFBLE9BQ0VoYSxFQUFBQSxjQUFDQSxFQUFBQSxXQUFnQixLQUNmQSxFQUFBQSxjQUFDd1osR0FBRyxNQUFHLEtBRVQxc0QsU0FBU210RCxlQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vc3JjL0Zvb3Rlci9Gb290ZXIuY3NzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL25vZGVfbW9kdWxlcy9hc2FwL2Jyb3dzZXItYXNhcC5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9ub2RlX21vZHVsZXMvYXNhcC9icm93c2VyLXJhdy5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL25vZGVfbW9kdWxlcy9vYmplY3QtYXNzaWduL2luZGV4LmpzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcy5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQuanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vaW5kZXguanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9ub2RlX21vZHVsZXMvcmVhY3QvaW5kZXguanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vbm9kZV9tb2R1bGVzL3N0cmluZy1oYXNoL2luZGV4LmpzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL2Rhc2hib2FyZC93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL2Rhc2hib2FyZC93ZWJwYWNrL3J1bnRpbWUvZ2xvYmFsIiwid2VicGFjazovL2Rhc2hib2FyZC93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL2Rhc2hib2FyZC93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvd2VicGFjay9ydW50aW1lL25vbmNlIiwid2VicGFjazovL2Rhc2hib2FyZC8uL3NyYy9hc3NldHMvY2xvc2UtaWNvbi5wbmciLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vc3JjL05vdGlmaWNhdGlvbnMvTm90aWZpY2F0aW9uSXRlbS5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9zcmMvTm90aWZpY2F0aW9ucy9Ob3RpZmljYXRpb25JdGVtU2hhcGUuanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vbm9kZV9tb2R1bGVzL2FwaHJvZGl0ZS9lcy9jaHVuay1mZWJjZTQ2Yi5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9ub2RlX21vZHVsZXMvYXBocm9kaXRlL2VzL2luZGV4LmpzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL3NyYy9Ob3RpZmljYXRpb25zL05vdGlmaWNhdGlvbnMuanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vc3JjL0xvZ2luL0xvZ2luLmpzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL3NyYy9Gb290ZXIvRm9vdGVyLmNzcz8xODUzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL3NyYy9BcHAvQXBwQ29udGV4dC5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9zcmMvRm9vdGVyL0Zvb3Rlci5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9zcmMvdXRpbHMvdXRpbHMuanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vc3JjL2Fzc2V0cy9ob2xiZXJ0b24tbG9nby5qcGciLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vc3JjL0hlYWRlci9IZWFkZXIuanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vc3JjL0NvdXJzZUxpc3QvQ291cnNlTGlzdFJvdy5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9zcmMvQ291cnNlTGlzdC9Db3Vyc2VTaGFwZS5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9zcmMvQ291cnNlTGlzdC9Db3Vyc2VMaXN0LmpzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL3NyYy9Cb2R5U2VjdGlvbi9Cb2R5U2VjdGlvbi5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9zcmMvQm9keVNlY3Rpb24vQm9keVNlY3Rpb25XaXRoTWFyZ2luQm90dG9tLmpzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL3NyYy9BcHAvQXBwLmpzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgLkFwcC1mb290ZXIge1xuICBmb250LWZhbWlseTogJ1BvcHBpbnMnLCBzYW5zLXNlcmlmO1xuICBmb250LXdlaWdodDogNDAwO1xuICBjb2xvcjogIzAwMDAwMDtcbiAgYm9yZGVyLXRvcDogMS45cHggc29saWQgI2RjMzYzMDtcbiAgaGVpZ2h0OiAyLjVyZW07XG4gIHdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufWAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL0Zvb3Rlci9Gb290ZXIuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0Usa0NBQWtDO0VBQ2xDLGdCQUFnQjtFQUNoQixjQUFjO0VBQ2QsK0JBQStCO0VBQy9CLGNBQWM7RUFDZCxXQUFXO0VBQ1gsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixrQkFBa0I7QUFDcEJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLkFwcC1mb290ZXIge1xcbiAgZm9udC1mYW1pbHk6ICdQb3BwaW5zJywgc2Fucy1zZXJpZjtcXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XFxuICBjb2xvcjogIzAwMDAwMDtcXG4gIGJvcmRlci10b3A6IDEuOXB4IHNvbGlkICNkYzM2MzA7XFxuICBoZWlnaHQ6IDIuNXJlbTtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgZm9udC1zdHlsZTogaXRhbGljO1xcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8vIHJhd0FzYXAgcHJvdmlkZXMgZXZlcnl0aGluZyB3ZSBuZWVkIGV4Y2VwdCBleGNlcHRpb24gbWFuYWdlbWVudC5cbnZhciByYXdBc2FwID0gcmVxdWlyZShcIi4vcmF3XCIpO1xuLy8gUmF3VGFza3MgYXJlIHJlY3ljbGVkIHRvIHJlZHVjZSBHQyBjaHVybi5cbnZhciBmcmVlVGFza3MgPSBbXTtcbi8vIFdlIHF1ZXVlIGVycm9ycyB0byBlbnN1cmUgdGhleSBhcmUgdGhyb3duIGluIHJpZ2h0IG9yZGVyIChGSUZPKS5cbi8vIEFycmF5LWFzLXF1ZXVlIGlzIGdvb2QgZW5vdWdoIGhlcmUsIHNpbmNlIHdlIGFyZSBqdXN0IGRlYWxpbmcgd2l0aCBleGNlcHRpb25zLlxudmFyIHBlbmRpbmdFcnJvcnMgPSBbXTtcbnZhciByZXF1ZXN0RXJyb3JUaHJvdyA9IHJhd0FzYXAubWFrZVJlcXVlc3RDYWxsRnJvbVRpbWVyKHRocm93Rmlyc3RFcnJvcik7XG5cbmZ1bmN0aW9uIHRocm93Rmlyc3RFcnJvcigpIHtcbiAgICBpZiAocGVuZGluZ0Vycm9ycy5sZW5ndGgpIHtcbiAgICAgICAgdGhyb3cgcGVuZGluZ0Vycm9ycy5zaGlmdCgpO1xuICAgIH1cbn1cblxuLyoqXG4gKiBDYWxscyBhIHRhc2sgYXMgc29vbiBhcyBwb3NzaWJsZSBhZnRlciByZXR1cm5pbmcsIGluIGl0cyBvd24gZXZlbnQsIHdpdGggcHJpb3JpdHlcbiAqIG92ZXIgb3RoZXIgZXZlbnRzIGxpa2UgYW5pbWF0aW9uLCByZWZsb3csIGFuZCByZXBhaW50LiBBbiBlcnJvciB0aHJvd24gZnJvbSBhblxuICogZXZlbnQgd2lsbCBub3QgaW50ZXJydXB0LCBub3IgZXZlbiBzdWJzdGFudGlhbGx5IHNsb3cgZG93biB0aGUgcHJvY2Vzc2luZyBvZlxuICogb3RoZXIgZXZlbnRzLCBidXQgd2lsbCBiZSByYXRoZXIgcG9zdHBvbmVkIHRvIGEgbG93ZXIgcHJpb3JpdHkgZXZlbnQuXG4gKiBAcGFyYW0ge3tjYWxsfX0gdGFzayBBIGNhbGxhYmxlIG9iamVjdCwgdHlwaWNhbGx5IGEgZnVuY3Rpb24gdGhhdCB0YWtlcyBub1xuICogYXJndW1lbnRzLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGFzYXA7XG5mdW5jdGlvbiBhc2FwKHRhc2spIHtcbiAgICB2YXIgcmF3VGFzaztcbiAgICBpZiAoZnJlZVRhc2tzLmxlbmd0aCkge1xuICAgICAgICByYXdUYXNrID0gZnJlZVRhc2tzLnBvcCgpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHJhd1Rhc2sgPSBuZXcgUmF3VGFzaygpO1xuICAgIH1cbiAgICByYXdUYXNrLnRhc2sgPSB0YXNrO1xuICAgIHJhd0FzYXAocmF3VGFzayk7XG59XG5cbi8vIFdlIHdyYXAgdGFza3Mgd2l0aCByZWN5Y2xhYmxlIHRhc2sgb2JqZWN0cy4gIEEgdGFzayBvYmplY3QgaW1wbGVtZW50c1xuLy8gYGNhbGxgLCBqdXN0IGxpa2UgYSBmdW5jdGlvbi5cbmZ1bmN0aW9uIFJhd1Rhc2soKSB7XG4gICAgdGhpcy50YXNrID0gbnVsbDtcbn1cblxuLy8gVGhlIHNvbGUgcHVycG9zZSBvZiB3cmFwcGluZyB0aGUgdGFzayBpcyB0byBjYXRjaCB0aGUgZXhjZXB0aW9uIGFuZCByZWN5Y2xlXG4vLyB0aGUgdGFzayBvYmplY3QgYWZ0ZXIgaXRzIHNpbmdsZSB1c2UuXG5SYXdUYXNrLnByb3RvdHlwZS5jYWxsID0gZnVuY3Rpb24gKCkge1xuICAgIHRyeSB7XG4gICAgICAgIHRoaXMudGFzay5jYWxsKCk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgaWYgKGFzYXAub25lcnJvcikge1xuICAgICAgICAgICAgLy8gVGhpcyBob29rIGV4aXN0cyBwdXJlbHkgZm9yIHRlc3RpbmcgcHVycG9zZXMuXG4gICAgICAgICAgICAvLyBJdHMgbmFtZSB3aWxsIGJlIHBlcmlvZGljYWxseSByYW5kb21pemVkIHRvIGJyZWFrIGFueSBjb2RlIHRoYXRcbiAgICAgICAgICAgIC8vIGRlcGVuZHMgb24gaXRzIGV4aXN0ZW5jZS5cbiAgICAgICAgICAgIGFzYXAub25lcnJvcihlcnJvcik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyBJbiBhIHdlYiBicm93c2VyLCBleGNlcHRpb25zIGFyZSBub3QgZmF0YWwuIEhvd2V2ZXIsIHRvIGF2b2lkXG4gICAgICAgICAgICAvLyBzbG93aW5nIGRvd24gdGhlIHF1ZXVlIG9mIHBlbmRpbmcgdGFza3MsIHdlIHJldGhyb3cgdGhlIGVycm9yIGluIGFcbiAgICAgICAgICAgIC8vIGxvd2VyIHByaW9yaXR5IHR1cm4uXG4gICAgICAgICAgICBwZW5kaW5nRXJyb3JzLnB1c2goZXJyb3IpO1xuICAgICAgICAgICAgcmVxdWVzdEVycm9yVGhyb3coKTtcbiAgICAgICAgfVxuICAgIH0gZmluYWxseSB7XG4gICAgICAgIHRoaXMudGFzayA9IG51bGw7XG4gICAgICAgIGZyZWVUYXNrc1tmcmVlVGFza3MubGVuZ3RoXSA9IHRoaXM7XG4gICAgfVxufTtcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vLyBVc2UgdGhlIGZhc3Rlc3QgbWVhbnMgcG9zc2libGUgdG8gZXhlY3V0ZSBhIHRhc2sgaW4gaXRzIG93biB0dXJuLCB3aXRoXG4vLyBwcmlvcml0eSBvdmVyIG90aGVyIGV2ZW50cyBpbmNsdWRpbmcgSU8sIGFuaW1hdGlvbiwgcmVmbG93LCBhbmQgcmVkcmF3XG4vLyBldmVudHMgaW4gYnJvd3NlcnMuXG4vL1xuLy8gQW4gZXhjZXB0aW9uIHRocm93biBieSBhIHRhc2sgd2lsbCBwZXJtYW5lbnRseSBpbnRlcnJ1cHQgdGhlIHByb2Nlc3Npbmcgb2Zcbi8vIHN1YnNlcXVlbnQgdGFza3MuIFRoZSBoaWdoZXIgbGV2ZWwgYGFzYXBgIGZ1bmN0aW9uIGVuc3VyZXMgdGhhdCBpZiBhblxuLy8gZXhjZXB0aW9uIGlzIHRocm93biBieSBhIHRhc2ssIHRoYXQgdGhlIHRhc2sgcXVldWUgd2lsbCBjb250aW51ZSBmbHVzaGluZyBhc1xuLy8gc29vbiBhcyBwb3NzaWJsZSwgYnV0IGlmIHlvdSB1c2UgYHJhd0FzYXBgIGRpcmVjdGx5LCB5b3UgYXJlIHJlc3BvbnNpYmxlIHRvXG4vLyBlaXRoZXIgZW5zdXJlIHRoYXQgbm8gZXhjZXB0aW9ucyBhcmUgdGhyb3duIGZyb20geW91ciB0YXNrLCBvciB0byBtYW51YWxseVxuLy8gY2FsbCBgcmF3QXNhcC5yZXF1ZXN0Rmx1c2hgIGlmIGFuIGV4Y2VwdGlvbiBpcyB0aHJvd24uXG5tb2R1bGUuZXhwb3J0cyA9IHJhd0FzYXA7XG5mdW5jdGlvbiByYXdBc2FwKHRhc2spIHtcbiAgICBpZiAoIXF1ZXVlLmxlbmd0aCkge1xuICAgICAgICByZXF1ZXN0Rmx1c2goKTtcbiAgICAgICAgZmx1c2hpbmcgPSB0cnVlO1xuICAgIH1cbiAgICAvLyBFcXVpdmFsZW50IHRvIHB1c2gsIGJ1dCBhdm9pZHMgYSBmdW5jdGlvbiBjYWxsLlxuICAgIHF1ZXVlW3F1ZXVlLmxlbmd0aF0gPSB0YXNrO1xufVxuXG52YXIgcXVldWUgPSBbXTtcbi8vIE9uY2UgYSBmbHVzaCBoYXMgYmVlbiByZXF1ZXN0ZWQsIG5vIGZ1cnRoZXIgY2FsbHMgdG8gYHJlcXVlc3RGbHVzaGAgYXJlXG4vLyBuZWNlc3NhcnkgdW50aWwgdGhlIG5leHQgYGZsdXNoYCBjb21wbGV0ZXMuXG52YXIgZmx1c2hpbmcgPSBmYWxzZTtcbi8vIGByZXF1ZXN0Rmx1c2hgIGlzIGFuIGltcGxlbWVudGF0aW9uLXNwZWNpZmljIG1ldGhvZCB0aGF0IGF0dGVtcHRzIHRvIGtpY2tcbi8vIG9mZiBhIGBmbHVzaGAgZXZlbnQgYXMgcXVpY2tseSBhcyBwb3NzaWJsZS4gYGZsdXNoYCB3aWxsIGF0dGVtcHQgdG8gZXhoYXVzdFxuLy8gdGhlIGV2ZW50IHF1ZXVlIGJlZm9yZSB5aWVsZGluZyB0byB0aGUgYnJvd3NlcidzIG93biBldmVudCBsb29wLlxudmFyIHJlcXVlc3RGbHVzaDtcbi8vIFRoZSBwb3NpdGlvbiBvZiB0aGUgbmV4dCB0YXNrIHRvIGV4ZWN1dGUgaW4gdGhlIHRhc2sgcXVldWUuIFRoaXMgaXNcbi8vIHByZXNlcnZlZCBiZXR3ZWVuIGNhbGxzIHRvIGBmbHVzaGAgc28gdGhhdCBpdCBjYW4gYmUgcmVzdW1lZCBpZlxuLy8gYSB0YXNrIHRocm93cyBhbiBleGNlcHRpb24uXG52YXIgaW5kZXggPSAwO1xuLy8gSWYgYSB0YXNrIHNjaGVkdWxlcyBhZGRpdGlvbmFsIHRhc2tzIHJlY3Vyc2l2ZWx5LCB0aGUgdGFzayBxdWV1ZSBjYW4gZ3Jvd1xuLy8gdW5ib3VuZGVkLiBUbyBwcmV2ZW50IG1lbW9yeSBleGhhdXN0aW9uLCB0aGUgdGFzayBxdWV1ZSB3aWxsIHBlcmlvZGljYWxseVxuLy8gdHJ1bmNhdGUgYWxyZWFkeS1jb21wbGV0ZWQgdGFza3MuXG52YXIgY2FwYWNpdHkgPSAxMDI0O1xuXG4vLyBUaGUgZmx1c2ggZnVuY3Rpb24gcHJvY2Vzc2VzIGFsbCB0YXNrcyB0aGF0IGhhdmUgYmVlbiBzY2hlZHVsZWQgd2l0aFxuLy8gYHJhd0FzYXBgIHVubGVzcyBhbmQgdW50aWwgb25lIG9mIHRob3NlIHRhc2tzIHRocm93cyBhbiBleGNlcHRpb24uXG4vLyBJZiBhIHRhc2sgdGhyb3dzIGFuIGV4Y2VwdGlvbiwgYGZsdXNoYCBlbnN1cmVzIHRoYXQgaXRzIHN0YXRlIHdpbGwgcmVtYWluXG4vLyBjb25zaXN0ZW50IGFuZCB3aWxsIHJlc3VtZSB3aGVyZSBpdCBsZWZ0IG9mZiB3aGVuIGNhbGxlZCBhZ2Fpbi5cbi8vIEhvd2V2ZXIsIGBmbHVzaGAgZG9lcyBub3QgbWFrZSBhbnkgYXJyYW5nZW1lbnRzIHRvIGJlIGNhbGxlZCBhZ2FpbiBpZiBhblxuLy8gZXhjZXB0aW9uIGlzIHRocm93bi5cbmZ1bmN0aW9uIGZsdXNoKCkge1xuICAgIHdoaWxlIChpbmRleCA8IHF1ZXVlLmxlbmd0aCkge1xuICAgICAgICB2YXIgY3VycmVudEluZGV4ID0gaW5kZXg7XG4gICAgICAgIC8vIEFkdmFuY2UgdGhlIGluZGV4IGJlZm9yZSBjYWxsaW5nIHRoZSB0YXNrLiBUaGlzIGVuc3VyZXMgdGhhdCB3ZSB3aWxsXG4gICAgICAgIC8vIGJlZ2luIGZsdXNoaW5nIG9uIHRoZSBuZXh0IHRhc2sgdGhlIHRhc2sgdGhyb3dzIGFuIGVycm9yLlxuICAgICAgICBpbmRleCA9IGluZGV4ICsgMTtcbiAgICAgICAgcXVldWVbY3VycmVudEluZGV4XS5jYWxsKCk7XG4gICAgICAgIC8vIFByZXZlbnQgbGVha2luZyBtZW1vcnkgZm9yIGxvbmcgY2hhaW5zIG9mIHJlY3Vyc2l2ZSBjYWxscyB0byBgYXNhcGAuXG4gICAgICAgIC8vIElmIHdlIGNhbGwgYGFzYXBgIHdpdGhpbiB0YXNrcyBzY2hlZHVsZWQgYnkgYGFzYXBgLCB0aGUgcXVldWUgd2lsbFxuICAgICAgICAvLyBncm93LCBidXQgdG8gYXZvaWQgYW4gTyhuKSB3YWxrIGZvciBldmVyeSB0YXNrIHdlIGV4ZWN1dGUsIHdlIGRvbid0XG4gICAgICAgIC8vIHNoaWZ0IHRhc2tzIG9mZiB0aGUgcXVldWUgYWZ0ZXIgdGhleSBoYXZlIGJlZW4gZXhlY3V0ZWQuXG4gICAgICAgIC8vIEluc3RlYWQsIHdlIHBlcmlvZGljYWxseSBzaGlmdCAxMDI0IHRhc2tzIG9mZiB0aGUgcXVldWUuXG4gICAgICAgIGlmIChpbmRleCA+IGNhcGFjaXR5KSB7XG4gICAgICAgICAgICAvLyBNYW51YWxseSBzaGlmdCBhbGwgdmFsdWVzIHN0YXJ0aW5nIGF0IHRoZSBpbmRleCBiYWNrIHRvIHRoZVxuICAgICAgICAgICAgLy8gYmVnaW5uaW5nIG9mIHRoZSBxdWV1ZS5cbiAgICAgICAgICAgIGZvciAodmFyIHNjYW4gPSAwLCBuZXdMZW5ndGggPSBxdWV1ZS5sZW5ndGggLSBpbmRleDsgc2NhbiA8IG5ld0xlbmd0aDsgc2NhbisrKSB7XG4gICAgICAgICAgICAgICAgcXVldWVbc2Nhbl0gPSBxdWV1ZVtzY2FuICsgaW5kZXhdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcXVldWUubGVuZ3RoIC09IGluZGV4O1xuICAgICAgICAgICAgaW5kZXggPSAwO1xuICAgICAgICB9XG4gICAgfVxuICAgIHF1ZXVlLmxlbmd0aCA9IDA7XG4gICAgaW5kZXggPSAwO1xuICAgIGZsdXNoaW5nID0gZmFsc2U7XG59XG5cbi8vIGByZXF1ZXN0Rmx1c2hgIGlzIGltcGxlbWVudGVkIHVzaW5nIGEgc3RyYXRlZ3kgYmFzZWQgb24gZGF0YSBjb2xsZWN0ZWQgZnJvbVxuLy8gZXZlcnkgYXZhaWxhYmxlIFNhdWNlTGFicyBTZWxlbml1bSB3ZWIgZHJpdmVyIHdvcmtlciBhdCB0aW1lIG9mIHdyaXRpbmcuXG4vLyBodHRwczovL2RvY3MuZ29vZ2xlLmNvbS9zcHJlYWRzaGVldHMvZC8xbUctNVVZR3VwNXF4R2RFTVdraFA2QldDejA1M05VYjJFMVFvVVRVMTZ1QS9lZGl0I2dpZD03ODM3MjQ1OTNcblxuLy8gU2FmYXJpIDYgYW5kIDYuMSBmb3IgZGVza3RvcCwgaVBhZCwgYW5kIGlQaG9uZSBhcmUgdGhlIG9ubHkgYnJvd3NlcnMgdGhhdFxuLy8gaGF2ZSBXZWJLaXRNdXRhdGlvbk9ic2VydmVyIGJ1dCBub3QgdW4tcHJlZml4ZWQgTXV0YXRpb25PYnNlcnZlci5cbi8vIE11c3QgdXNlIGBnbG9iYWxgIG9yIGBzZWxmYCBpbnN0ZWFkIG9mIGB3aW5kb3dgIHRvIHdvcmsgaW4gYm90aCBmcmFtZXMgYW5kIHdlYlxuLy8gd29ya2Vycy4gYGdsb2JhbGAgaXMgYSBwcm92aXNpb24gb2YgQnJvd3NlcmlmeSwgTXIsIE1ycywgb3IgTW9wLlxuXG4vKiBnbG9iYWxzIHNlbGYgKi9cbnZhciBzY29wZSA9IHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwgOiBzZWxmO1xudmFyIEJyb3dzZXJNdXRhdGlvbk9ic2VydmVyID0gc2NvcGUuTXV0YXRpb25PYnNlcnZlciB8fCBzY29wZS5XZWJLaXRNdXRhdGlvbk9ic2VydmVyO1xuXG4vLyBNdXRhdGlvbk9ic2VydmVycyBhcmUgZGVzaXJhYmxlIGJlY2F1c2UgdGhleSBoYXZlIGhpZ2ggcHJpb3JpdHkgYW5kIHdvcmtcbi8vIHJlbGlhYmx5IGV2ZXJ5d2hlcmUgdGhleSBhcmUgaW1wbGVtZW50ZWQuXG4vLyBUaGV5IGFyZSBpbXBsZW1lbnRlZCBpbiBhbGwgbW9kZXJuIGJyb3dzZXJzLlxuLy9cbi8vIC0gQW5kcm9pZCA0LTQuM1xuLy8gLSBDaHJvbWUgMjYtMzRcbi8vIC0gRmlyZWZveCAxNC0yOVxuLy8gLSBJbnRlcm5ldCBFeHBsb3JlciAxMVxuLy8gLSBpUGFkIFNhZmFyaSA2LTcuMVxuLy8gLSBpUGhvbmUgU2FmYXJpIDctNy4xXG4vLyAtIFNhZmFyaSA2LTdcbmlmICh0eXBlb2YgQnJvd3Nlck11dGF0aW9uT2JzZXJ2ZXIgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHJlcXVlc3RGbHVzaCA9IG1ha2VSZXF1ZXN0Q2FsbEZyb21NdXRhdGlvbk9ic2VydmVyKGZsdXNoKTtcblxuLy8gTWVzc2FnZUNoYW5uZWxzIGFyZSBkZXNpcmFibGUgYmVjYXVzZSB0aGV5IGdpdmUgZGlyZWN0IGFjY2VzcyB0byB0aGUgSFRNTFxuLy8gdGFzayBxdWV1ZSwgYXJlIGltcGxlbWVudGVkIGluIEludGVybmV0IEV4cGxvcmVyIDEwLCBTYWZhcmkgNS4wLTEsIGFuZCBPcGVyYVxuLy8gMTEtMTIsIGFuZCBpbiB3ZWIgd29ya2VycyBpbiBtYW55IGVuZ2luZXMuXG4vLyBBbHRob3VnaCBtZXNzYWdlIGNoYW5uZWxzIHlpZWxkIHRvIGFueSBxdWV1ZWQgcmVuZGVyaW5nIGFuZCBJTyB0YXNrcywgdGhleVxuLy8gd291bGQgYmUgYmV0dGVyIHRoYW4gaW1wb3NpbmcgdGhlIDRtcyBkZWxheSBvZiB0aW1lcnMuXG4vLyBIb3dldmVyLCB0aGV5IGRvIG5vdCB3b3JrIHJlbGlhYmx5IGluIEludGVybmV0IEV4cGxvcmVyIG9yIFNhZmFyaS5cblxuLy8gSW50ZXJuZXQgRXhwbG9yZXIgMTAgaXMgdGhlIG9ubHkgYnJvd3NlciB0aGF0IGhhcyBzZXRJbW1lZGlhdGUgYnV0IGRvZXNcbi8vIG5vdCBoYXZlIE11dGF0aW9uT2JzZXJ2ZXJzLlxuLy8gQWx0aG91Z2ggc2V0SW1tZWRpYXRlIHlpZWxkcyB0byB0aGUgYnJvd3NlcidzIHJlbmRlcmVyLCBpdCB3b3VsZCBiZVxuLy8gcHJlZmVycmFibGUgdG8gZmFsbGluZyBiYWNrIHRvIHNldFRpbWVvdXQgc2luY2UgaXQgZG9lcyBub3QgaGF2ZVxuLy8gdGhlIG1pbmltdW0gNG1zIHBlbmFsdHkuXG4vLyBVbmZvcnR1bmF0ZWx5IHRoZXJlIGFwcGVhcnMgdG8gYmUgYSBidWcgaW4gSW50ZXJuZXQgRXhwbG9yZXIgMTAgTW9iaWxlIChhbmRcbi8vIERlc2t0b3AgdG8gYSBsZXNzZXIgZXh0ZW50KSB0aGF0IHJlbmRlcnMgYm90aCBzZXRJbW1lZGlhdGUgYW5kXG4vLyBNZXNzYWdlQ2hhbm5lbCB1c2VsZXNzIGZvciB0aGUgcHVycG9zZXMgb2YgQVNBUC5cbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9rcmlza293YWwvcS9pc3N1ZXMvMzk2XG5cbi8vIFRpbWVycyBhcmUgaW1wbGVtZW50ZWQgdW5pdmVyc2FsbHkuXG4vLyBXZSBmYWxsIGJhY2sgdG8gdGltZXJzIGluIHdvcmtlcnMgaW4gbW9zdCBlbmdpbmVzLCBhbmQgaW4gZm9yZWdyb3VuZFxuLy8gY29udGV4dHMgaW4gdGhlIGZvbGxvd2luZyBicm93c2Vycy5cbi8vIEhvd2V2ZXIsIG5vdGUgdGhhdCBldmVuIHRoaXMgc2ltcGxlIGNhc2UgcmVxdWlyZXMgbnVhbmNlcyB0byBvcGVyYXRlIGluIGFcbi8vIGJyb2FkIHNwZWN0cnVtIG9mIGJyb3dzZXJzLlxuLy9cbi8vIC0gRmlyZWZveCAzLTEzXG4vLyAtIEludGVybmV0IEV4cGxvcmVyIDYtOVxuLy8gLSBpUGFkIFNhZmFyaSA0LjNcbi8vIC0gTHlueCAyLjguN1xufSBlbHNlIHtcbiAgICByZXF1ZXN0Rmx1c2ggPSBtYWtlUmVxdWVzdENhbGxGcm9tVGltZXIoZmx1c2gpO1xufVxuXG4vLyBgcmVxdWVzdEZsdXNoYCByZXF1ZXN0cyB0aGF0IHRoZSBoaWdoIHByaW9yaXR5IGV2ZW50IHF1ZXVlIGJlIGZsdXNoZWQgYXNcbi8vIHNvb24gYXMgcG9zc2libGUuXG4vLyBUaGlzIGlzIHVzZWZ1bCB0byBwcmV2ZW50IGFuIGVycm9yIHRocm93biBpbiBhIHRhc2sgZnJvbSBzdGFsbGluZyB0aGUgZXZlbnRcbi8vIHF1ZXVlIGlmIHRoZSBleGNlcHRpb24gaGFuZGxlZCBieSBOb2RlLmpz4oCZc1xuLy8gYHByb2Nlc3Mub24oXCJ1bmNhdWdodEV4Y2VwdGlvblwiKWAgb3IgYnkgYSBkb21haW4uXG5yYXdBc2FwLnJlcXVlc3RGbHVzaCA9IHJlcXVlc3RGbHVzaDtcblxuLy8gVG8gcmVxdWVzdCBhIGhpZ2ggcHJpb3JpdHkgZXZlbnQsIHdlIGluZHVjZSBhIG11dGF0aW9uIG9ic2VydmVyIGJ5IHRvZ2dsaW5nXG4vLyB0aGUgdGV4dCBvZiBhIHRleHQgbm9kZSBiZXR3ZWVuIFwiMVwiIGFuZCBcIi0xXCIuXG5mdW5jdGlvbiBtYWtlUmVxdWVzdENhbGxGcm9tTXV0YXRpb25PYnNlcnZlcihjYWxsYmFjaykge1xuICAgIHZhciB0b2dnbGUgPSAxO1xuICAgIHZhciBvYnNlcnZlciA9IG5ldyBCcm93c2VyTXV0YXRpb25PYnNlcnZlcihjYWxsYmFjayk7XG4gICAgdmFyIG5vZGUgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShcIlwiKTtcbiAgICBvYnNlcnZlci5vYnNlcnZlKG5vZGUsIHtjaGFyYWN0ZXJEYXRhOiB0cnVlfSk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIHJlcXVlc3RDYWxsKCkge1xuICAgICAgICB0b2dnbGUgPSAtdG9nZ2xlO1xuICAgICAgICBub2RlLmRhdGEgPSB0b2dnbGU7XG4gICAgfTtcbn1cblxuLy8gVGhlIG1lc3NhZ2UgY2hhbm5lbCB0ZWNobmlxdWUgd2FzIGRpc2NvdmVyZWQgYnkgTWFsdGUgVWJsIGFuZCB3YXMgdGhlXG4vLyBvcmlnaW5hbCBmb3VuZGF0aW9uIGZvciB0aGlzIGxpYnJhcnkuXG4vLyBodHRwOi8vd3d3Lm5vbmJsb2NraW5nLmlvLzIwMTEvMDYvd2luZG93bmV4dHRpY2suaHRtbFxuXG4vLyBTYWZhcmkgNi4wLjUgKGF0IGxlYXN0KSBpbnRlcm1pdHRlbnRseSBmYWlscyB0byBjcmVhdGUgbWVzc2FnZSBwb3J0cyBvbiBhXG4vLyBwYWdlJ3MgZmlyc3QgbG9hZC4gVGhhbmtmdWxseSwgdGhpcyB2ZXJzaW9uIG9mIFNhZmFyaSBzdXBwb3J0c1xuLy8gTXV0YXRpb25PYnNlcnZlcnMsIHNvIHdlIGRvbid0IG5lZWQgdG8gZmFsbCBiYWNrIGluIHRoYXQgY2FzZS5cblxuLy8gZnVuY3Rpb24gbWFrZVJlcXVlc3RDYWxsRnJvbU1lc3NhZ2VDaGFubmVsKGNhbGxiYWNrKSB7XG4vLyAgICAgdmFyIGNoYW5uZWwgPSBuZXcgTWVzc2FnZUNoYW5uZWwoKTtcbi8vICAgICBjaGFubmVsLnBvcnQxLm9ubWVzc2FnZSA9IGNhbGxiYWNrO1xuLy8gICAgIHJldHVybiBmdW5jdGlvbiByZXF1ZXN0Q2FsbCgpIHtcbi8vICAgICAgICAgY2hhbm5lbC5wb3J0Mi5wb3N0TWVzc2FnZSgwKTtcbi8vICAgICB9O1xuLy8gfVxuXG4vLyBGb3IgcmVhc29ucyBleHBsYWluZWQgYWJvdmUsIHdlIGFyZSBhbHNvIHVuYWJsZSB0byB1c2UgYHNldEltbWVkaWF0ZWBcbi8vIHVuZGVyIGFueSBjaXJjdW1zdGFuY2VzLlxuLy8gRXZlbiBpZiB3ZSB3ZXJlLCB0aGVyZSBpcyBhbm90aGVyIGJ1ZyBpbiBJbnRlcm5ldCBFeHBsb3JlciAxMC5cbi8vIEl0IGlzIG5vdCBzdWZmaWNpZW50IHRvIGFzc2lnbiBgc2V0SW1tZWRpYXRlYCB0byBgcmVxdWVzdEZsdXNoYCBiZWNhdXNlXG4vLyBgc2V0SW1tZWRpYXRlYCBtdXN0IGJlIGNhbGxlZCAqYnkgbmFtZSogYW5kIHRoZXJlZm9yZSBtdXN0IGJlIHdyYXBwZWQgaW4gYVxuLy8gY2xvc3VyZS5cbi8vIE5ldmVyIGZvcmdldC5cblxuLy8gZnVuY3Rpb24gbWFrZVJlcXVlc3RDYWxsRnJvbVNldEltbWVkaWF0ZShjYWxsYmFjaykge1xuLy8gICAgIHJldHVybiBmdW5jdGlvbiByZXF1ZXN0Q2FsbCgpIHtcbi8vICAgICAgICAgc2V0SW1tZWRpYXRlKGNhbGxiYWNrKTtcbi8vICAgICB9O1xuLy8gfVxuXG4vLyBTYWZhcmkgNi4wIGhhcyBhIHByb2JsZW0gd2hlcmUgdGltZXJzIHdpbGwgZ2V0IGxvc3Qgd2hpbGUgdGhlIHVzZXIgaXNcbi8vIHNjcm9sbGluZy4gVGhpcyBwcm9ibGVtIGRvZXMgbm90IGltcGFjdCBBU0FQIGJlY2F1c2UgU2FmYXJpIDYuMCBzdXBwb3J0c1xuLy8gbXV0YXRpb24gb2JzZXJ2ZXJzLCBzbyB0aGF0IGltcGxlbWVudGF0aW9uIGlzIHVzZWQgaW5zdGVhZC5cbi8vIEhvd2V2ZXIsIGlmIHdlIGV2ZXIgZWxlY3QgdG8gdXNlIHRpbWVycyBpbiBTYWZhcmksIHRoZSBwcmV2YWxlbnQgd29yay1hcm91bmRcbi8vIGlzIHRvIGFkZCBhIHNjcm9sbCBldmVudCBsaXN0ZW5lciB0aGF0IGNhbGxzIGZvciBhIGZsdXNoLlxuXG4vLyBgc2V0VGltZW91dGAgZG9lcyBub3QgY2FsbCB0aGUgcGFzc2VkIGNhbGxiYWNrIGlmIHRoZSBkZWxheSBpcyBsZXNzIHRoYW5cbi8vIGFwcHJveGltYXRlbHkgNyBpbiB3ZWIgd29ya2VycyBpbiBGaXJlZm94IDggdGhyb3VnaCAxOCwgYW5kIHNvbWV0aW1lcyBub3Rcbi8vIGV2ZW4gdGhlbi5cblxuZnVuY3Rpb24gbWFrZVJlcXVlc3RDYWxsRnJvbVRpbWVyKGNhbGxiYWNrKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIHJlcXVlc3RDYWxsKCkge1xuICAgICAgICAvLyBXZSBkaXNwYXRjaCBhIHRpbWVvdXQgd2l0aCBhIHNwZWNpZmllZCBkZWxheSBvZiAwIGZvciBlbmdpbmVzIHRoYXRcbiAgICAgICAgLy8gY2FuIHJlbGlhYmx5IGFjY29tbW9kYXRlIHRoYXQgcmVxdWVzdC4gVGhpcyB3aWxsIHVzdWFsbHkgYmUgc25hcHBlZFxuICAgICAgICAvLyB0byBhIDQgbWlsaXNlY29uZCBkZWxheSwgYnV0IG9uY2Ugd2UncmUgZmx1c2hpbmcsIHRoZXJlJ3Mgbm8gZGVsYXlcbiAgICAgICAgLy8gYmV0d2VlbiBldmVudHMuXG4gICAgICAgIHZhciB0aW1lb3V0SGFuZGxlID0gc2V0VGltZW91dChoYW5kbGVUaW1lciwgMCk7XG4gICAgICAgIC8vIEhvd2V2ZXIsIHNpbmNlIHRoaXMgdGltZXIgZ2V0cyBmcmVxdWVudGx5IGRyb3BwZWQgaW4gRmlyZWZveFxuICAgICAgICAvLyB3b3JrZXJzLCB3ZSBlbmxpc3QgYW4gaW50ZXJ2YWwgaGFuZGxlIHRoYXQgd2lsbCB0cnkgdG8gZmlyZVxuICAgICAgICAvLyBhbiBldmVudCAyMCB0aW1lcyBwZXIgc2Vjb25kIHVudGlsIGl0IHN1Y2NlZWRzLlxuICAgICAgICB2YXIgaW50ZXJ2YWxIYW5kbGUgPSBzZXRJbnRlcnZhbChoYW5kbGVUaW1lciwgNTApO1xuXG4gICAgICAgIGZ1bmN0aW9uIGhhbmRsZVRpbWVyKCkge1xuICAgICAgICAgICAgLy8gV2hpY2hldmVyIHRpbWVyIHN1Y2NlZWRzIHdpbGwgY2FuY2VsIGJvdGggdGltZXJzIGFuZFxuICAgICAgICAgICAgLy8gZXhlY3V0ZSB0aGUgY2FsbGJhY2suXG4gICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZW91dEhhbmRsZSk7XG4gICAgICAgICAgICBjbGVhckludGVydmFsKGludGVydmFsSGFuZGxlKTtcbiAgICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgIH1cbiAgICB9O1xufVxuXG4vLyBUaGlzIGlzIGZvciBgYXNhcC5qc2Agb25seS5cbi8vIEl0cyBuYW1lIHdpbGwgYmUgcGVyaW9kaWNhbGx5IHJhbmRvbWl6ZWQgdG8gYnJlYWsgYW55IGNvZGUgdGhhdCBkZXBlbmRzIG9uXG4vLyBpdHMgZXhpc3RlbmNlLlxucmF3QXNhcC5tYWtlUmVxdWVzdENhbGxGcm9tVGltZXIgPSBtYWtlUmVxdWVzdENhbGxGcm9tVGltZXI7XG5cbi8vIEFTQVAgd2FzIG9yaWdpbmFsbHkgYSBuZXh0VGljayBzaGltIGluY2x1ZGVkIGluIFEuIFRoaXMgd2FzIGZhY3RvcmVkIG91dFxuLy8gaW50byB0aGlzIEFTQVAgcGFja2FnZS4gSXQgd2FzIGxhdGVyIGFkYXB0ZWQgdG8gUlNWUCB3aGljaCBtYWRlIGZ1cnRoZXJcbi8vIGFtZW5kbWVudHMuIFRoZXNlIGRlY2lzaW9ucywgcGFydGljdWxhcmx5IHRvIG1hcmdpbmFsaXplIE1lc3NhZ2VDaGFubmVsIGFuZFxuLy8gdG8gY2FwdHVyZSB0aGUgTXV0YXRpb25PYnNlcnZlciBpbXBsZW1lbnRhdGlvbiBpbiBhIGNsb3N1cmUsIHdlcmUgaW50ZWdyYXRlZFxuLy8gYmFjayBpbnRvIEFTQVAgcHJvcGVyLlxuLy8gaHR0cHM6Ly9naXRodWIuY29tL3RpbGRlaW8vcnN2cC5qcy9ibG9iL2NkZGY3MjMyNTQ2YTljZjg1ODUyNGI3NWNkZTZmOWVkZjcyNjIwYTcvbGliL3JzdnAvYXNhcC5qc1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107XG5cbiAgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07XG5cbiAgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIi8qXG5vYmplY3QtYXNzaWduXG4oYykgU2luZHJlIFNvcmh1c1xuQGxpY2Vuc2UgTUlUXG4qL1xuXG4ndXNlIHN0cmljdCc7XG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIHByb3BJc0VudW1lcmFibGUgPSBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuXG5mdW5jdGlvbiB0b09iamVjdCh2YWwpIHtcblx0aWYgKHZhbCA9PT0gbnVsbCB8fCB2YWwgPT09IHVuZGVmaW5lZCkge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ09iamVjdC5hc3NpZ24gY2Fubm90IGJlIGNhbGxlZCB3aXRoIG51bGwgb3IgdW5kZWZpbmVkJyk7XG5cdH1cblxuXHRyZXR1cm4gT2JqZWN0KHZhbCk7XG59XG5cbmZ1bmN0aW9uIHNob3VsZFVzZU5hdGl2ZSgpIHtcblx0dHJ5IHtcblx0XHRpZiAoIU9iamVjdC5hc3NpZ24pIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBEZXRlY3QgYnVnZ3kgcHJvcGVydHkgZW51bWVyYXRpb24gb3JkZXIgaW4gb2xkZXIgVjggdmVyc2lvbnMuXG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD00MTE4XG5cdFx0dmFyIHRlc3QxID0gbmV3IFN0cmluZygnYWJjJyk7ICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ldy13cmFwcGVyc1xuXHRcdHRlc3QxWzVdID0gJ2RlJztcblx0XHRpZiAoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDEpWzBdID09PSAnNScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QyID0ge307XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCAxMDsgaSsrKSB7XG5cdFx0XHR0ZXN0MlsnXycgKyBTdHJpbmcuZnJvbUNoYXJDb2RlKGkpXSA9IGk7XG5cdFx0fVxuXHRcdHZhciBvcmRlcjIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MikubWFwKGZ1bmN0aW9uIChuKSB7XG5cdFx0XHRyZXR1cm4gdGVzdDJbbl07XG5cdFx0fSk7XG5cdFx0aWYgKG9yZGVyMi5qb2luKCcnKSAhPT0gJzAxMjM0NTY3ODknKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MyA9IHt9O1xuXHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcuc3BsaXQoJycpLmZvckVhY2goZnVuY3Rpb24gKGxldHRlcikge1xuXHRcdFx0dGVzdDNbbGV0dGVyXSA9IGxldHRlcjtcblx0XHR9KTtcblx0XHRpZiAoT2JqZWN0LmtleXMoT2JqZWN0LmFzc2lnbih7fSwgdGVzdDMpKS5qb2luKCcnKSAhPT1cblx0XHRcdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdHJldHVybiB0cnVlO1xuXHR9IGNhdGNoIChlcnIpIHtcblx0XHQvLyBXZSBkb24ndCBleHBlY3QgYW55IG9mIHRoZSBhYm92ZSB0byB0aHJvdywgYnV0IGJldHRlciB0byBiZSBzYWZlLlxuXHRcdHJldHVybiBmYWxzZTtcblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNob3VsZFVzZU5hdGl2ZSgpID8gT2JqZWN0LmFzc2lnbiA6IGZ1bmN0aW9uICh0YXJnZXQsIHNvdXJjZSkge1xuXHR2YXIgZnJvbTtcblx0dmFyIHRvID0gdG9PYmplY3QodGFyZ2V0KTtcblx0dmFyIHN5bWJvbHM7XG5cblx0Zm9yICh2YXIgcyA9IDE7IHMgPCBhcmd1bWVudHMubGVuZ3RoOyBzKyspIHtcblx0XHRmcm9tID0gT2JqZWN0KGFyZ3VtZW50c1tzXSk7XG5cblx0XHRmb3IgKHZhciBrZXkgaW4gZnJvbSkge1xuXHRcdFx0aWYgKGhhc093blByb3BlcnR5LmNhbGwoZnJvbSwga2V5KSkge1xuXHRcdFx0XHR0b1trZXldID0gZnJvbVtrZXldO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcblx0XHRcdHN5bWJvbHMgPSBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZnJvbSk7XG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN5bWJvbHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0aWYgKHByb3BJc0VudW1lcmFibGUuY2FsbChmcm9tLCBzeW1ib2xzW2ldKSkge1xuXHRcdFx0XHRcdHRvW3N5bWJvbHNbaV1dID0gZnJvbVtzeW1ib2xzW2ldXTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiB0bztcbn07XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gcmVxdWlyZSgnLi9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQnKTtcblxuZnVuY3Rpb24gZW1wdHlGdW5jdGlvbigpIHt9XG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0KCkge31cbmVtcHR5RnVuY3Rpb25XaXRoUmVzZXQucmVzZXRXYXJuaW5nQ2FjaGUgPSBlbXB0eUZ1bmN0aW9uO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCkge1xuICBmdW5jdGlvbiBzaGltKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSwgc2VjcmV0KSB7XG4gICAgaWYgKHNlY3JldCA9PT0gUmVhY3RQcm9wVHlwZXNTZWNyZXQpIHtcbiAgICAgIC8vIEl0IGlzIHN0aWxsIHNhZmUgd2hlbiBjYWxsZWQgZnJvbSBSZWFjdC5cbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdmFyIGVyciA9IG5ldyBFcnJvcihcbiAgICAgICdDYWxsaW5nIFByb3BUeXBlcyB2YWxpZGF0b3JzIGRpcmVjdGx5IGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLiAnICtcbiAgICAgICdVc2UgUHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzKCkgdG8gY2FsbCB0aGVtLiAnICtcbiAgICAgICdSZWFkIG1vcmUgYXQgaHR0cDovL2ZiLm1lL3VzZS1jaGVjay1wcm9wLXR5cGVzJ1xuICAgICk7XG4gICAgZXJyLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgdGhyb3cgZXJyO1xuICB9O1xuICBzaGltLmlzUmVxdWlyZWQgPSBzaGltO1xuICBmdW5jdGlvbiBnZXRTaGltKCkge1xuICAgIHJldHVybiBzaGltO1xuICB9O1xuICAvLyBJbXBvcnRhbnQhXG4gIC8vIEtlZXAgdGhpcyBsaXN0IGluIHN5bmMgd2l0aCBwcm9kdWN0aW9uIHZlcnNpb24gaW4gYC4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMuanNgLlxuICB2YXIgUmVhY3RQcm9wVHlwZXMgPSB7XG4gICAgYXJyYXk6IHNoaW0sXG4gICAgYmlnaW50OiBzaGltLFxuICAgIGJvb2w6IHNoaW0sXG4gICAgZnVuYzogc2hpbSxcbiAgICBudW1iZXI6IHNoaW0sXG4gICAgb2JqZWN0OiBzaGltLFxuICAgIHN0cmluZzogc2hpbSxcbiAgICBzeW1ib2w6IHNoaW0sXG5cbiAgICBhbnk6IHNoaW0sXG4gICAgYXJyYXlPZjogZ2V0U2hpbSxcbiAgICBlbGVtZW50OiBzaGltLFxuICAgIGVsZW1lbnRUeXBlOiBzaGltLFxuICAgIGluc3RhbmNlT2Y6IGdldFNoaW0sXG4gICAgbm9kZTogc2hpbSxcbiAgICBvYmplY3RPZjogZ2V0U2hpbSxcbiAgICBvbmVPZjogZ2V0U2hpbSxcbiAgICBvbmVPZlR5cGU6IGdldFNoaW0sXG4gICAgc2hhcGU6IGdldFNoaW0sXG4gICAgZXhhY3Q6IGdldFNoaW0sXG5cbiAgICBjaGVja1Byb3BUeXBlczogZW1wdHlGdW5jdGlvbldpdGhSZXNldCxcbiAgICByZXNldFdhcm5pbmdDYWNoZTogZW1wdHlGdW5jdGlvblxuICB9O1xuXG4gIFJlYWN0UHJvcFR5cGVzLlByb3BUeXBlcyA9IFJlYWN0UHJvcFR5cGVzO1xuXG4gIHJldHVybiBSZWFjdFByb3BUeXBlcztcbn07XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIHZhciBSZWFjdElzID0gcmVxdWlyZSgncmVhY3QtaXMnKTtcblxuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBkZXZlbG9wbWVudCBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICB2YXIgdGhyb3dPbkRpcmVjdEFjY2VzcyA9IHRydWU7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFR5cGVDaGVja2VycycpKFJlYWN0SXMuaXNFbGVtZW50LCB0aHJvd09uRGlyZWN0QWNjZXNzKTtcbn0gZWxzZSB7XG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IHByb2R1Y3Rpb24gYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcycpKCk7XG59XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gJ1NFQ1JFVF9ET19OT1RfUEFTU19USElTX09SX1lPVV9XSUxMX0JFX0ZJUkVEJztcblxubW9kdWxlLmV4cG9ydHMgPSBSZWFjdFByb3BUeXBlc1NlY3JldDtcbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuMTQuMFxuICogcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuLypcbiBNb2Rlcm5penIgMy4wLjBwcmUgKEN1c3RvbSBCdWlsZCkgfCBNSVRcbiovXG4ndXNlIHN0cmljdCc7dmFyIGFhPXJlcXVpcmUoXCJyZWFjdFwiKSxuPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLHI9cmVxdWlyZShcInNjaGVkdWxlclwiKTtmdW5jdGlvbiB1KGEpe2Zvcih2YXIgYj1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsYz0xO2M8YXJndW1lbnRzLmxlbmd0aDtjKyspYis9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbY10pO3JldHVyblwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0IFwiK2IrXCIgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwifWlmKCFhYSl0aHJvdyBFcnJvcih1KDIyNykpO1xuZnVuY3Rpb24gYmEoYSxiLGMsZCxlLGYsZyxoLGspe3ZhciBsPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywzKTt0cnl7Yi5hcHBseShjLGwpfWNhdGNoKG0pe3RoaXMub25FcnJvcihtKX19dmFyIGRhPSExLGVhPW51bGwsZmE9ITEsaGE9bnVsbCxpYT17b25FcnJvcjpmdW5jdGlvbihhKXtkYT0hMDtlYT1hfX07ZnVuY3Rpb24gamEoYSxiLGMsZCxlLGYsZyxoLGspe2RhPSExO2VhPW51bGw7YmEuYXBwbHkoaWEsYXJndW1lbnRzKX1mdW5jdGlvbiBrYShhLGIsYyxkLGUsZixnLGgsayl7amEuYXBwbHkodGhpcyxhcmd1bWVudHMpO2lmKGRhKXtpZihkYSl7dmFyIGw9ZWE7ZGE9ITE7ZWE9bnVsbH1lbHNlIHRocm93IEVycm9yKHUoMTk4KSk7ZmF8fChmYT0hMCxoYT1sKX19dmFyIGxhPW51bGwsbWE9bnVsbCxuYT1udWxsO1xuZnVuY3Rpb24gb2EoYSxiLGMpe3ZhciBkPWEudHlwZXx8XCJ1bmtub3duLWV2ZW50XCI7YS5jdXJyZW50VGFyZ2V0PW5hKGMpO2thKGQsYix2b2lkIDAsYSk7YS5jdXJyZW50VGFyZ2V0PW51bGx9dmFyIHBhPW51bGwscWE9e307XG5mdW5jdGlvbiByYSgpe2lmKHBhKWZvcih2YXIgYSBpbiBxYSl7dmFyIGI9cWFbYV0sYz1wYS5pbmRleE9mKGEpO2lmKCEoLTE8YykpdGhyb3cgRXJyb3IodSg5NixhKSk7aWYoIXNhW2NdKXtpZighYi5leHRyYWN0RXZlbnRzKXRocm93IEVycm9yKHUoOTcsYSkpO3NhW2NdPWI7Yz1iLmV2ZW50VHlwZXM7Zm9yKHZhciBkIGluIGMpe3ZhciBlPXZvaWQgMDt2YXIgZj1jW2RdLGc9YixoPWQ7aWYodGEuaGFzT3duUHJvcGVydHkoaCkpdGhyb3cgRXJyb3IodSg5OSxoKSk7dGFbaF09Zjt2YXIgaz1mLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzO2lmKGspe2ZvcihlIGluIGspay5oYXNPd25Qcm9wZXJ0eShlKSYmdWEoa1tlXSxnLGgpO2U9ITB9ZWxzZSBmLnJlZ2lzdHJhdGlvbk5hbWU/KHVhKGYucmVnaXN0cmF0aW9uTmFtZSxnLGgpLGU9ITApOmU9ITE7aWYoIWUpdGhyb3cgRXJyb3IodSg5OCxkLGEpKTt9fX19XG5mdW5jdGlvbiB1YShhLGIsYyl7aWYodmFbYV0pdGhyb3cgRXJyb3IodSgxMDAsYSkpO3ZhW2FdPWI7d2FbYV09Yi5ldmVudFR5cGVzW2NdLmRlcGVuZGVuY2llc312YXIgc2E9W10sdGE9e30sdmE9e30sd2E9e307ZnVuY3Rpb24geGEoYSl7dmFyIGI9ITEsYztmb3IoYyBpbiBhKWlmKGEuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPWFbY107aWYoIXFhLmhhc093blByb3BlcnR5KGMpfHxxYVtjXSE9PWQpe2lmKHFhW2NdKXRocm93IEVycm9yKHUoMTAyLGMpKTtxYVtjXT1kO2I9ITB9fWImJnJhKCl9dmFyIHlhPSEoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93LmRvY3VtZW50fHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KSx6YT1udWxsLEFhPW51bGwsQmE9bnVsbDtcbmZ1bmN0aW9uIENhKGEpe2lmKGE9bWEoYSkpe2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiB6YSl0aHJvdyBFcnJvcih1KDI4MCkpO3ZhciBiPWEuc3RhdGVOb2RlO2ImJihiPWxhKGIpLHphKGEuc3RhdGVOb2RlLGEudHlwZSxiKSl9fWZ1bmN0aW9uIERhKGEpe0FhP0JhP0JhLnB1c2goYSk6QmE9W2FdOkFhPWF9ZnVuY3Rpb24gRWEoKXtpZihBYSl7dmFyIGE9QWEsYj1CYTtCYT1BYT1udWxsO0NhKGEpO2lmKGIpZm9yKGE9MDthPGIubGVuZ3RoO2ErKylDYShiW2FdKX19ZnVuY3Rpb24gRmEoYSxiKXtyZXR1cm4gYShiKX1mdW5jdGlvbiBHYShhLGIsYyxkLGUpe3JldHVybiBhKGIsYyxkLGUpfWZ1bmN0aW9uIEhhKCl7fXZhciBJYT1GYSxKYT0hMSxLYT0hMTtmdW5jdGlvbiBMYSgpe2lmKG51bGwhPT1BYXx8bnVsbCE9PUJhKUhhKCksRWEoKX1cbmZ1bmN0aW9uIE1hKGEsYixjKXtpZihLYSlyZXR1cm4gYShiLGMpO0thPSEwO3RyeXtyZXR1cm4gSWEoYSxiLGMpfWZpbmFsbHl7S2E9ITEsTGEoKX19dmFyIE5hPS9eWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXVs6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRFxcLS4wLTlcXHUwMEI3XFx1MDMwMC1cXHUwMzZGXFx1MjAzRi1cXHUyMDQwXSokLyxPYT1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LFBhPXt9LFFhPXt9O1xuZnVuY3Rpb24gUmEoYSl7aWYoT2EuY2FsbChRYSxhKSlyZXR1cm4hMDtpZihPYS5jYWxsKFBhLGEpKXJldHVybiExO2lmKE5hLnRlc3QoYSkpcmV0dXJuIFFhW2FdPSEwO1BhW2FdPSEwO3JldHVybiExfWZ1bmN0aW9uIFNhKGEsYixjLGQpe2lmKG51bGwhPT1jJiYwPT09Yy50eXBlKXJldHVybiExO3N3aXRjaCh0eXBlb2YgYil7Y2FzZSBcImZ1bmN0aW9uXCI6Y2FzZSBcInN5bWJvbFwiOnJldHVybiEwO2Nhc2UgXCJib29sZWFuXCI6aWYoZClyZXR1cm4hMTtpZihudWxsIT09YylyZXR1cm4hYy5hY2NlcHRzQm9vbGVhbnM7YT1hLnRvTG93ZXJDYXNlKCkuc2xpY2UoMCw1KTtyZXR1cm5cImRhdGEtXCIhPT1hJiZcImFyaWEtXCIhPT1hO2RlZmF1bHQ6cmV0dXJuITF9fVxuZnVuY3Rpb24gVGEoYSxiLGMsZCl7aWYobnVsbD09PWJ8fFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYnx8U2EoYSxiLGMsZCkpcmV0dXJuITA7aWYoZClyZXR1cm4hMTtpZihudWxsIT09Yylzd2l0Y2goYy50eXBlKXtjYXNlIDM6cmV0dXJuIWI7Y2FzZSA0OnJldHVybiExPT09YjtjYXNlIDU6cmV0dXJuIGlzTmFOKGIpO2Nhc2UgNjpyZXR1cm4gaXNOYU4oYil8fDE+Yn1yZXR1cm4hMX1mdW5jdGlvbiB2KGEsYixjLGQsZSxmKXt0aGlzLmFjY2VwdHNCb29sZWFucz0yPT09Ynx8Mz09PWJ8fDQ9PT1iO3RoaXMuYXR0cmlidXRlTmFtZT1kO3RoaXMuYXR0cmlidXRlTmFtZXNwYWNlPWU7dGhpcy5tdXN0VXNlUHJvcGVydHk9Yzt0aGlzLnByb3BlcnR5TmFtZT1hO3RoaXMudHlwZT1iO3RoaXMuc2FuaXRpemVVUkw9Zn12YXIgQz17fTtcblwiY2hpbGRyZW4gZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwgZGVmYXVsdFZhbHVlIGRlZmF1bHRDaGVja2VkIGlubmVySFRNTCBzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmcgc3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nIHN0eWxlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDAsITEsYSxudWxsLCExKX0pO1tbXCJhY2NlcHRDaGFyc2V0XCIsXCJhY2NlcHQtY2hhcnNldFwiXSxbXCJjbGFzc05hbWVcIixcImNsYXNzXCJdLFtcImh0bWxGb3JcIixcImZvclwiXSxbXCJodHRwRXF1aXZcIixcImh0dHAtZXF1aXZcIl1dLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YVswXTtDW2JdPW5ldyB2KGIsMSwhMSxhWzFdLG51bGwsITEpfSk7W1wiY29udGVudEVkaXRhYmxlXCIsXCJkcmFnZ2FibGVcIixcInNwZWxsQ2hlY2tcIixcInZhbHVlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDIsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEpfSk7XG5bXCJhdXRvUmV2ZXJzZVwiLFwiZXh0ZXJuYWxSZXNvdXJjZXNSZXF1aXJlZFwiLFwiZm9jdXNhYmxlXCIsXCJwcmVzZXJ2ZUFscGhhXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDIsITEsYSxudWxsLCExKX0pO1wiYWxsb3dGdWxsU2NyZWVuIGFzeW5jIGF1dG9Gb2N1cyBhdXRvUGxheSBjb250cm9scyBkZWZhdWx0IGRlZmVyIGRpc2FibGVkIGRpc2FibGVQaWN0dXJlSW5QaWN0dXJlIGZvcm1Ob1ZhbGlkYXRlIGhpZGRlbiBsb29wIG5vTW9kdWxlIG5vVmFsaWRhdGUgb3BlbiBwbGF5c0lubGluZSByZWFkT25seSByZXF1aXJlZCByZXZlcnNlZCBzY29wZWQgc2VhbWxlc3MgaXRlbVNjb3BlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDMsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEpfSk7XG5bXCJjaGVja2VkXCIsXCJtdWx0aXBsZVwiLFwibXV0ZWRcIixcInNlbGVjdGVkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDMsITAsYSxudWxsLCExKX0pO1tcImNhcHR1cmVcIixcImRvd25sb2FkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDQsITEsYSxudWxsLCExKX0pO1tcImNvbHNcIixcInJvd3NcIixcInNpemVcIixcInNwYW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsNiwhMSxhLG51bGwsITEpfSk7W1wicm93U3BhblwiLFwic3RhcnRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsNSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSl9KTt2YXIgVWE9L1tcXC06XShbYS16XSkvZztmdW5jdGlvbiBWYShhKXtyZXR1cm4gYVsxXS50b1VwcGVyQ2FzZSgpfVxuXCJhY2NlbnQtaGVpZ2h0IGFsaWdubWVudC1iYXNlbGluZSBhcmFiaWMtZm9ybSBiYXNlbGluZS1zaGlmdCBjYXAtaGVpZ2h0IGNsaXAtcGF0aCBjbGlwLXJ1bGUgY29sb3ItaW50ZXJwb2xhdGlvbiBjb2xvci1pbnRlcnBvbGF0aW9uLWZpbHRlcnMgY29sb3ItcHJvZmlsZSBjb2xvci1yZW5kZXJpbmcgZG9taW5hbnQtYmFzZWxpbmUgZW5hYmxlLWJhY2tncm91bmQgZmlsbC1vcGFjaXR5IGZpbGwtcnVsZSBmbG9vZC1jb2xvciBmbG9vZC1vcGFjaXR5IGZvbnQtZmFtaWx5IGZvbnQtc2l6ZSBmb250LXNpemUtYWRqdXN0IGZvbnQtc3RyZXRjaCBmb250LXN0eWxlIGZvbnQtdmFyaWFudCBmb250LXdlaWdodCBnbHlwaC1uYW1lIGdseXBoLW9yaWVudGF0aW9uLWhvcml6b250YWwgZ2x5cGgtb3JpZW50YXRpb24tdmVydGljYWwgaG9yaXotYWR2LXggaG9yaXotb3JpZ2luLXggaW1hZ2UtcmVuZGVyaW5nIGxldHRlci1zcGFjaW5nIGxpZ2h0aW5nLWNvbG9yIG1hcmtlci1lbmQgbWFya2VyLW1pZCBtYXJrZXItc3RhcnQgb3ZlcmxpbmUtcG9zaXRpb24gb3ZlcmxpbmUtdGhpY2tuZXNzIHBhaW50LW9yZGVyIHBhbm9zZS0xIHBvaW50ZXItZXZlbnRzIHJlbmRlcmluZy1pbnRlbnQgc2hhcGUtcmVuZGVyaW5nIHN0b3AtY29sb3Igc3RvcC1vcGFjaXR5IHN0cmlrZXRocm91Z2gtcG9zaXRpb24gc3RyaWtldGhyb3VnaC10aGlja25lc3Mgc3Ryb2tlLWRhc2hhcnJheSBzdHJva2UtZGFzaG9mZnNldCBzdHJva2UtbGluZWNhcCBzdHJva2UtbGluZWpvaW4gc3Ryb2tlLW1pdGVybGltaXQgc3Ryb2tlLW9wYWNpdHkgc3Ryb2tlLXdpZHRoIHRleHQtYW5jaG9yIHRleHQtZGVjb3JhdGlvbiB0ZXh0LXJlbmRlcmluZyB1bmRlcmxpbmUtcG9zaXRpb24gdW5kZXJsaW5lLXRoaWNrbmVzcyB1bmljb2RlLWJpZGkgdW5pY29kZS1yYW5nZSB1bml0cy1wZXItZW0gdi1hbHBoYWJldGljIHYtaGFuZ2luZyB2LWlkZW9ncmFwaGljIHYtbWF0aGVtYXRpY2FsIHZlY3Rvci1lZmZlY3QgdmVydC1hZHYteSB2ZXJ0LW9yaWdpbi14IHZlcnQtb3JpZ2luLXkgd29yZC1zcGFjaW5nIHdyaXRpbmctbW9kZSB4bWxuczp4bGluayB4LWhlaWdodFwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShVYSxcblZhKTtDW2JdPW5ldyB2KGIsMSwhMSxhLG51bGwsITEpfSk7XCJ4bGluazphY3R1YXRlIHhsaW5rOmFyY3JvbGUgeGxpbms6cm9sZSB4bGluazpzaG93IHhsaW5rOnRpdGxlIHhsaW5rOnR5cGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UoVWEsVmEpO0NbYl09bmV3IHYoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIsITEpfSk7W1wieG1sOmJhc2VcIixcInhtbDpsYW5nXCIsXCJ4bWw6c3BhY2VcIl0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UoVWEsVmEpO0NbYl09bmV3IHYoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy9YTUwvMTk5OC9uYW1lc3BhY2VcIiwhMSl9KTtbXCJ0YWJJbmRleFwiLFwiY3Jvc3NPcmlnaW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsMSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSl9KTtcbkMueGxpbmtIcmVmPW5ldyB2KFwieGxpbmtIcmVmXCIsMSwhMSxcInhsaW5rOmhyZWZcIixcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIiwhMCk7W1wic3JjXCIsXCJocmVmXCIsXCJhY3Rpb25cIixcImZvcm1BY3Rpb25cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsMSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMCl9KTt2YXIgV2E9YWEuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ7V2EuaGFzT3duUHJvcGVydHkoXCJSZWFjdEN1cnJlbnREaXNwYXRjaGVyXCIpfHwoV2EuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcj17Y3VycmVudDpudWxsfSk7V2EuaGFzT3duUHJvcGVydHkoXCJSZWFjdEN1cnJlbnRCYXRjaENvbmZpZ1wiKXx8KFdhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnPXtzdXNwZW5zZTpudWxsfSk7XG5mdW5jdGlvbiBYYShhLGIsYyxkKXt2YXIgZT1DLmhhc093blByb3BlcnR5KGIpP0NbYl06bnVsbDt2YXIgZj1udWxsIT09ZT8wPT09ZS50eXBlOmQ/ITE6ISgyPGIubGVuZ3RoKXx8XCJvXCIhPT1iWzBdJiZcIk9cIiE9PWJbMF18fFwiblwiIT09YlsxXSYmXCJOXCIhPT1iWzFdPyExOiEwO2Z8fChUYShiLGMsZSxkKSYmKGM9bnVsbCksZHx8bnVsbD09PWU/UmEoYikmJihudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTphLnNldEF0dHJpYnV0ZShiLFwiXCIrYykpOmUubXVzdFVzZVByb3BlcnR5P2FbZS5wcm9wZXJ0eU5hbWVdPW51bGw9PT1jPzM9PT1lLnR5cGU/ITE6XCJcIjpjOihiPWUuYXR0cmlidXRlTmFtZSxkPWUuYXR0cmlidXRlTmFtZXNwYWNlLG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOihlPWUudHlwZSxjPTM9PT1lfHw0PT09ZSYmITA9PT1jP1wiXCI6XCJcIitjLGQ/YS5zZXRBdHRyaWJ1dGVOUyhkLGIsYyk6YS5zZXRBdHRyaWJ1dGUoYixjKSkpKX1cbnZhciBZYT0vXiguKilbXFxcXFxcL10vLEU9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixaYT1FP1N5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLCRhPUU/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixhYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyxiYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTo2MDEwOCxjYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCxkYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSxlYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpOjYwMTEwLGZiPUU/U3ltYm9sLmZvcihcInJlYWN0LmNvbmN1cnJlbnRfbW9kZVwiKTo2MDExMSxnYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMixoYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKTo2MDExMyxpYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZV9saXN0XCIpOlxuNjAxMjAsamI9RT9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTo2MDExNSxrYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOjYwMTE2LGxiPUU/U3ltYm9sLmZvcihcInJlYWN0LmJsb2NrXCIpOjYwMTIxLG1iPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiBuYihhKXtpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhKXJldHVybiBudWxsO2E9bWImJmFbbWJdfHxhW1wiQEBpdGVyYXRvclwiXTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hOm51bGx9ZnVuY3Rpb24gb2IoYSl7aWYoLTE9PT1hLl9zdGF0dXMpe2EuX3N0YXR1cz0wO3ZhciBiPWEuX2N0b3I7Yj1iKCk7YS5fcmVzdWx0PWI7Yi50aGVuKGZ1bmN0aW9uKGIpezA9PT1hLl9zdGF0dXMmJihiPWIuZGVmYXVsdCxhLl9zdGF0dXM9MSxhLl9yZXN1bHQ9Yil9LGZ1bmN0aW9uKGIpezA9PT1hLl9zdGF0dXMmJihhLl9zdGF0dXM9MixhLl9yZXN1bHQ9Yil9KX19XG5mdW5jdGlvbiBwYihhKXtpZihudWxsPT1hKXJldHVybiBudWxsO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBhLmRpc3BsYXlOYW1lfHxhLm5hbWV8fG51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKXJldHVybiBhO3N3aXRjaChhKXtjYXNlIGFiOnJldHVyblwiRnJhZ21lbnRcIjtjYXNlICRhOnJldHVyblwiUG9ydGFsXCI7Y2FzZSBjYjpyZXR1cm5cIlByb2ZpbGVyXCI7Y2FzZSBiYjpyZXR1cm5cIlN0cmljdE1vZGVcIjtjYXNlIGhiOnJldHVyblwiU3VzcGVuc2VcIjtjYXNlIGliOnJldHVyblwiU3VzcGVuc2VMaXN0XCJ9aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIGViOnJldHVyblwiQ29udGV4dC5Db25zdW1lclwiO2Nhc2UgZGI6cmV0dXJuXCJDb250ZXh0LlByb3ZpZGVyXCI7Y2FzZSBnYjp2YXIgYj1hLnJlbmRlcjtiPWIuZGlzcGxheU5hbWV8fGIubmFtZXx8XCJcIjtyZXR1cm4gYS5kaXNwbGF5TmFtZXx8KFwiXCIhPT1iP1wiRm9yd2FyZFJlZihcIitiK1wiKVwiOlxuXCJGb3J3YXJkUmVmXCIpO2Nhc2UgamI6cmV0dXJuIHBiKGEudHlwZSk7Y2FzZSBsYjpyZXR1cm4gcGIoYS5yZW5kZXIpO2Nhc2Uga2I6aWYoYT0xPT09YS5fc3RhdHVzP2EuX3Jlc3VsdDpudWxsKXJldHVybiBwYihhKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBxYihhKXt2YXIgYj1cIlwiO2Rve2E6c3dpdGNoKGEudGFnKXtjYXNlIDM6Y2FzZSA0OmNhc2UgNjpjYXNlIDc6Y2FzZSAxMDpjYXNlIDk6dmFyIGM9XCJcIjticmVhayBhO2RlZmF1bHQ6dmFyIGQ9YS5fZGVidWdPd25lcixlPWEuX2RlYnVnU291cmNlLGY9cGIoYS50eXBlKTtjPW51bGw7ZCYmKGM9cGIoZC50eXBlKSk7ZD1mO2Y9XCJcIjtlP2Y9XCIgKGF0IFwiK2UuZmlsZU5hbWUucmVwbGFjZShZYSxcIlwiKStcIjpcIitlLmxpbmVOdW1iZXIrXCIpXCI6YyYmKGY9XCIgKGNyZWF0ZWQgYnkgXCIrYytcIilcIik7Yz1cIlxcbiAgICBpbiBcIisoZHx8XCJVbmtub3duXCIpK2Z9Yis9YzthPWEucmV0dXJufXdoaWxlKGEpO3JldHVybiBifVxuZnVuY3Rpb24gcmIoYSl7c3dpdGNoKHR5cGVvZiBhKXtjYXNlIFwiYm9vbGVhblwiOmNhc2UgXCJudW1iZXJcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJ1bmRlZmluZWRcIjpyZXR1cm4gYTtkZWZhdWx0OnJldHVyblwiXCJ9fWZ1bmN0aW9uIHNiKGEpe3ZhciBiPWEudHlwZTtyZXR1cm4oYT1hLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09YS50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09Ynx8XCJyYWRpb1wiPT09Yil9XG5mdW5jdGlvbiB0YihhKXt2YXIgYj1zYihhKT9cImNoZWNrZWRcIjpcInZhbHVlXCIsYz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGEuY29uc3RydWN0b3IucHJvdG90eXBlLGIpLGQ9XCJcIithW2JdO2lmKCFhLmhhc093blByb3BlcnR5KGIpJiZcInVuZGVmaW5lZFwiIT09dHlwZW9mIGMmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLmdldCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuc2V0KXt2YXIgZT1jLmdldCxmPWMuc2V0O09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2NvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gZS5jYWxsKHRoaXMpfSxzZXQ6ZnVuY3Rpb24oYSl7ZD1cIlwiK2E7Zi5jYWxsKHRoaXMsYSl9fSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7ZW51bWVyYWJsZTpjLmVudW1lcmFibGV9KTtyZXR1cm57Z2V0VmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gZH0sc2V0VmFsdWU6ZnVuY3Rpb24oYSl7ZD1cIlwiK2F9LHN0b3BUcmFja2luZzpmdW5jdGlvbigpe2EuX3ZhbHVlVHJhY2tlcj1cbm51bGw7ZGVsZXRlIGFbYl19fX19ZnVuY3Rpb24geGIoYSl7YS5fdmFsdWVUcmFja2VyfHwoYS5fdmFsdWVUcmFja2VyPXRiKGEpKX1mdW5jdGlvbiB5YihhKXtpZighYSlyZXR1cm4hMTt2YXIgYj1hLl92YWx1ZVRyYWNrZXI7aWYoIWIpcmV0dXJuITA7dmFyIGM9Yi5nZXRWYWx1ZSgpO3ZhciBkPVwiXCI7YSYmKGQ9c2IoYSk/YS5jaGVja2VkP1widHJ1ZVwiOlwiZmFsc2VcIjphLnZhbHVlKTthPWQ7cmV0dXJuIGEhPT1jPyhiLnNldFZhbHVlKGEpLCEwKTohMX1mdW5jdGlvbiB6YihhLGIpe3ZhciBjPWIuY2hlY2tlZDtyZXR1cm4gbih7fSxiLHtkZWZhdWx0Q2hlY2tlZDp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCx2YWx1ZTp2b2lkIDAsY2hlY2tlZDpudWxsIT1jP2M6YS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkfSl9XG5mdW5jdGlvbiBBYihhLGIpe3ZhciBjPW51bGw9PWIuZGVmYXVsdFZhbHVlP1wiXCI6Yi5kZWZhdWx0VmFsdWUsZD1udWxsIT1iLmNoZWNrZWQ/Yi5jaGVja2VkOmIuZGVmYXVsdENoZWNrZWQ7Yz1yYihudWxsIT1iLnZhbHVlP2IudmFsdWU6Yyk7YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsQ2hlY2tlZDpkLGluaXRpYWxWYWx1ZTpjLGNvbnRyb2xsZWQ6XCJjaGVja2JveFwiPT09Yi50eXBlfHxcInJhZGlvXCI9PT1iLnR5cGU/bnVsbCE9Yi5jaGVja2VkOm51bGwhPWIudmFsdWV9fWZ1bmN0aW9uIEJiKGEsYil7Yj1iLmNoZWNrZWQ7bnVsbCE9YiYmWGEoYSxcImNoZWNrZWRcIixiLCExKX1cbmZ1bmN0aW9uIENiKGEsYil7QmIoYSxiKTt2YXIgYz1yYihiLnZhbHVlKSxkPWIudHlwZTtpZihudWxsIT1jKWlmKFwibnVtYmVyXCI9PT1kKXtpZigwPT09YyYmXCJcIj09PWEudmFsdWV8fGEudmFsdWUhPWMpYS52YWx1ZT1cIlwiK2N9ZWxzZSBhLnZhbHVlIT09XCJcIitjJiYoYS52YWx1ZT1cIlwiK2MpO2Vsc2UgaWYoXCJzdWJtaXRcIj09PWR8fFwicmVzZXRcIj09PWQpe2EucmVtb3ZlQXR0cmlidXRlKFwidmFsdWVcIik7cmV0dXJufWIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKT9EYihhLGIudHlwZSxjKTpiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpJiZEYihhLGIudHlwZSxyYihiLmRlZmF1bHRWYWx1ZSkpO251bGw9PWIuY2hlY2tlZCYmbnVsbCE9Yi5kZWZhdWx0Q2hlY2tlZCYmKGEuZGVmYXVsdENoZWNrZWQ9ISFiLmRlZmF1bHRDaGVja2VkKX1cbmZ1bmN0aW9uIEViKGEsYixjKXtpZihiLmhhc093blByb3BlcnR5KFwidmFsdWVcIil8fGIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikpe3ZhciBkPWIudHlwZTtpZighKFwic3VibWl0XCIhPT1kJiZcInJlc2V0XCIhPT1kfHx2b2lkIDAhPT1iLnZhbHVlJiZudWxsIT09Yi52YWx1ZSkpcmV0dXJuO2I9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlO2N8fGI9PT1hLnZhbHVlfHwoYS52YWx1ZT1iKTthLmRlZmF1bHRWYWx1ZT1ifWM9YS5uYW1lO1wiXCIhPT1jJiYoYS5uYW1lPVwiXCIpO2EuZGVmYXVsdENoZWNrZWQ9ISFhLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWQ7XCJcIiE9PWMmJihhLm5hbWU9Yyl9XG5mdW5jdGlvbiBEYihhLGIsYyl7aWYoXCJudW1iZXJcIiE9PWJ8fGEub3duZXJEb2N1bWVudC5hY3RpdmVFbGVtZW50IT09YSludWxsPT1jP2EuZGVmYXVsdFZhbHVlPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTphLmRlZmF1bHRWYWx1ZSE9PVwiXCIrYyYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrYyl9ZnVuY3Rpb24gRmIoYSl7dmFyIGI9XCJcIjthYS5DaGlsZHJlbi5mb3JFYWNoKGEsZnVuY3Rpb24oYSl7bnVsbCE9YSYmKGIrPWEpfSk7cmV0dXJuIGJ9ZnVuY3Rpb24gR2IoYSxiKXthPW4oe2NoaWxkcmVuOnZvaWQgMH0sYik7aWYoYj1GYihiLmNoaWxkcmVuKSlhLmNoaWxkcmVuPWI7cmV0dXJuIGF9XG5mdW5jdGlvbiBIYihhLGIsYyxkKXthPWEub3B0aW9ucztpZihiKXtiPXt9O2Zvcih2YXIgZT0wO2U8Yy5sZW5ndGg7ZSsrKWJbXCIkXCIrY1tlXV09ITA7Zm9yKGM9MDtjPGEubGVuZ3RoO2MrKyllPWIuaGFzT3duUHJvcGVydHkoXCIkXCIrYVtjXS52YWx1ZSksYVtjXS5zZWxlY3RlZCE9PWUmJihhW2NdLnNlbGVjdGVkPWUpLGUmJmQmJihhW2NdLmRlZmF1bHRTZWxlY3RlZD0hMCl9ZWxzZXtjPVwiXCIrcmIoYyk7Yj1udWxsO2ZvcihlPTA7ZTxhLmxlbmd0aDtlKyspe2lmKGFbZV0udmFsdWU9PT1jKXthW2VdLnNlbGVjdGVkPSEwO2QmJihhW2VdLmRlZmF1bHRTZWxlY3RlZD0hMCk7cmV0dXJufW51bGwhPT1ifHxhW2VdLmRpc2FibGVkfHwoYj1hW2VdKX1udWxsIT09YiYmKGIuc2VsZWN0ZWQ9ITApfX1cbmZ1bmN0aW9uIEliKGEsYil7aWYobnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCl0aHJvdyBFcnJvcih1KDkxKSk7cmV0dXJuIG4oe30sYix7dmFsdWU6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsY2hpbGRyZW46XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlfSl9ZnVuY3Rpb24gSmIoYSxiKXt2YXIgYz1iLnZhbHVlO2lmKG51bGw9PWMpe2M9Yi5jaGlsZHJlbjtiPWIuZGVmYXVsdFZhbHVlO2lmKG51bGwhPWMpe2lmKG51bGwhPWIpdGhyb3cgRXJyb3IodSg5MikpO2lmKEFycmF5LmlzQXJyYXkoYykpe2lmKCEoMT49Yy5sZW5ndGgpKXRocm93IEVycm9yKHUoOTMpKTtjPWNbMF19Yj1jfW51bGw9PWImJihiPVwiXCIpO2M9Yn1hLl93cmFwcGVyU3RhdGU9e2luaXRpYWxWYWx1ZTpyYihjKX19XG5mdW5jdGlvbiBLYihhLGIpe3ZhciBjPXJiKGIudmFsdWUpLGQ9cmIoYi5kZWZhdWx0VmFsdWUpO251bGwhPWMmJihjPVwiXCIrYyxjIT09YS52YWx1ZSYmKGEudmFsdWU9YyksbnVsbD09Yi5kZWZhdWx0VmFsdWUmJmEuZGVmYXVsdFZhbHVlIT09YyYmKGEuZGVmYXVsdFZhbHVlPWMpKTtudWxsIT1kJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitkKX1mdW5jdGlvbiBMYihhKXt2YXIgYj1hLnRleHRDb250ZW50O2I9PT1hLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlJiZcIlwiIT09YiYmbnVsbCE9PWImJihhLnZhbHVlPWIpfXZhciBNYj17aHRtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIixtYXRobWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCIsc3ZnOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIn07XG5mdW5jdGlvbiBOYihhKXtzd2l0Y2goYSl7Y2FzZSBcInN2Z1wiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIjtjYXNlIFwibWF0aFwiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiO2RlZmF1bHQ6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCJ9fWZ1bmN0aW9uIE9iKGEsYil7cmV0dXJuIG51bGw9PWF8fFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiPT09YT9OYihiKTpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI9PT1hJiZcImZvcmVpZ25PYmplY3RcIj09PWI/XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI6YX1cbnZhciBQYixRYj1mdW5jdGlvbihhKXtyZXR1cm5cInVuZGVmaW5lZFwiIT09dHlwZW9mIE1TQXBwJiZNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbj9mdW5jdGlvbihiLGMsZCxlKXtNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbihmdW5jdGlvbigpe3JldHVybiBhKGIsYyxkLGUpfSl9OmF9KGZ1bmN0aW9uKGEsYil7aWYoYS5uYW1lc3BhY2VVUkkhPT1NYi5zdmd8fFwiaW5uZXJIVE1MXCJpbiBhKWEuaW5uZXJIVE1MPWI7ZWxzZXtQYj1QYnx8ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtQYi5pbm5lckhUTUw9XCI8c3ZnPlwiK2IudmFsdWVPZigpLnRvU3RyaW5nKCkrXCI8L3N2Zz5cIjtmb3IoYj1QYi5maXJzdENoaWxkO2EuZmlyc3RDaGlsZDspYS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpO2Zvcig7Yi5maXJzdENoaWxkOylhLmFwcGVuZENoaWxkKGIuZmlyc3RDaGlsZCl9fSk7XG5mdW5jdGlvbiBSYihhLGIpe2lmKGIpe3ZhciBjPWEuZmlyc3RDaGlsZDtpZihjJiZjPT09YS5sYXN0Q2hpbGQmJjM9PT1jLm5vZGVUeXBlKXtjLm5vZGVWYWx1ZT1iO3JldHVybn19YS50ZXh0Q29udGVudD1ifWZ1bmN0aW9uIFNiKGEsYil7dmFyIGM9e307Y1thLnRvTG93ZXJDYXNlKCldPWIudG9Mb3dlckNhc2UoKTtjW1wiV2Via2l0XCIrYV09XCJ3ZWJraXRcIitiO2NbXCJNb3pcIithXT1cIm1velwiK2I7cmV0dXJuIGN9dmFyIFRiPXthbmltYXRpb25lbmQ6U2IoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkVuZFwiKSxhbmltYXRpb25pdGVyYXRpb246U2IoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkl0ZXJhdGlvblwiKSxhbmltYXRpb25zdGFydDpTYihcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uU3RhcnRcIiksdHJhbnNpdGlvbmVuZDpTYihcIlRyYW5zaXRpb25cIixcIlRyYW5zaXRpb25FbmRcIil9LFViPXt9LFZiPXt9O1xueWEmJihWYj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLnN0eWxlLFwiQW5pbWF0aW9uRXZlbnRcImluIHdpbmRvd3x8KGRlbGV0ZSBUYi5hbmltYXRpb25lbmQuYW5pbWF0aW9uLGRlbGV0ZSBUYi5hbmltYXRpb25pdGVyYXRpb24uYW5pbWF0aW9uLGRlbGV0ZSBUYi5hbmltYXRpb25zdGFydC5hbmltYXRpb24pLFwiVHJhbnNpdGlvbkV2ZW50XCJpbiB3aW5kb3d8fGRlbGV0ZSBUYi50cmFuc2l0aW9uZW5kLnRyYW5zaXRpb24pO2Z1bmN0aW9uIFdiKGEpe2lmKFViW2FdKXJldHVybiBVYlthXTtpZighVGJbYV0pcmV0dXJuIGE7dmFyIGI9VGJbYV0sYztmb3IoYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykmJmMgaW4gVmIpcmV0dXJuIFViW2FdPWJbY107cmV0dXJuIGF9XG52YXIgWGI9V2IoXCJhbmltYXRpb25lbmRcIiksWWI9V2IoXCJhbmltYXRpb25pdGVyYXRpb25cIiksWmI9V2IoXCJhbmltYXRpb25zdGFydFwiKSwkYj1XYihcInRyYW5zaXRpb25lbmRcIiksYWM9XCJhYm9ydCBjYW5wbGF5IGNhbnBsYXl0aHJvdWdoIGR1cmF0aW9uY2hhbmdlIGVtcHRpZWQgZW5jcnlwdGVkIGVuZGVkIGVycm9yIGxvYWRlZGRhdGEgbG9hZGVkbWV0YWRhdGEgbG9hZHN0YXJ0IHBhdXNlIHBsYXkgcGxheWluZyBwcm9ncmVzcyByYXRlY2hhbmdlIHNlZWtlZCBzZWVraW5nIHN0YWxsZWQgc3VzcGVuZCB0aW1ldXBkYXRlIHZvbHVtZWNoYW5nZSB3YWl0aW5nXCIuc3BsaXQoXCIgXCIpLGJjPW5ldyAoXCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtNYXA/V2Vha01hcDpNYXApO2Z1bmN0aW9uIGNjKGEpe3ZhciBiPWJjLmdldChhKTt2b2lkIDA9PT1iJiYoYj1uZXcgTWFwLGJjLnNldChhLGIpKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIGRjKGEpe3ZhciBiPWEsYz1hO2lmKGEuYWx0ZXJuYXRlKWZvcig7Yi5yZXR1cm47KWI9Yi5yZXR1cm47ZWxzZXthPWI7ZG8gYj1hLDAhPT0oYi5lZmZlY3RUYWcmMTAyNikmJihjPWIucmV0dXJuKSxhPWIucmV0dXJuO3doaWxlKGEpfXJldHVybiAzPT09Yi50YWc/YzpudWxsfWZ1bmN0aW9uIGVjKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPWEubWVtb2l6ZWRTdGF0ZTtudWxsPT09YiYmKGE9YS5hbHRlcm5hdGUsbnVsbCE9PWEmJihiPWEubWVtb2l6ZWRTdGF0ZSkpO2lmKG51bGwhPT1iKXJldHVybiBiLmRlaHlkcmF0ZWR9cmV0dXJuIG51bGx9ZnVuY3Rpb24gZmMoYSl7aWYoZGMoYSkhPT1hKXRocm93IEVycm9yKHUoMTg4KSk7fVxuZnVuY3Rpb24gZ2MoYSl7dmFyIGI9YS5hbHRlcm5hdGU7aWYoIWIpe2I9ZGMoYSk7aWYobnVsbD09PWIpdGhyb3cgRXJyb3IodSgxODgpKTtyZXR1cm4gYiE9PWE/bnVsbDphfWZvcih2YXIgYz1hLGQ9Yjs7KXt2YXIgZT1jLnJldHVybjtpZihudWxsPT09ZSlicmVhazt2YXIgZj1lLmFsdGVybmF0ZTtpZihudWxsPT09Zil7ZD1lLnJldHVybjtpZihudWxsIT09ZCl7Yz1kO2NvbnRpbnVlfWJyZWFrfWlmKGUuY2hpbGQ9PT1mLmNoaWxkKXtmb3IoZj1lLmNoaWxkO2Y7KXtpZihmPT09YylyZXR1cm4gZmMoZSksYTtpZihmPT09ZClyZXR1cm4gZmMoZSksYjtmPWYuc2libGluZ310aHJvdyBFcnJvcih1KDE4OCkpO31pZihjLnJldHVybiE9PWQucmV0dXJuKWM9ZSxkPWY7ZWxzZXtmb3IodmFyIGc9ITEsaD1lLmNoaWxkO2g7KXtpZihoPT09Yyl7Zz0hMDtjPWU7ZD1mO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZTtjPWY7YnJlYWt9aD1oLnNpYmxpbmd9aWYoIWcpe2ZvcihoPWYuY2hpbGQ7aDspe2lmKGg9PT1cbmMpe2c9ITA7Yz1mO2Q9ZTticmVha31pZihoPT09ZCl7Zz0hMDtkPWY7Yz1lO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXRocm93IEVycm9yKHUoMTg5KSk7fX1pZihjLmFsdGVybmF0ZSE9PWQpdGhyb3cgRXJyb3IodSgxOTApKTt9aWYoMyE9PWMudGFnKXRocm93IEVycm9yKHUoMTg4KSk7cmV0dXJuIGMuc3RhdGVOb2RlLmN1cnJlbnQ9PT1jP2E6Yn1mdW5jdGlvbiBoYyhhKXthPWdjKGEpO2lmKCFhKXJldHVybiBudWxsO2Zvcih2YXIgYj1hOzspe2lmKDU9PT1iLnRhZ3x8Nj09PWIudGFnKXJldHVybiBiO2lmKGIuY2hpbGQpYi5jaGlsZC5yZXR1cm49YixiPWIuY2hpbGQ7ZWxzZXtpZihiPT09YSlicmVhaztmb3IoOyFiLnNpYmxpbmc7KXtpZighYi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9fXJldHVybiBudWxsfVxuZnVuY3Rpb24gaWMoYSxiKXtpZihudWxsPT1iKXRocm93IEVycm9yKHUoMzApKTtpZihudWxsPT1hKXJldHVybiBiO2lmKEFycmF5LmlzQXJyYXkoYSkpe2lmKEFycmF5LmlzQXJyYXkoYikpcmV0dXJuIGEucHVzaC5hcHBseShhLGIpLGE7YS5wdXNoKGIpO3JldHVybiBhfXJldHVybiBBcnJheS5pc0FycmF5KGIpP1thXS5jb25jYXQoYik6W2EsYl19ZnVuY3Rpb24gamMoYSxiLGMpe0FycmF5LmlzQXJyYXkoYSk/YS5mb3JFYWNoKGIsYyk6YSYmYi5jYWxsKGMsYSl9dmFyIGtjPW51bGw7XG5mdW5jdGlvbiBsYyhhKXtpZihhKXt2YXIgYj1hLl9kaXNwYXRjaExpc3RlbmVycyxjPWEuX2Rpc3BhdGNoSW5zdGFuY2VzO2lmKEFycmF5LmlzQXJyYXkoYikpZm9yKHZhciBkPTA7ZDxiLmxlbmd0aCYmIWEuaXNQcm9wYWdhdGlvblN0b3BwZWQoKTtkKyspb2EoYSxiW2RdLGNbZF0pO2Vsc2UgYiYmb2EoYSxiLGMpO2EuX2Rpc3BhdGNoTGlzdGVuZXJzPW51bGw7YS5fZGlzcGF0Y2hJbnN0YW5jZXM9bnVsbDthLmlzUGVyc2lzdGVudCgpfHxhLmNvbnN0cnVjdG9yLnJlbGVhc2UoYSl9fWZ1bmN0aW9uIG1jKGEpe251bGwhPT1hJiYoa2M9aWMoa2MsYSkpO2E9a2M7a2M9bnVsbDtpZihhKXtqYyhhLGxjKTtpZihrYyl0aHJvdyBFcnJvcih1KDk1KSk7aWYoZmEpdGhyb3cgYT1oYSxmYT0hMSxoYT1udWxsLGE7fX1cbmZ1bmN0aW9uIG5jKGEpe2E9YS50YXJnZXR8fGEuc3JjRWxlbWVudHx8d2luZG93O2EuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQmJihhPWEuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQpO3JldHVybiAzPT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YX1mdW5jdGlvbiBvYyhhKXtpZigheWEpcmV0dXJuITE7YT1cIm9uXCIrYTt2YXIgYj1hIGluIGRvY3VtZW50O2J8fChiPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksYi5zZXRBdHRyaWJ1dGUoYSxcInJldHVybjtcIiksYj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgYlthXSk7cmV0dXJuIGJ9dmFyIHBjPVtdO2Z1bmN0aW9uIHFjKGEpe2EudG9wTGV2ZWxUeXBlPW51bGw7YS5uYXRpdmVFdmVudD1udWxsO2EudGFyZ2V0SW5zdD1udWxsO2EuYW5jZXN0b3JzLmxlbmd0aD0wOzEwPnBjLmxlbmd0aCYmcGMucHVzaChhKX1cbmZ1bmN0aW9uIHJjKGEsYixjLGQpe2lmKHBjLmxlbmd0aCl7dmFyIGU9cGMucG9wKCk7ZS50b3BMZXZlbFR5cGU9YTtlLmV2ZW50U3lzdGVtRmxhZ3M9ZDtlLm5hdGl2ZUV2ZW50PWI7ZS50YXJnZXRJbnN0PWM7cmV0dXJuIGV9cmV0dXJue3RvcExldmVsVHlwZTphLGV2ZW50U3lzdGVtRmxhZ3M6ZCxuYXRpdmVFdmVudDpiLHRhcmdldEluc3Q6YyxhbmNlc3RvcnM6W119fVxuZnVuY3Rpb24gc2MoYSl7dmFyIGI9YS50YXJnZXRJbnN0LGM9Yjtkb3tpZighYyl7YS5hbmNlc3RvcnMucHVzaChjKTticmVha312YXIgZD1jO2lmKDM9PT1kLnRhZylkPWQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZWxzZXtmb3IoO2QucmV0dXJuOylkPWQucmV0dXJuO2Q9MyE9PWQudGFnP251bGw6ZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mb31pZighZClicmVhaztiPWMudGFnOzUhPT1iJiY2IT09Ynx8YS5hbmNlc3RvcnMucHVzaChjKTtjPXRjKGQpfXdoaWxlKGMpO2ZvcihjPTA7YzxhLmFuY2VzdG9ycy5sZW5ndGg7YysrKXtiPWEuYW5jZXN0b3JzW2NdO3ZhciBlPW5jKGEubmF0aXZlRXZlbnQpO2Q9YS50b3BMZXZlbFR5cGU7dmFyIGY9YS5uYXRpdmVFdmVudCxnPWEuZXZlbnRTeXN0ZW1GbGFnczswPT09YyYmKGd8PTY0KTtmb3IodmFyIGg9bnVsbCxrPTA7azxzYS5sZW5ndGg7aysrKXt2YXIgbD1zYVtrXTtsJiYobD1sLmV4dHJhY3RFdmVudHMoZCxiLGYsZSxnKSkmJihoPVxuaWMoaCxsKSl9bWMoaCl9fWZ1bmN0aW9uIHVjKGEsYixjKXtpZighYy5oYXMoYSkpe3N3aXRjaChhKXtjYXNlIFwic2Nyb2xsXCI6dmMoYixcInNjcm9sbFwiLCEwKTticmVhaztjYXNlIFwiZm9jdXNcIjpjYXNlIFwiYmx1clwiOnZjKGIsXCJmb2N1c1wiLCEwKTt2YyhiLFwiYmx1clwiLCEwKTtjLnNldChcImJsdXJcIixudWxsKTtjLnNldChcImZvY3VzXCIsbnVsbCk7YnJlYWs7Y2FzZSBcImNhbmNlbFwiOmNhc2UgXCJjbG9zZVwiOm9jKGEpJiZ2YyhiLGEsITApO2JyZWFrO2Nhc2UgXCJpbnZhbGlkXCI6Y2FzZSBcInN1Ym1pdFwiOmNhc2UgXCJyZXNldFwiOmJyZWFrO2RlZmF1bHQ6LTE9PT1hYy5pbmRleE9mKGEpJiZGKGEsYil9Yy5zZXQoYSxudWxsKX19XG52YXIgd2MseGMseWMsemM9ITEsQWM9W10sQmM9bnVsbCxDYz1udWxsLERjPW51bGwsRWM9bmV3IE1hcCxGYz1uZXcgTWFwLEdjPVtdLEhjPVwibW91c2Vkb3duIG1vdXNldXAgdG91Y2hjYW5jZWwgdG91Y2hlbmQgdG91Y2hzdGFydCBhdXhjbGljayBkYmxjbGljayBwb2ludGVyY2FuY2VsIHBvaW50ZXJkb3duIHBvaW50ZXJ1cCBkcmFnZW5kIGRyYWdzdGFydCBkcm9wIGNvbXBvc2l0aW9uZW5kIGNvbXBvc2l0aW9uc3RhcnQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBpbnB1dCB0ZXh0SW5wdXQgY2xvc2UgY2FuY2VsIGNvcHkgY3V0IHBhc3RlIGNsaWNrIGNoYW5nZSBjb250ZXh0bWVudSByZXNldCBzdWJtaXRcIi5zcGxpdChcIiBcIiksSWM9XCJmb2N1cyBibHVyIGRyYWdlbnRlciBkcmFnbGVhdmUgbW91c2VvdmVyIG1vdXNlb3V0IHBvaW50ZXJvdmVyIHBvaW50ZXJvdXQgZ290cG9pbnRlcmNhcHR1cmUgbG9zdHBvaW50ZXJjYXB0dXJlXCIuc3BsaXQoXCIgXCIpO1xuZnVuY3Rpb24gSmMoYSxiKXt2YXIgYz1jYyhiKTtIYy5mb3JFYWNoKGZ1bmN0aW9uKGEpe3VjKGEsYixjKX0pO0ljLmZvckVhY2goZnVuY3Rpb24oYSl7dWMoYSxiLGMpfSl9ZnVuY3Rpb24gS2MoYSxiLGMsZCxlKXtyZXR1cm57YmxvY2tlZE9uOmEsdG9wTGV2ZWxUeXBlOmIsZXZlbnRTeXN0ZW1GbGFnczpjfDMyLG5hdGl2ZUV2ZW50OmUsY29udGFpbmVyOmR9fVxuZnVuY3Rpb24gTGMoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImZvY3VzXCI6Y2FzZSBcImJsdXJcIjpCYz1udWxsO2JyZWFrO2Nhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6Q2M9bnVsbDticmVhaztjYXNlIFwibW91c2VvdmVyXCI6Y2FzZSBcIm1vdXNlb3V0XCI6RGM9bnVsbDticmVhaztjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwicG9pbnRlcm91dFwiOkVjLmRlbGV0ZShiLnBvaW50ZXJJZCk7YnJlYWs7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcImxvc3Rwb2ludGVyY2FwdHVyZVwiOkZjLmRlbGV0ZShiLnBvaW50ZXJJZCl9fWZ1bmN0aW9uIE1jKGEsYixjLGQsZSxmKXtpZihudWxsPT09YXx8YS5uYXRpdmVFdmVudCE9PWYpcmV0dXJuIGE9S2MoYixjLGQsZSxmKSxudWxsIT09YiYmKGI9TmMoYiksbnVsbCE9PWImJnhjKGIpKSxhO2EuZXZlbnRTeXN0ZW1GbGFnc3w9ZDtyZXR1cm4gYX1cbmZ1bmN0aW9uIE9jKGEsYixjLGQsZSl7c3dpdGNoKGIpe2Nhc2UgXCJmb2N1c1wiOnJldHVybiBCYz1NYyhCYyxhLGIsYyxkLGUpLCEwO2Nhc2UgXCJkcmFnZW50ZXJcIjpyZXR1cm4gQ2M9TWMoQ2MsYSxiLGMsZCxlKSwhMDtjYXNlIFwibW91c2VvdmVyXCI6cmV0dXJuIERjPU1jKERjLGEsYixjLGQsZSksITA7Y2FzZSBcInBvaW50ZXJvdmVyXCI6dmFyIGY9ZS5wb2ludGVySWQ7RWMuc2V0KGYsTWMoRWMuZ2V0KGYpfHxudWxsLGEsYixjLGQsZSkpO3JldHVybiEwO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOnJldHVybiBmPWUucG9pbnRlcklkLEZjLnNldChmLE1jKEZjLmdldChmKXx8bnVsbCxhLGIsYyxkLGUpKSwhMH1yZXR1cm4hMX1cbmZ1bmN0aW9uIFBjKGEpe3ZhciBiPXRjKGEudGFyZ2V0KTtpZihudWxsIT09Yil7dmFyIGM9ZGMoYik7aWYobnVsbCE9PWMpaWYoYj1jLnRhZywxMz09PWIpe2lmKGI9ZWMoYyksbnVsbCE9PWIpe2EuYmxvY2tlZE9uPWI7ci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHkoYS5wcmlvcml0eSxmdW5jdGlvbigpe3ljKGMpfSk7cmV0dXJufX1lbHNlIGlmKDM9PT1iJiZjLnN0YXRlTm9kZS5oeWRyYXRlKXthLmJsb2NrZWRPbj0zPT09Yy50YWc/Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbzpudWxsO3JldHVybn19YS5ibG9ja2VkT249bnVsbH1mdW5jdGlvbiBRYyhhKXtpZihudWxsIT09YS5ibG9ja2VkT24pcmV0dXJuITE7dmFyIGI9UmMoYS50b3BMZXZlbFR5cGUsYS5ldmVudFN5c3RlbUZsYWdzLGEuY29udGFpbmVyLGEubmF0aXZlRXZlbnQpO2lmKG51bGwhPT1iKXt2YXIgYz1OYyhiKTtudWxsIT09YyYmeGMoYyk7YS5ibG9ja2VkT249YjtyZXR1cm4hMX1yZXR1cm4hMH1cbmZ1bmN0aW9uIFNjKGEsYixjKXtRYyhhKSYmYy5kZWxldGUoYil9ZnVuY3Rpb24gVGMoKXtmb3IoemM9ITE7MDxBYy5sZW5ndGg7KXt2YXIgYT1BY1swXTtpZihudWxsIT09YS5ibG9ja2VkT24pe2E9TmMoYS5ibG9ja2VkT24pO251bGwhPT1hJiZ3YyhhKTticmVha312YXIgYj1SYyhhLnRvcExldmVsVHlwZSxhLmV2ZW50U3lzdGVtRmxhZ3MsYS5jb250YWluZXIsYS5uYXRpdmVFdmVudCk7bnVsbCE9PWI/YS5ibG9ja2VkT249YjpBYy5zaGlmdCgpfW51bGwhPT1CYyYmUWMoQmMpJiYoQmM9bnVsbCk7bnVsbCE9PUNjJiZRYyhDYykmJihDYz1udWxsKTtudWxsIT09RGMmJlFjKERjKSYmKERjPW51bGwpO0VjLmZvckVhY2goU2MpO0ZjLmZvckVhY2goU2MpfWZ1bmN0aW9uIFVjKGEsYil7YS5ibG9ja2VkT249PT1iJiYoYS5ibG9ja2VkT249bnVsbCx6Y3x8KHpjPSEwLHIudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayhyLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5LFRjKSkpfVxuZnVuY3Rpb24gVmMoYSl7ZnVuY3Rpb24gYihiKXtyZXR1cm4gVWMoYixhKX1pZigwPEFjLmxlbmd0aCl7VWMoQWNbMF0sYSk7Zm9yKHZhciBjPTE7YzxBYy5sZW5ndGg7YysrKXt2YXIgZD1BY1tjXTtkLmJsb2NrZWRPbj09PWEmJihkLmJsb2NrZWRPbj1udWxsKX19bnVsbCE9PUJjJiZVYyhCYyxhKTtudWxsIT09Q2MmJlVjKENjLGEpO251bGwhPT1EYyYmVWMoRGMsYSk7RWMuZm9yRWFjaChiKTtGYy5mb3JFYWNoKGIpO2ZvcihjPTA7YzxHYy5sZW5ndGg7YysrKWQ9R2NbY10sZC5ibG9ja2VkT249PT1hJiYoZC5ibG9ja2VkT249bnVsbCk7Zm9yKDswPEdjLmxlbmd0aCYmKGM9R2NbMF0sbnVsbD09PWMuYmxvY2tlZE9uKTspUGMoYyksbnVsbD09PWMuYmxvY2tlZE9uJiZHYy5zaGlmdCgpfVxudmFyIFdjPXt9LFljPW5ldyBNYXAsWmM9bmV3IE1hcCwkYz1bXCJhYm9ydFwiLFwiYWJvcnRcIixYYixcImFuaW1hdGlvbkVuZFwiLFliLFwiYW5pbWF0aW9uSXRlcmF0aW9uXCIsWmIsXCJhbmltYXRpb25TdGFydFwiLFwiY2FucGxheVwiLFwiY2FuUGxheVwiLFwiY2FucGxheXRocm91Z2hcIixcImNhblBsYXlUaHJvdWdoXCIsXCJkdXJhdGlvbmNoYW5nZVwiLFwiZHVyYXRpb25DaGFuZ2VcIixcImVtcHRpZWRcIixcImVtcHRpZWRcIixcImVuY3J5cHRlZFwiLFwiZW5jcnlwdGVkXCIsXCJlbmRlZFwiLFwiZW5kZWRcIixcImVycm9yXCIsXCJlcnJvclwiLFwiZ290cG9pbnRlcmNhcHR1cmVcIixcImdvdFBvaW50ZXJDYXB0dXJlXCIsXCJsb2FkXCIsXCJsb2FkXCIsXCJsb2FkZWRkYXRhXCIsXCJsb2FkZWREYXRhXCIsXCJsb2FkZWRtZXRhZGF0YVwiLFwibG9hZGVkTWV0YWRhdGFcIixcImxvYWRzdGFydFwiLFwibG9hZFN0YXJ0XCIsXCJsb3N0cG9pbnRlcmNhcHR1cmVcIixcImxvc3RQb2ludGVyQ2FwdHVyZVwiLFwicGxheWluZ1wiLFwicGxheWluZ1wiLFwicHJvZ3Jlc3NcIixcInByb2dyZXNzXCIsXCJzZWVraW5nXCIsXG5cInNlZWtpbmdcIixcInN0YWxsZWRcIixcInN0YWxsZWRcIixcInN1c3BlbmRcIixcInN1c3BlbmRcIixcInRpbWV1cGRhdGVcIixcInRpbWVVcGRhdGVcIiwkYixcInRyYW5zaXRpb25FbmRcIixcIndhaXRpbmdcIixcIndhaXRpbmdcIl07ZnVuY3Rpb24gYWQoYSxiKXtmb3IodmFyIGM9MDtjPGEubGVuZ3RoO2MrPTIpe3ZhciBkPWFbY10sZT1hW2MrMV0sZj1cIm9uXCIrKGVbMF0udG9VcHBlckNhc2UoKStlLnNsaWNlKDEpKTtmPXtwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpmLGNhcHR1cmVkOmYrXCJDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpbZF0sZXZlbnRQcmlvcml0eTpifTtaYy5zZXQoZCxiKTtZYy5zZXQoZCxmKTtXY1tlXT1mfX1cbmFkKFwiYmx1ciBibHVyIGNhbmNlbCBjYW5jZWwgY2xpY2sgY2xpY2sgY2xvc2UgY2xvc2UgY29udGV4dG1lbnUgY29udGV4dE1lbnUgY29weSBjb3B5IGN1dCBjdXQgYXV4Y2xpY2sgYXV4Q2xpY2sgZGJsY2xpY2sgZG91YmxlQ2xpY2sgZHJhZ2VuZCBkcmFnRW5kIGRyYWdzdGFydCBkcmFnU3RhcnQgZHJvcCBkcm9wIGZvY3VzIGZvY3VzIGlucHV0IGlucHV0IGludmFsaWQgaW52YWxpZCBrZXlkb3duIGtleURvd24ga2V5cHJlc3Mga2V5UHJlc3Mga2V5dXAga2V5VXAgbW91c2Vkb3duIG1vdXNlRG93biBtb3VzZXVwIG1vdXNlVXAgcGFzdGUgcGFzdGUgcGF1c2UgcGF1c2UgcGxheSBwbGF5IHBvaW50ZXJjYW5jZWwgcG9pbnRlckNhbmNlbCBwb2ludGVyZG93biBwb2ludGVyRG93biBwb2ludGVydXAgcG9pbnRlclVwIHJhdGVjaGFuZ2UgcmF0ZUNoYW5nZSByZXNldCByZXNldCBzZWVrZWQgc2Vla2VkIHN1Ym1pdCBzdWJtaXQgdG91Y2hjYW5jZWwgdG91Y2hDYW5jZWwgdG91Y2hlbmQgdG91Y2hFbmQgdG91Y2hzdGFydCB0b3VjaFN0YXJ0IHZvbHVtZWNoYW5nZSB2b2x1bWVDaGFuZ2VcIi5zcGxpdChcIiBcIiksMCk7XG5hZChcImRyYWcgZHJhZyBkcmFnZW50ZXIgZHJhZ0VudGVyIGRyYWdleGl0IGRyYWdFeGl0IGRyYWdsZWF2ZSBkcmFnTGVhdmUgZHJhZ292ZXIgZHJhZ092ZXIgbW91c2Vtb3ZlIG1vdXNlTW92ZSBtb3VzZW91dCBtb3VzZU91dCBtb3VzZW92ZXIgbW91c2VPdmVyIHBvaW50ZXJtb3ZlIHBvaW50ZXJNb3ZlIHBvaW50ZXJvdXQgcG9pbnRlck91dCBwb2ludGVyb3ZlciBwb2ludGVyT3ZlciBzY3JvbGwgc2Nyb2xsIHRvZ2dsZSB0b2dnbGUgdG91Y2htb3ZlIHRvdWNoTW92ZSB3aGVlbCB3aGVlbFwiLnNwbGl0KFwiIFwiKSwxKTthZCgkYywyKTtmb3IodmFyIGJkPVwiY2hhbmdlIHNlbGVjdGlvbmNoYW5nZSB0ZXh0SW5wdXQgY29tcG9zaXRpb25zdGFydCBjb21wb3NpdGlvbmVuZCBjb21wb3NpdGlvbnVwZGF0ZVwiLnNwbGl0KFwiIFwiKSxjZD0wO2NkPGJkLmxlbmd0aDtjZCsrKVpjLnNldChiZFtjZF0sMCk7XG52YXIgZGQ9ci51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSxlZD1yLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSxmZD0hMDtmdW5jdGlvbiBGKGEsYil7dmMoYixhLCExKX1mdW5jdGlvbiB2YyhhLGIsYyl7dmFyIGQ9WmMuZ2V0KGIpO3N3aXRjaCh2b2lkIDA9PT1kPzI6ZCl7Y2FzZSAwOmQ9Z2QuYmluZChudWxsLGIsMSxhKTticmVhaztjYXNlIDE6ZD1oZC5iaW5kKG51bGwsYiwxLGEpO2JyZWFrO2RlZmF1bHQ6ZD1pZC5iaW5kKG51bGwsYiwxLGEpfWM/YS5hZGRFdmVudExpc3RlbmVyKGIsZCwhMCk6YS5hZGRFdmVudExpc3RlbmVyKGIsZCwhMSl9ZnVuY3Rpb24gZ2QoYSxiLGMsZCl7SmF8fEhhKCk7dmFyIGU9aWQsZj1KYTtKYT0hMDt0cnl7R2EoZSxhLGIsYyxkKX1maW5hbGx5eyhKYT1mKXx8TGEoKX19ZnVuY3Rpb24gaGQoYSxiLGMsZCl7ZWQoZGQsaWQuYmluZChudWxsLGEsYixjLGQpKX1cbmZ1bmN0aW9uIGlkKGEsYixjLGQpe2lmKGZkKWlmKDA8QWMubGVuZ3RoJiYtMTxIYy5pbmRleE9mKGEpKWE9S2MobnVsbCxhLGIsYyxkKSxBYy5wdXNoKGEpO2Vsc2V7dmFyIGU9UmMoYSxiLGMsZCk7aWYobnVsbD09PWUpTGMoYSxkKTtlbHNlIGlmKC0xPEhjLmluZGV4T2YoYSkpYT1LYyhlLGEsYixjLGQpLEFjLnB1c2goYSk7ZWxzZSBpZighT2MoZSxhLGIsYyxkKSl7TGMoYSxkKTthPXJjKGEsZCxudWxsLGIpO3RyeXtNYShzYyxhKX1maW5hbGx5e3FjKGEpfX19fVxuZnVuY3Rpb24gUmMoYSxiLGMsZCl7Yz1uYyhkKTtjPXRjKGMpO2lmKG51bGwhPT1jKXt2YXIgZT1kYyhjKTtpZihudWxsPT09ZSljPW51bGw7ZWxzZXt2YXIgZj1lLnRhZztpZigxMz09PWYpe2M9ZWMoZSk7aWYobnVsbCE9PWMpcmV0dXJuIGM7Yz1udWxsfWVsc2UgaWYoMz09PWYpe2lmKGUuc3RhdGVOb2RlLmh5ZHJhdGUpcmV0dXJuIDM9PT1lLnRhZz9lLnN0YXRlTm9kZS5jb250YWluZXJJbmZvOm51bGw7Yz1udWxsfWVsc2UgZSE9PWMmJihjPW51bGwpfX1hPXJjKGEsZCxjLGIpO3RyeXtNYShzYyxhKX1maW5hbGx5e3FjKGEpfXJldHVybiBudWxsfVxudmFyIGpkPXthbmltYXRpb25JdGVyYXRpb25Db3VudDohMCxib3JkZXJJbWFnZU91dHNldDohMCxib3JkZXJJbWFnZVNsaWNlOiEwLGJvcmRlckltYWdlV2lkdGg6ITAsYm94RmxleDohMCxib3hGbGV4R3JvdXA6ITAsYm94T3JkaW5hbEdyb3VwOiEwLGNvbHVtbkNvdW50OiEwLGNvbHVtbnM6ITAsZmxleDohMCxmbGV4R3JvdzohMCxmbGV4UG9zaXRpdmU6ITAsZmxleFNocmluazohMCxmbGV4TmVnYXRpdmU6ITAsZmxleE9yZGVyOiEwLGdyaWRBcmVhOiEwLGdyaWRSb3c6ITAsZ3JpZFJvd0VuZDohMCxncmlkUm93U3BhbjohMCxncmlkUm93U3RhcnQ6ITAsZ3JpZENvbHVtbjohMCxncmlkQ29sdW1uRW5kOiEwLGdyaWRDb2x1bW5TcGFuOiEwLGdyaWRDb2x1bW5TdGFydDohMCxmb250V2VpZ2h0OiEwLGxpbmVDbGFtcDohMCxsaW5lSGVpZ2h0OiEwLG9wYWNpdHk6ITAsb3JkZXI6ITAsb3JwaGFuczohMCx0YWJTaXplOiEwLHdpZG93czohMCx6SW5kZXg6ITAsem9vbTohMCxmaWxsT3BhY2l0eTohMCxcbmZsb29kT3BhY2l0eTohMCxzdG9wT3BhY2l0eTohMCxzdHJva2VEYXNoYXJyYXk6ITAsc3Ryb2tlRGFzaG9mZnNldDohMCxzdHJva2VNaXRlcmxpbWl0OiEwLHN0cm9rZU9wYWNpdHk6ITAsc3Ryb2tlV2lkdGg6ITB9LGtkPVtcIldlYmtpdFwiLFwibXNcIixcIk1velwiLFwiT1wiXTtPYmplY3Qua2V5cyhqZCkuZm9yRWFjaChmdW5jdGlvbihhKXtrZC5mb3JFYWNoKGZ1bmN0aW9uKGIpe2I9YithLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK2Euc3Vic3RyaW5nKDEpO2pkW2JdPWpkW2FdfSl9KTtmdW5jdGlvbiBsZChhLGIsYyl7cmV0dXJuIG51bGw9PWJ8fFwiYm9vbGVhblwiPT09dHlwZW9mIGJ8fFwiXCI9PT1iP1wiXCI6Y3x8XCJudW1iZXJcIiE9PXR5cGVvZiBifHwwPT09Ynx8amQuaGFzT3duUHJvcGVydHkoYSkmJmpkW2FdPyhcIlwiK2IpLnRyaW0oKTpiK1wicHhcIn1cbmZ1bmN0aW9uIG1kKGEsYil7YT1hLnN0eWxlO2Zvcih2YXIgYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPTA9PT1jLmluZGV4T2YoXCItLVwiKSxlPWxkKGMsYltjXSxkKTtcImZsb2F0XCI9PT1jJiYoYz1cImNzc0Zsb2F0XCIpO2Q/YS5zZXRQcm9wZXJ0eShjLGUpOmFbY109ZX19dmFyIG5kPW4oe21lbnVpdGVtOiEwfSx7YXJlYTohMCxiYXNlOiEwLGJyOiEwLGNvbDohMCxlbWJlZDohMCxocjohMCxpbWc6ITAsaW5wdXQ6ITAsa2V5Z2VuOiEwLGxpbms6ITAsbWV0YTohMCxwYXJhbTohMCxzb3VyY2U6ITAsdHJhY2s6ITAsd2JyOiEwfSk7XG5mdW5jdGlvbiBvZChhLGIpe2lmKGIpe2lmKG5kW2FdJiYobnVsbCE9Yi5jaGlsZHJlbnx8bnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCkpdGhyb3cgRXJyb3IodSgxMzcsYSxcIlwiKSk7aWYobnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCl7aWYobnVsbCE9Yi5jaGlsZHJlbil0aHJvdyBFcnJvcih1KDYwKSk7aWYoIShcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJlwiX19odG1sXCJpbiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKSl0aHJvdyBFcnJvcih1KDYxKSk7fWlmKG51bGwhPWIuc3R5bGUmJlwib2JqZWN0XCIhPT10eXBlb2YgYi5zdHlsZSl0aHJvdyBFcnJvcih1KDYyLFwiXCIpKTt9fVxuZnVuY3Rpb24gcGQoYSxiKXtpZigtMT09PWEuaW5kZXhPZihcIi1cIikpcmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBiLmlzO3N3aXRjaChhKXtjYXNlIFwiYW5ub3RhdGlvbi14bWxcIjpjYXNlIFwiY29sb3ItcHJvZmlsZVwiOmNhc2UgXCJmb250LWZhY2VcIjpjYXNlIFwiZm9udC1mYWNlLXNyY1wiOmNhc2UgXCJmb250LWZhY2UtdXJpXCI6Y2FzZSBcImZvbnQtZmFjZS1mb3JtYXRcIjpjYXNlIFwiZm9udC1mYWNlLW5hbWVcIjpjYXNlIFwibWlzc2luZy1nbHlwaFwiOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITB9fXZhciBxZD1NYi5odG1sO2Z1bmN0aW9uIHJkKGEsYil7YT05PT09YS5ub2RlVHlwZXx8MTE9PT1hLm5vZGVUeXBlP2E6YS5vd25lckRvY3VtZW50O3ZhciBjPWNjKGEpO2I9d2FbYl07Zm9yKHZhciBkPTA7ZDxiLmxlbmd0aDtkKyspdWMoYltkXSxhLGMpfWZ1bmN0aW9uIHNkKCl7fVxuZnVuY3Rpb24gdGQoYSl7YT1hfHwoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBkb2N1bWVudD9kb2N1bWVudDp2b2lkIDApO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYSlyZXR1cm4gbnVsbDt0cnl7cmV0dXJuIGEuYWN0aXZlRWxlbWVudHx8YS5ib2R5fWNhdGNoKGIpe3JldHVybiBhLmJvZHl9fWZ1bmN0aW9uIHVkKGEpe2Zvcig7YSYmYS5maXJzdENoaWxkOylhPWEuZmlyc3RDaGlsZDtyZXR1cm4gYX1mdW5jdGlvbiB2ZChhLGIpe3ZhciBjPXVkKGEpO2E9MDtmb3IodmFyIGQ7Yzspe2lmKDM9PT1jLm5vZGVUeXBlKXtkPWErYy50ZXh0Q29udGVudC5sZW5ndGg7aWYoYTw9YiYmZD49YilyZXR1cm57bm9kZTpjLG9mZnNldDpiLWF9O2E9ZH1hOntmb3IoO2M7KXtpZihjLm5leHRTaWJsaW5nKXtjPWMubmV4dFNpYmxpbmc7YnJlYWsgYX1jPWMucGFyZW50Tm9kZX1jPXZvaWQgMH1jPXVkKGMpfX1cbmZ1bmN0aW9uIHdkKGEsYil7cmV0dXJuIGEmJmI/YT09PWI/ITA6YSYmMz09PWEubm9kZVR5cGU/ITE6YiYmMz09PWIubm9kZVR5cGU/d2QoYSxiLnBhcmVudE5vZGUpOlwiY29udGFpbnNcImluIGE/YS5jb250YWlucyhiKTphLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uPyEhKGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oYikmMTYpOiExOiExfWZ1bmN0aW9uIHhkKCl7Zm9yKHZhciBhPXdpbmRvdyxiPXRkKCk7YiBpbnN0YW5jZW9mIGEuSFRNTElGcmFtZUVsZW1lbnQ7KXt0cnl7dmFyIGM9XCJzdHJpbmdcIj09PXR5cGVvZiBiLmNvbnRlbnRXaW5kb3cubG9jYXRpb24uaHJlZn1jYXRjaChkKXtjPSExfWlmKGMpYT1iLmNvbnRlbnRXaW5kb3c7ZWxzZSBicmVhaztiPXRkKGEuZG9jdW1lbnQpfXJldHVybiBifVxuZnVuY3Rpb24geWQoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVybiBiJiYoXCJpbnB1dFwiPT09YiYmKFwidGV4dFwiPT09YS50eXBlfHxcInNlYXJjaFwiPT09YS50eXBlfHxcInRlbFwiPT09YS50eXBlfHxcInVybFwiPT09YS50eXBlfHxcInBhc3N3b3JkXCI9PT1hLnR5cGUpfHxcInRleHRhcmVhXCI9PT1ifHxcInRydWVcIj09PWEuY29udGVudEVkaXRhYmxlKX12YXIgemQ9XCIkXCIsQWQ9XCIvJFwiLEJkPVwiJD9cIixDZD1cIiQhXCIsRGQ9bnVsbCxFZD1udWxsO2Z1bmN0aW9uIEZkKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJidXR0b25cIjpjYXNlIFwiaW5wdXRcIjpjYXNlIFwic2VsZWN0XCI6Y2FzZSBcInRleHRhcmVhXCI6cmV0dXJuISFiLmF1dG9Gb2N1c31yZXR1cm4hMX1cbmZ1bmN0aW9uIEdkKGEsYil7cmV0dXJuXCJ0ZXh0YXJlYVwiPT09YXx8XCJvcHRpb25cIj09PWF8fFwibm9zY3JpcHRcIj09PWF8fFwic3RyaW5nXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJudW1iZXJcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MLl9faHRtbH12YXIgSGQ9XCJmdW5jdGlvblwiPT09dHlwZW9mIHNldFRpbWVvdXQ/c2V0VGltZW91dDp2b2lkIDAsSWQ9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6dm9pZCAwO2Z1bmN0aW9uIEpkKGEpe2Zvcig7bnVsbCE9YTthPWEubmV4dFNpYmxpbmcpe3ZhciBiPWEubm9kZVR5cGU7aWYoMT09PWJ8fDM9PT1iKWJyZWFrfXJldHVybiBhfVxuZnVuY3Rpb24gS2QoYSl7YT1hLnByZXZpb3VzU2libGluZztmb3IodmFyIGI9MDthOyl7aWYoOD09PWEubm9kZVR5cGUpe3ZhciBjPWEuZGF0YTtpZihjPT09emR8fGM9PT1DZHx8Yz09PUJkKXtpZigwPT09YilyZXR1cm4gYTtiLS19ZWxzZSBjPT09QWQmJmIrK31hPWEucHJldmlvdXNTaWJsaW5nfXJldHVybiBudWxsfXZhciBMZD1NYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyKSxNZD1cIl9fcmVhY3RJbnRlcm5hbEluc3RhbmNlJFwiK0xkLE5kPVwiX19yZWFjdEV2ZW50SGFuZGxlcnMkXCIrTGQsT2Q9XCJfX3JlYWN0Q29udGFpbmVyZSRcIitMZDtcbmZ1bmN0aW9uIHRjKGEpe3ZhciBiPWFbTWRdO2lmKGIpcmV0dXJuIGI7Zm9yKHZhciBjPWEucGFyZW50Tm9kZTtjOyl7aWYoYj1jW09kXXx8Y1tNZF0pe2M9Yi5hbHRlcm5hdGU7aWYobnVsbCE9PWIuY2hpbGR8fG51bGwhPT1jJiZudWxsIT09Yy5jaGlsZClmb3IoYT1LZChhKTtudWxsIT09YTspe2lmKGM9YVtNZF0pcmV0dXJuIGM7YT1LZChhKX1yZXR1cm4gYn1hPWM7Yz1hLnBhcmVudE5vZGV9cmV0dXJuIG51bGx9ZnVuY3Rpb24gTmMoYSl7YT1hW01kXXx8YVtPZF07cmV0dXJuIWF8fDUhPT1hLnRhZyYmNiE9PWEudGFnJiYxMyE9PWEudGFnJiYzIT09YS50YWc/bnVsbDphfWZ1bmN0aW9uIFBkKGEpe2lmKDU9PT1hLnRhZ3x8Nj09PWEudGFnKXJldHVybiBhLnN0YXRlTm9kZTt0aHJvdyBFcnJvcih1KDMzKSk7fWZ1bmN0aW9uIFFkKGEpe3JldHVybiBhW05kXXx8bnVsbH1cbmZ1bmN0aW9uIFJkKGEpe2RvIGE9YS5yZXR1cm47d2hpbGUoYSYmNSE9PWEudGFnKTtyZXR1cm4gYT9hOm51bGx9XG5mdW5jdGlvbiBTZChhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO2lmKCFjKXJldHVybiBudWxsO3ZhciBkPWxhKGMpO2lmKCFkKXJldHVybiBudWxsO2M9ZFtiXTthOnN3aXRjaChiKXtjYXNlIFwib25DbGlja1wiOmNhc2UgXCJvbkNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbkRvdWJsZUNsaWNrXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VEb3duXCI6Y2FzZSBcIm9uTW91c2VEb3duQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlTW92ZVwiOmNhc2UgXCJvbk1vdXNlTW92ZUNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZVVwXCI6Y2FzZSBcIm9uTW91c2VVcENhcHR1cmVcIjpjYXNlIFwib25Nb3VzZUVudGVyXCI6KGQ9IWQuZGlzYWJsZWQpfHwoYT1hLnR5cGUsZD0hKFwiYnV0dG9uXCI9PT1hfHxcImlucHV0XCI9PT1hfHxcInNlbGVjdFwiPT09YXx8XCJ0ZXh0YXJlYVwiPT09YSkpO2E9IWQ7YnJlYWsgYTtkZWZhdWx0OmE9ITF9aWYoYSlyZXR1cm4gbnVsbDtpZihjJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYyl0aHJvdyBFcnJvcih1KDIzMSxcbmIsdHlwZW9mIGMpKTtyZXR1cm4gY31mdW5jdGlvbiBUZChhLGIsYyl7aWYoYj1TZChhLGMuZGlzcGF0Y2hDb25maWcucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXNbYl0pKWMuX2Rpc3BhdGNoTGlzdGVuZXJzPWljKGMuX2Rpc3BhdGNoTGlzdGVuZXJzLGIpLGMuX2Rpc3BhdGNoSW5zdGFuY2VzPWljKGMuX2Rpc3BhdGNoSW5zdGFuY2VzLGEpfWZ1bmN0aW9uIFVkKGEpe2lmKGEmJmEuZGlzcGF0Y2hDb25maWcucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXMpe2Zvcih2YXIgYj1hLl90YXJnZXRJbnN0LGM9W107YjspYy5wdXNoKGIpLGI9UmQoYik7Zm9yKGI9Yy5sZW5ndGg7MDxiLS07KVRkKGNbYl0sXCJjYXB0dXJlZFwiLGEpO2ZvcihiPTA7YjxjLmxlbmd0aDtiKyspVGQoY1tiXSxcImJ1YmJsZWRcIixhKX19XG5mdW5jdGlvbiBWZChhLGIsYyl7YSYmYyYmYy5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lJiYoYj1TZChhLGMuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSkpJiYoYy5fZGlzcGF0Y2hMaXN0ZW5lcnM9aWMoYy5fZGlzcGF0Y2hMaXN0ZW5lcnMsYiksYy5fZGlzcGF0Y2hJbnN0YW5jZXM9aWMoYy5fZGlzcGF0Y2hJbnN0YW5jZXMsYSkpfWZ1bmN0aW9uIFdkKGEpe2EmJmEuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSYmVmQoYS5fdGFyZ2V0SW5zdCxudWxsLGEpfWZ1bmN0aW9uIFhkKGEpe2pjKGEsVWQpfXZhciBZZD1udWxsLFpkPW51bGwsJGQ9bnVsbDtcbmZ1bmN0aW9uIGFlKCl7aWYoJGQpcmV0dXJuICRkO3ZhciBhLGI9WmQsYz1iLmxlbmd0aCxkLGU9XCJ2YWx1ZVwiaW4gWWQ/WWQudmFsdWU6WWQudGV4dENvbnRlbnQsZj1lLmxlbmd0aDtmb3IoYT0wO2E8YyYmYlthXT09PWVbYV07YSsrKTt2YXIgZz1jLWE7Zm9yKGQ9MTtkPD1nJiZiW2MtZF09PT1lW2YtZF07ZCsrKTtyZXR1cm4gJGQ9ZS5zbGljZShhLDE8ZD8xLWQ6dm9pZCAwKX1mdW5jdGlvbiBiZSgpe3JldHVybiEwfWZ1bmN0aW9uIGNlKCl7cmV0dXJuITF9XG5mdW5jdGlvbiBHKGEsYixjLGQpe3RoaXMuZGlzcGF0Y2hDb25maWc9YTt0aGlzLl90YXJnZXRJbnN0PWI7dGhpcy5uYXRpdmVFdmVudD1jO2E9dGhpcy5jb25zdHJ1Y3Rvci5JbnRlcmZhY2U7Zm9yKHZhciBlIGluIGEpYS5oYXNPd25Qcm9wZXJ0eShlKSYmKChiPWFbZV0pP3RoaXNbZV09YihjKTpcInRhcmdldFwiPT09ZT90aGlzLnRhcmdldD1kOnRoaXNbZV09Y1tlXSk7dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9KG51bGwhPWMuZGVmYXVsdFByZXZlbnRlZD9jLmRlZmF1bHRQcmV2ZW50ZWQ6ITE9PT1jLnJldHVyblZhbHVlKT9iZTpjZTt0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPWNlO3JldHVybiB0aGlzfVxubihHLnByb3RvdHlwZSx7cHJldmVudERlZmF1bHQ6ZnVuY3Rpb24oKXt0aGlzLmRlZmF1bHRQcmV2ZW50ZWQ9ITA7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5wcmV2ZW50RGVmYXVsdD9hLnByZXZlbnREZWZhdWx0KCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5yZXR1cm5WYWx1ZSYmKGEucmV0dXJuVmFsdWU9ITEpLHRoaXMuaXNEZWZhdWx0UHJldmVudGVkPWJlKX0sc3RvcFByb3BhZ2F0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5zdG9wUHJvcGFnYXRpb24/YS5zdG9wUHJvcGFnYXRpb24oKTpcInVua25vd25cIiE9PXR5cGVvZiBhLmNhbmNlbEJ1YmJsZSYmKGEuY2FuY2VsQnViYmxlPSEwKSx0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPWJlKX0scGVyc2lzdDpmdW5jdGlvbigpe3RoaXMuaXNQZXJzaXN0ZW50PWJlfSxpc1BlcnNpc3RlbnQ6Y2UsZGVzdHJ1Y3RvcjpmdW5jdGlvbigpe3ZhciBhPXRoaXMuY29uc3RydWN0b3IuSW50ZXJmYWNlLFxuYjtmb3IoYiBpbiBhKXRoaXNbYl09bnVsbDt0aGlzLm5hdGl2ZUV2ZW50PXRoaXMuX3RhcmdldEluc3Q9dGhpcy5kaXNwYXRjaENvbmZpZz1udWxsO3RoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9Y2U7dGhpcy5fZGlzcGF0Y2hJbnN0YW5jZXM9dGhpcy5fZGlzcGF0Y2hMaXN0ZW5lcnM9bnVsbH19KTtHLkludGVyZmFjZT17dHlwZTpudWxsLHRhcmdldDpudWxsLGN1cnJlbnRUYXJnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gbnVsbH0sZXZlbnRQaGFzZTpudWxsLGJ1YmJsZXM6bnVsbCxjYW5jZWxhYmxlOm51bGwsdGltZVN0YW1wOmZ1bmN0aW9uKGEpe3JldHVybiBhLnRpbWVTdGFtcHx8RGF0ZS5ub3coKX0sZGVmYXVsdFByZXZlbnRlZDpudWxsLGlzVHJ1c3RlZDpudWxsfTtcbkcuZXh0ZW5kPWZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIoKXt9ZnVuY3Rpb24gYygpe3JldHVybiBkLmFwcGx5KHRoaXMsYXJndW1lbnRzKX12YXIgZD10aGlzO2IucHJvdG90eXBlPWQucHJvdG90eXBlO3ZhciBlPW5ldyBiO24oZSxjLnByb3RvdHlwZSk7Yy5wcm90b3R5cGU9ZTtjLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1jO2MuSW50ZXJmYWNlPW4oe30sZC5JbnRlcmZhY2UsYSk7Yy5leHRlbmQ9ZC5leHRlbmQ7ZGUoYyk7cmV0dXJuIGN9O2RlKEcpO2Z1bmN0aW9uIGVlKGEsYixjLGQpe2lmKHRoaXMuZXZlbnRQb29sLmxlbmd0aCl7dmFyIGU9dGhpcy5ldmVudFBvb2wucG9wKCk7dGhpcy5jYWxsKGUsYSxiLGMsZCk7cmV0dXJuIGV9cmV0dXJuIG5ldyB0aGlzKGEsYixjLGQpfVxuZnVuY3Rpb24gZmUoYSl7aWYoIShhIGluc3RhbmNlb2YgdGhpcykpdGhyb3cgRXJyb3IodSgyNzkpKTthLmRlc3RydWN0b3IoKTsxMD50aGlzLmV2ZW50UG9vbC5sZW5ndGgmJnRoaXMuZXZlbnRQb29sLnB1c2goYSl9ZnVuY3Rpb24gZGUoYSl7YS5ldmVudFBvb2w9W107YS5nZXRQb29sZWQ9ZWU7YS5yZWxlYXNlPWZlfXZhciBnZT1HLmV4dGVuZCh7ZGF0YTpudWxsfSksaGU9Ry5leHRlbmQoe2RhdGE6bnVsbH0pLGllPVs5LDEzLDI3LDMyXSxqZT15YSYmXCJDb21wb3NpdGlvbkV2ZW50XCJpbiB3aW5kb3csa2U9bnVsbDt5YSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYoa2U9ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKTtcbnZhciBsZT15YSYmXCJUZXh0RXZlbnRcImluIHdpbmRvdyYmIWtlLG1lPXlhJiYoIWplfHxrZSYmODxrZSYmMTE+PWtlKSxuZT1TdHJpbmcuZnJvbUNoYXJDb2RlKDMyKSxvZT17YmVmb3JlSW5wdXQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25CZWZvcmVJbnB1dFwiLGNhcHR1cmVkOlwib25CZWZvcmVJbnB1dENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOltcImNvbXBvc2l0aW9uZW5kXCIsXCJrZXlwcmVzc1wiLFwidGV4dElucHV0XCIsXCJwYXN0ZVwiXX0sY29tcG9zaXRpb25FbmQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvbkVuZFwiLGNhcHR1cmVkOlwib25Db21wb3NpdGlvbkVuZENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbmVuZCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX0sY29tcG9zaXRpb25TdGFydDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uU3RhcnRcIixcbmNhcHR1cmVkOlwib25Db21wb3NpdGlvblN0YXJ0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9uc3RhcnQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIil9LGNvbXBvc2l0aW9uVXBkYXRlOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25VcGRhdGVcIixjYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25VcGRhdGVDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb251cGRhdGUga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIil9fSxwZT0hMTtcbmZ1bmN0aW9uIHFlKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJrZXl1cFwiOnJldHVybi0xIT09aWUuaW5kZXhPZihiLmtleUNvZGUpO2Nhc2UgXCJrZXlkb3duXCI6cmV0dXJuIDIyOSE9PWIua2V5Q29kZTtjYXNlIFwia2V5cHJlc3NcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcImJsdXJcIjpyZXR1cm4hMDtkZWZhdWx0OnJldHVybiExfX1mdW5jdGlvbiByZShhKXthPWEuZGV0YWlsO3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmXCJkYXRhXCJpbiBhP2EuZGF0YTpudWxsfXZhciBzZT0hMTtmdW5jdGlvbiB0ZShhLGIpe3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4gcmUoYik7Y2FzZSBcImtleXByZXNzXCI6aWYoMzIhPT1iLndoaWNoKXJldHVybiBudWxsO3BlPSEwO3JldHVybiBuZTtjYXNlIFwidGV4dElucHV0XCI6cmV0dXJuIGE9Yi5kYXRhLGE9PT1uZSYmcGU/bnVsbDphO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxuZnVuY3Rpb24gdWUoYSxiKXtpZihzZSlyZXR1cm5cImNvbXBvc2l0aW9uZW5kXCI9PT1hfHwhamUmJnFlKGEsYik/KGE9YWUoKSwkZD1aZD1ZZD1udWxsLHNlPSExLGEpOm51bGw7c3dpdGNoKGEpe2Nhc2UgXCJwYXN0ZVwiOnJldHVybiBudWxsO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKCEoYi5jdHJsS2V5fHxiLmFsdEtleXx8Yi5tZXRhS2V5KXx8Yi5jdHJsS2V5JiZiLmFsdEtleSl7aWYoYi5jaGFyJiYxPGIuY2hhci5sZW5ndGgpcmV0dXJuIGIuY2hhcjtpZihiLndoaWNoKXJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKGIud2hpY2gpfXJldHVybiBudWxsO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiBtZSYmXCJrb1wiIT09Yi5sb2NhbGU/bnVsbDpiLmRhdGE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG52YXIgdmU9e2V2ZW50VHlwZXM6b2UsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZTtpZihqZSliOntzd2l0Y2goYSl7Y2FzZSBcImNvbXBvc2l0aW9uc3RhcnRcIjp2YXIgZj1vZS5jb21wb3NpdGlvblN0YXJ0O2JyZWFrIGI7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6Zj1vZS5jb21wb3NpdGlvbkVuZDticmVhayBiO2Nhc2UgXCJjb21wb3NpdGlvbnVwZGF0ZVwiOmY9b2UuY29tcG9zaXRpb25VcGRhdGU7YnJlYWsgYn1mPXZvaWQgMH1lbHNlIHNlP3FlKGEsYykmJihmPW9lLmNvbXBvc2l0aW9uRW5kKTpcImtleWRvd25cIj09PWEmJjIyOT09PWMua2V5Q29kZSYmKGY9b2UuY29tcG9zaXRpb25TdGFydCk7Zj8obWUmJlwia29cIiE9PWMubG9jYWxlJiYoc2V8fGYhPT1vZS5jb21wb3NpdGlvblN0YXJ0P2Y9PT1vZS5jb21wb3NpdGlvbkVuZCYmc2UmJihlPWFlKCkpOihZZD1kLFpkPVwidmFsdWVcImluIFlkP1lkLnZhbHVlOllkLnRleHRDb250ZW50LHNlPSEwKSksZj1nZS5nZXRQb29sZWQoZixcbmIsYyxkKSxlP2YuZGF0YT1lOihlPXJlKGMpLG51bGwhPT1lJiYoZi5kYXRhPWUpKSxYZChmKSxlPWYpOmU9bnVsbDsoYT1sZT90ZShhLGMpOnVlKGEsYykpPyhiPWhlLmdldFBvb2xlZChvZS5iZWZvcmVJbnB1dCxiLGMsZCksYi5kYXRhPWEsWGQoYikpOmI9bnVsbDtyZXR1cm4gbnVsbD09PWU/YjpudWxsPT09Yj9lOltlLGJdfX0sd2U9e2NvbG9yOiEwLGRhdGU6ITAsZGF0ZXRpbWU6ITAsXCJkYXRldGltZS1sb2NhbFwiOiEwLGVtYWlsOiEwLG1vbnRoOiEwLG51bWJlcjohMCxwYXNzd29yZDohMCxyYW5nZTohMCxzZWFyY2g6ITAsdGVsOiEwLHRleHQ6ITAsdGltZTohMCx1cmw6ITAsd2VlazohMH07ZnVuY3Rpb24geGUoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVyblwiaW5wdXRcIj09PWI/ISF3ZVthLnR5cGVdOlwidGV4dGFyZWFcIj09PWI/ITA6ITF9XG52YXIgeWU9e2NoYW5nZTp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNoYW5nZVwiLGNhcHR1cmVkOlwib25DaGFuZ2VDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY2hhbmdlIGNsaWNrIGZvY3VzIGlucHV0IGtleWRvd24ga2V5dXAgc2VsZWN0aW9uY2hhbmdlXCIuc3BsaXQoXCIgXCIpfX07ZnVuY3Rpb24gemUoYSxiLGMpe2E9Ry5nZXRQb29sZWQoeWUuY2hhbmdlLGEsYixjKTthLnR5cGU9XCJjaGFuZ2VcIjtEYShjKTtYZChhKTtyZXR1cm4gYX12YXIgQWU9bnVsbCxCZT1udWxsO2Z1bmN0aW9uIENlKGEpe21jKGEpfWZ1bmN0aW9uIERlKGEpe3ZhciBiPVBkKGEpO2lmKHliKGIpKXJldHVybiBhfWZ1bmN0aW9uIEVlKGEsYil7aWYoXCJjaGFuZ2VcIj09PWEpcmV0dXJuIGJ9dmFyIEZlPSExO3lhJiYoRmU9b2MoXCJpbnB1dFwiKSYmKCFkb2N1bWVudC5kb2N1bWVudE1vZGV8fDk8ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKSk7XG5mdW5jdGlvbiBHZSgpe0FlJiYoQWUuZGV0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsSGUpLEJlPUFlPW51bGwpfWZ1bmN0aW9uIEhlKGEpe2lmKFwidmFsdWVcIj09PWEucHJvcGVydHlOYW1lJiZEZShCZSkpaWYoYT16ZShCZSxhLG5jKGEpKSxKYSltYyhhKTtlbHNle0phPSEwO3RyeXtGYShDZSxhKX1maW5hbGx5e0phPSExLExhKCl9fX1mdW5jdGlvbiBJZShhLGIsYyl7XCJmb2N1c1wiPT09YT8oR2UoKSxBZT1iLEJlPWMsQWUuYXR0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsSGUpKTpcImJsdXJcIj09PWEmJkdlKCl9ZnVuY3Rpb24gSmUoYSl7aWYoXCJzZWxlY3Rpb25jaGFuZ2VcIj09PWF8fFwia2V5dXBcIj09PWF8fFwia2V5ZG93blwiPT09YSlyZXR1cm4gRGUoQmUpfWZ1bmN0aW9uIEtlKGEsYil7aWYoXCJjbGlja1wiPT09YSlyZXR1cm4gRGUoYil9ZnVuY3Rpb24gTGUoYSxiKXtpZihcImlucHV0XCI9PT1hfHxcImNoYW5nZVwiPT09YSlyZXR1cm4gRGUoYil9XG52YXIgTWU9e2V2ZW50VHlwZXM6eWUsX2lzSW5wdXRFdmVudFN1cHBvcnRlZDpGZSxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWI/UGQoYik6d2luZG93LGY9ZS5ub2RlTmFtZSYmZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO2lmKFwic2VsZWN0XCI9PT1mfHxcImlucHV0XCI9PT1mJiZcImZpbGVcIj09PWUudHlwZSl2YXIgZz1FZTtlbHNlIGlmKHhlKGUpKWlmKEZlKWc9TGU7ZWxzZXtnPUplO3ZhciBoPUllfWVsc2UoZj1lLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09Zi50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09ZS50eXBlfHxcInJhZGlvXCI9PT1lLnR5cGUpJiYoZz1LZSk7aWYoZyYmKGc9ZyhhLGIpKSlyZXR1cm4gemUoZyxjLGQpO2gmJmgoYSxlLGIpO1wiYmx1clwiPT09YSYmKGE9ZS5fd3JhcHBlclN0YXRlKSYmYS5jb250cm9sbGVkJiZcIm51bWJlclwiPT09ZS50eXBlJiZEYihlLFwibnVtYmVyXCIsZS52YWx1ZSl9fSxOZT1HLmV4dGVuZCh7dmlldzpudWxsLGRldGFpbDpudWxsfSksXG5PZT17QWx0OlwiYWx0S2V5XCIsQ29udHJvbDpcImN0cmxLZXlcIixNZXRhOlwibWV0YUtleVwiLFNoaWZ0Olwic2hpZnRLZXlcIn07ZnVuY3Rpb24gUGUoYSl7dmFyIGI9dGhpcy5uYXRpdmVFdmVudDtyZXR1cm4gYi5nZXRNb2RpZmllclN0YXRlP2IuZ2V0TW9kaWZpZXJTdGF0ZShhKTooYT1PZVthXSk/ISFiW2FdOiExfWZ1bmN0aW9uIFFlKCl7cmV0dXJuIFBlfVxudmFyIFJlPTAsU2U9MCxUZT0hMSxVZT0hMSxWZT1OZS5leHRlbmQoe3NjcmVlblg6bnVsbCxzY3JlZW5ZOm51bGwsY2xpZW50WDpudWxsLGNsaWVudFk6bnVsbCxwYWdlWDpudWxsLHBhZ2VZOm51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLGdldE1vZGlmaWVyU3RhdGU6UWUsYnV0dG9uOm51bGwsYnV0dG9uczpudWxsLHJlbGF0ZWRUYXJnZXQ6ZnVuY3Rpb24oYSl7cmV0dXJuIGEucmVsYXRlZFRhcmdldHx8KGEuZnJvbUVsZW1lbnQ9PT1hLnNyY0VsZW1lbnQ/YS50b0VsZW1lbnQ6YS5mcm9tRWxlbWVudCl9LG1vdmVtZW50WDpmdW5jdGlvbihhKXtpZihcIm1vdmVtZW50WFwiaW4gYSlyZXR1cm4gYS5tb3ZlbWVudFg7dmFyIGI9UmU7UmU9YS5zY3JlZW5YO3JldHVybiBUZT9cIm1vdXNlbW92ZVwiPT09YS50eXBlP2Euc2NyZWVuWC1iOjA6KFRlPSEwLDApfSxtb3ZlbWVudFk6ZnVuY3Rpb24oYSl7aWYoXCJtb3ZlbWVudFlcImluIGEpcmV0dXJuIGEubW92ZW1lbnRZO1xudmFyIGI9U2U7U2U9YS5zY3JlZW5ZO3JldHVybiBVZT9cIm1vdXNlbW92ZVwiPT09YS50eXBlP2Euc2NyZWVuWS1iOjA6KFVlPSEwLDApfX0pLFdlPVZlLmV4dGVuZCh7cG9pbnRlcklkOm51bGwsd2lkdGg6bnVsbCxoZWlnaHQ6bnVsbCxwcmVzc3VyZTpudWxsLHRhbmdlbnRpYWxQcmVzc3VyZTpudWxsLHRpbHRYOm51bGwsdGlsdFk6bnVsbCx0d2lzdDpudWxsLHBvaW50ZXJUeXBlOm51bGwsaXNQcmltYXJ5Om51bGx9KSxYZT17bW91c2VFbnRlcjp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uTW91c2VFbnRlclwiLGRlcGVuZGVuY2llczpbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdfSxtb3VzZUxlYXZlOntyZWdpc3RyYXRpb25OYW1lOlwib25Nb3VzZUxlYXZlXCIsZGVwZW5kZW5jaWVzOltcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl19LHBvaW50ZXJFbnRlcjp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uUG9pbnRlckVudGVyXCIsZGVwZW5kZW5jaWVzOltcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdfSxwb2ludGVyTGVhdmU6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvblBvaW50ZXJMZWF2ZVwiLFxuZGVwZW5kZW5jaWVzOltcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdfX0sWWU9e2V2ZW50VHlwZXM6WGUsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkLGUpe3ZhciBmPVwibW91c2VvdmVyXCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hLGc9XCJtb3VzZW91dFwiPT09YXx8XCJwb2ludGVyb3V0XCI9PT1hO2lmKGYmJjA9PT0oZSYzMikmJihjLnJlbGF0ZWRUYXJnZXR8fGMuZnJvbUVsZW1lbnQpfHwhZyYmIWYpcmV0dXJuIG51bGw7Zj1kLndpbmRvdz09PWQ/ZDooZj1kLm93bmVyRG9jdW1lbnQpP2YuZGVmYXVsdFZpZXd8fGYucGFyZW50V2luZG93OndpbmRvdztpZihnKXtpZihnPWIsYj0oYj1jLnJlbGF0ZWRUYXJnZXR8fGMudG9FbGVtZW50KT90YyhiKTpudWxsLG51bGwhPT1iKXt2YXIgaD1kYyhiKTtpZihiIT09aHx8NSE9PWIudGFnJiY2IT09Yi50YWcpYj1udWxsfX1lbHNlIGc9bnVsbDtpZihnPT09YilyZXR1cm4gbnVsbDtpZihcIm1vdXNlb3V0XCI9PT1hfHxcIm1vdXNlb3ZlclwiPT09XG5hKXt2YXIgaz1WZTt2YXIgbD1YZS5tb3VzZUxlYXZlO3ZhciBtPVhlLm1vdXNlRW50ZXI7dmFyIHA9XCJtb3VzZVwifWVsc2UgaWYoXCJwb2ludGVyb3V0XCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hKWs9V2UsbD1YZS5wb2ludGVyTGVhdmUsbT1YZS5wb2ludGVyRW50ZXIscD1cInBvaW50ZXJcIjthPW51bGw9PWc/ZjpQZChnKTtmPW51bGw9PWI/ZjpQZChiKTtsPWsuZ2V0UG9vbGVkKGwsZyxjLGQpO2wudHlwZT1wK1wibGVhdmVcIjtsLnRhcmdldD1hO2wucmVsYXRlZFRhcmdldD1mO2M9ay5nZXRQb29sZWQobSxiLGMsZCk7Yy50eXBlPXArXCJlbnRlclwiO2MudGFyZ2V0PWY7Yy5yZWxhdGVkVGFyZ2V0PWE7ZD1nO3A9YjtpZihkJiZwKWE6e2s9ZDttPXA7Zz0wO2ZvcihhPWs7YTthPVJkKGEpKWcrKzthPTA7Zm9yKGI9bTtiO2I9UmQoYikpYSsrO2Zvcig7MDxnLWE7KWs9UmQoayksZy0tO2Zvcig7MDxhLWc7KW09UmQobSksYS0tO2Zvcig7Zy0tOyl7aWYoaz09PW18fGs9PT1tLmFsdGVybmF0ZSlicmVhayBhO1xuaz1SZChrKTttPVJkKG0pfWs9bnVsbH1lbHNlIGs9bnVsbDttPWs7Zm9yKGs9W107ZCYmZCE9PW07KXtnPWQuYWx0ZXJuYXRlO2lmKG51bGwhPT1nJiZnPT09bSlicmVhaztrLnB1c2goZCk7ZD1SZChkKX1mb3IoZD1bXTtwJiZwIT09bTspe2c9cC5hbHRlcm5hdGU7aWYobnVsbCE9PWcmJmc9PT1tKWJyZWFrO2QucHVzaChwKTtwPVJkKHApfWZvcihwPTA7cDxrLmxlbmd0aDtwKyspVmQoa1twXSxcImJ1YmJsZWRcIixsKTtmb3IocD1kLmxlbmd0aDswPHAtLTspVmQoZFtwXSxcImNhcHR1cmVkXCIsYyk7cmV0dXJuIDA9PT0oZSY2NCk/W2xdOltsLGNdfX07ZnVuY3Rpb24gWmUoYSxiKXtyZXR1cm4gYT09PWImJigwIT09YXx8MS9hPT09MS9iKXx8YSE9PWEmJmIhPT1ifXZhciAkZT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgT2JqZWN0LmlzP09iamVjdC5pczpaZSxhZj1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xuZnVuY3Rpb24gYmYoYSxiKXtpZigkZShhLGIpKXJldHVybiEwO2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYXx8bnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYnx8bnVsbD09PWIpcmV0dXJuITE7dmFyIGM9T2JqZWN0LmtleXMoYSksZD1PYmplY3Qua2V5cyhiKTtpZihjLmxlbmd0aCE9PWQubGVuZ3RoKXJldHVybiExO2ZvcihkPTA7ZDxjLmxlbmd0aDtkKyspaWYoIWFmLmNhbGwoYixjW2RdKXx8ISRlKGFbY1tkXV0sYltjW2RdXSkpcmV0dXJuITE7cmV0dXJuITB9XG52YXIgY2Y9eWEmJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmMTE+PWRvY3VtZW50LmRvY3VtZW50TW9kZSxkZj17c2VsZWN0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uU2VsZWN0XCIsY2FwdHVyZWQ6XCJvblNlbGVjdENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb250ZXh0bWVudSBkcmFnZW5kIGZvY3VzIGtleWRvd24ga2V5dXAgbW91c2Vkb3duIG1vdXNldXAgc2VsZWN0aW9uY2hhbmdlXCIuc3BsaXQoXCIgXCIpfX0sZWY9bnVsbCxmZj1udWxsLGdmPW51bGwsaGY9ITE7XG5mdW5jdGlvbiBqZihhLGIpe3ZhciBjPWIud2luZG93PT09Yj9iLmRvY3VtZW50Ojk9PT1iLm5vZGVUeXBlP2I6Yi5vd25lckRvY3VtZW50O2lmKGhmfHxudWxsPT1lZnx8ZWYhPT10ZChjKSlyZXR1cm4gbnVsbDtjPWVmO1wic2VsZWN0aW9uU3RhcnRcImluIGMmJnlkKGMpP2M9e3N0YXJ0OmMuc2VsZWN0aW9uU3RhcnQsZW5kOmMuc2VsZWN0aW9uRW5kfTooYz0oYy5vd25lckRvY3VtZW50JiZjLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXd8fHdpbmRvdykuZ2V0U2VsZWN0aW9uKCksYz17YW5jaG9yTm9kZTpjLmFuY2hvck5vZGUsYW5jaG9yT2Zmc2V0OmMuYW5jaG9yT2Zmc2V0LGZvY3VzTm9kZTpjLmZvY3VzTm9kZSxmb2N1c09mZnNldDpjLmZvY3VzT2Zmc2V0fSk7cmV0dXJuIGdmJiZiZihnZixjKT9udWxsOihnZj1jLGE9Ry5nZXRQb29sZWQoZGYuc2VsZWN0LGZmLGEsYiksYS50eXBlPVwic2VsZWN0XCIsYS50YXJnZXQ9ZWYsWGQoYSksYSl9XG52YXIga2Y9e2V2ZW50VHlwZXM6ZGYsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkLGUsZil7ZT1mfHwoZC53aW5kb3c9PT1kP2QuZG9jdW1lbnQ6OT09PWQubm9kZVR5cGU/ZDpkLm93bmVyRG9jdW1lbnQpO2lmKCEoZj0hZSkpe2E6e2U9Y2MoZSk7Zj13YS5vblNlbGVjdDtmb3IodmFyIGc9MDtnPGYubGVuZ3RoO2crKylpZighZS5oYXMoZltnXSkpe2U9ITE7YnJlYWsgYX1lPSEwfWY9IWV9aWYoZilyZXR1cm4gbnVsbDtlPWI/UGQoYik6d2luZG93O3N3aXRjaChhKXtjYXNlIFwiZm9jdXNcIjppZih4ZShlKXx8XCJ0cnVlXCI9PT1lLmNvbnRlbnRFZGl0YWJsZSllZj1lLGZmPWIsZ2Y9bnVsbDticmVhaztjYXNlIFwiYmx1clwiOmdmPWZmPWVmPW51bGw7YnJlYWs7Y2FzZSBcIm1vdXNlZG93blwiOmhmPSEwO2JyZWFrO2Nhc2UgXCJjb250ZXh0bWVudVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcImRyYWdlbmRcIjpyZXR1cm4gaGY9ITEsamYoYyxkKTtjYXNlIFwic2VsZWN0aW9uY2hhbmdlXCI6aWYoY2YpYnJlYWs7XG5jYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOnJldHVybiBqZihjLGQpfXJldHVybiBudWxsfX0sbGY9Ry5leHRlbmQoe2FuaW1hdGlvbk5hbWU6bnVsbCxlbGFwc2VkVGltZTpudWxsLHBzZXVkb0VsZW1lbnQ6bnVsbH0pLG1mPUcuZXh0ZW5kKHtjbGlwYm9hcmREYXRhOmZ1bmN0aW9uKGEpe3JldHVyblwiY2xpcGJvYXJkRGF0YVwiaW4gYT9hLmNsaXBib2FyZERhdGE6d2luZG93LmNsaXBib2FyZERhdGF9fSksbmY9TmUuZXh0ZW5kKHtyZWxhdGVkVGFyZ2V0Om51bGx9KTtmdW5jdGlvbiBvZihhKXt2YXIgYj1hLmtleUNvZGU7XCJjaGFyQ29kZVwiaW4gYT8oYT1hLmNoYXJDb2RlLDA9PT1hJiYxMz09PWImJihhPTEzKSk6YT1iOzEwPT09YSYmKGE9MTMpO3JldHVybiAzMjw9YXx8MTM9PT1hP2E6MH1cbnZhciBwZj17RXNjOlwiRXNjYXBlXCIsU3BhY2ViYXI6XCIgXCIsTGVmdDpcIkFycm93TGVmdFwiLFVwOlwiQXJyb3dVcFwiLFJpZ2h0OlwiQXJyb3dSaWdodFwiLERvd246XCJBcnJvd0Rvd25cIixEZWw6XCJEZWxldGVcIixXaW46XCJPU1wiLE1lbnU6XCJDb250ZXh0TWVudVwiLEFwcHM6XCJDb250ZXh0TWVudVwiLFNjcm9sbDpcIlNjcm9sbExvY2tcIixNb3pQcmludGFibGVLZXk6XCJVbmlkZW50aWZpZWRcIn0scWY9ezg6XCJCYWNrc3BhY2VcIiw5OlwiVGFiXCIsMTI6XCJDbGVhclwiLDEzOlwiRW50ZXJcIiwxNjpcIlNoaWZ0XCIsMTc6XCJDb250cm9sXCIsMTg6XCJBbHRcIiwxOTpcIlBhdXNlXCIsMjA6XCJDYXBzTG9ja1wiLDI3OlwiRXNjYXBlXCIsMzI6XCIgXCIsMzM6XCJQYWdlVXBcIiwzNDpcIlBhZ2VEb3duXCIsMzU6XCJFbmRcIiwzNjpcIkhvbWVcIiwzNzpcIkFycm93TGVmdFwiLDM4OlwiQXJyb3dVcFwiLDM5OlwiQXJyb3dSaWdodFwiLDQwOlwiQXJyb3dEb3duXCIsNDU6XCJJbnNlcnRcIiw0NjpcIkRlbGV0ZVwiLDExMjpcIkYxXCIsMTEzOlwiRjJcIiwxMTQ6XCJGM1wiLDExNTpcIkY0XCIsXG4xMTY6XCJGNVwiLDExNzpcIkY2XCIsMTE4OlwiRjdcIiwxMTk6XCJGOFwiLDEyMDpcIkY5XCIsMTIxOlwiRjEwXCIsMTIyOlwiRjExXCIsMTIzOlwiRjEyXCIsMTQ0OlwiTnVtTG9ja1wiLDE0NTpcIlNjcm9sbExvY2tcIiwyMjQ6XCJNZXRhXCJ9LHJmPU5lLmV4dGVuZCh7a2V5OmZ1bmN0aW9uKGEpe2lmKGEua2V5KXt2YXIgYj1wZlthLmtleV18fGEua2V5O2lmKFwiVW5pZGVudGlmaWVkXCIhPT1iKXJldHVybiBifXJldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT8oYT1vZihhKSwxMz09PWE/XCJFbnRlclwiOlN0cmluZy5mcm9tQ2hhckNvZGUoYSkpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/cWZbYS5rZXlDb2RlXXx8XCJVbmlkZW50aWZpZWRcIjpcIlwifSxsb2NhdGlvbjpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxyZXBlYXQ6bnVsbCxsb2NhbGU6bnVsbCxnZXRNb2RpZmllclN0YXRlOlFlLGNoYXJDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PVxuYS50eXBlP29mKGEpOjB9LGtleUNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH0sd2hpY2g6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlP29mKGEpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9fSksc2Y9VmUuZXh0ZW5kKHtkYXRhVHJhbnNmZXI6bnVsbH0pLHRmPU5lLmV4dGVuZCh7dG91Y2hlczpudWxsLHRhcmdldFRvdWNoZXM6bnVsbCxjaGFuZ2VkVG91Y2hlczpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxnZXRNb2RpZmllclN0YXRlOlFlfSksdWY9Ry5leHRlbmQoe3Byb3BlcnR5TmFtZTpudWxsLGVsYXBzZWRUaW1lOm51bGwscHNldWRvRWxlbWVudDpudWxsfSksdmY9VmUuZXh0ZW5kKHtkZWx0YVg6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVhcImluIGE/YS5kZWx0YVg6XCJ3aGVlbERlbHRhWFwiaW5cbmE/LWEud2hlZWxEZWx0YVg6MH0sZGVsdGFZOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFZXCJpbiBhP2EuZGVsdGFZOlwid2hlZWxEZWx0YVlcImluIGE/LWEud2hlZWxEZWx0YVk6XCJ3aGVlbERlbHRhXCJpbiBhPy1hLndoZWVsRGVsdGE6MH0sZGVsdGFaOm51bGwsZGVsdGFNb2RlOm51bGx9KSx3Zj17ZXZlbnRUeXBlczpXYyxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPVljLmdldChhKTtpZighZSlyZXR1cm4gbnVsbDtzd2l0Y2goYSl7Y2FzZSBcImtleXByZXNzXCI6aWYoMD09PW9mKGMpKXJldHVybiBudWxsO2Nhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6YT1yZjticmVhaztjYXNlIFwiYmx1clwiOmNhc2UgXCJmb2N1c1wiOmE9bmY7YnJlYWs7Y2FzZSBcImNsaWNrXCI6aWYoMj09PWMuYnV0dG9uKXJldHVybiBudWxsO2Nhc2UgXCJhdXhjbGlja1wiOmNhc2UgXCJkYmxjbGlja1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwibW91c2Vtb3ZlXCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwibW91c2VvdXRcIjpjYXNlIFwibW91c2VvdmVyXCI6Y2FzZSBcImNvbnRleHRtZW51XCI6YT1cblZlO2JyZWFrO2Nhc2UgXCJkcmFnXCI6Y2FzZSBcImRyYWdlbmRcIjpjYXNlIFwiZHJhZ2VudGVyXCI6Y2FzZSBcImRyYWdleGl0XCI6Y2FzZSBcImRyYWdsZWF2ZVwiOmNhc2UgXCJkcmFnb3ZlclwiOmNhc2UgXCJkcmFnc3RhcnRcIjpjYXNlIFwiZHJvcFwiOmE9c2Y7YnJlYWs7Y2FzZSBcInRvdWNoY2FuY2VsXCI6Y2FzZSBcInRvdWNoZW5kXCI6Y2FzZSBcInRvdWNobW92ZVwiOmNhc2UgXCJ0b3VjaHN0YXJ0XCI6YT10ZjticmVhaztjYXNlIFhiOmNhc2UgWWI6Y2FzZSBaYjphPWxmO2JyZWFrO2Nhc2UgJGI6YT11ZjticmVhaztjYXNlIFwic2Nyb2xsXCI6YT1OZTticmVhaztjYXNlIFwid2hlZWxcIjphPXZmO2JyZWFrO2Nhc2UgXCJjb3B5XCI6Y2FzZSBcImN1dFwiOmNhc2UgXCJwYXN0ZVwiOmE9bWY7YnJlYWs7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcImxvc3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJwb2ludGVyY2FuY2VsXCI6Y2FzZSBcInBvaW50ZXJkb3duXCI6Y2FzZSBcInBvaW50ZXJtb3ZlXCI6Y2FzZSBcInBvaW50ZXJvdXRcIjpjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwicG9pbnRlcnVwXCI6YT1cbldlO2JyZWFrO2RlZmF1bHQ6YT1HfWI9YS5nZXRQb29sZWQoZSxiLGMsZCk7WGQoYik7cmV0dXJuIGJ9fTtpZihwYSl0aHJvdyBFcnJvcih1KDEwMSkpO3BhPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKFwiUmVzcG9uZGVyRXZlbnRQbHVnaW4gU2ltcGxlRXZlbnRQbHVnaW4gRW50ZXJMZWF2ZUV2ZW50UGx1Z2luIENoYW5nZUV2ZW50UGx1Z2luIFNlbGVjdEV2ZW50UGx1Z2luIEJlZm9yZUlucHV0RXZlbnRQbHVnaW5cIi5zcGxpdChcIiBcIikpO3JhKCk7dmFyIHhmPU5jO2xhPVFkO21hPXhmO25hPVBkO3hhKHtTaW1wbGVFdmVudFBsdWdpbjp3ZixFbnRlckxlYXZlRXZlbnRQbHVnaW46WWUsQ2hhbmdlRXZlbnRQbHVnaW46TWUsU2VsZWN0RXZlbnRQbHVnaW46a2YsQmVmb3JlSW5wdXRFdmVudFBsdWdpbjp2ZX0pO3ZhciB5Zj1bXSx6Zj0tMTtmdW5jdGlvbiBIKGEpezA+emZ8fChhLmN1cnJlbnQ9eWZbemZdLHlmW3pmXT1udWxsLHpmLS0pfVxuZnVuY3Rpb24gSShhLGIpe3pmKys7eWZbemZdPWEuY3VycmVudDthLmN1cnJlbnQ9Yn12YXIgQWY9e30sSj17Y3VycmVudDpBZn0sSz17Y3VycmVudDohMX0sQmY9QWY7ZnVuY3Rpb24gQ2YoYSxiKXt2YXIgYz1hLnR5cGUuY29udGV4dFR5cGVzO2lmKCFjKXJldHVybiBBZjt2YXIgZD1hLnN0YXRlTm9kZTtpZihkJiZkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9PT1iKXJldHVybiBkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0O3ZhciBlPXt9LGY7Zm9yKGYgaW4gYyllW2ZdPWJbZl07ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWIsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1lKTtyZXR1cm4gZX1mdW5jdGlvbiBMKGEpe2E9YS5jaGlsZENvbnRleHRUeXBlcztyZXR1cm4gbnVsbCE9PWEmJnZvaWQgMCE9PWF9XG5mdW5jdGlvbiBEZigpe0goSyk7SChKKX1mdW5jdGlvbiBFZihhLGIsYyl7aWYoSi5jdXJyZW50IT09QWYpdGhyb3cgRXJyb3IodSgxNjgpKTtJKEosYik7SShLLGMpfWZ1bmN0aW9uIEZmKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTthPWIuY2hpbGRDb250ZXh0VHlwZXM7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGQuZ2V0Q2hpbGRDb250ZXh0KXJldHVybiBjO2Q9ZC5nZXRDaGlsZENvbnRleHQoKTtmb3IodmFyIGUgaW4gZClpZighKGUgaW4gYSkpdGhyb3cgRXJyb3IodSgxMDgscGIoYil8fFwiVW5rbm93blwiLGUpKTtyZXR1cm4gbih7fSxjLHt9LGQpfWZ1bmN0aW9uIEdmKGEpe2E9KGE9YS5zdGF0ZU5vZGUpJiZhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0fHxBZjtCZj1KLmN1cnJlbnQ7SShKLGEpO0koSyxLLmN1cnJlbnQpO3JldHVybiEwfVxuZnVuY3Rpb24gSGYoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2lmKCFkKXRocm93IEVycm9yKHUoMTY5KSk7Yz8oYT1GZihhLGIsQmYpLGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ9YSxIKEspLEgoSiksSShKLGEpKTpIKEspO0koSyxjKX1cbnZhciBJZj1yLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSxKZj1yLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2ssS2Y9ci51bnN0YWJsZV9jYW5jZWxDYWxsYmFjayxMZj1yLnVuc3RhYmxlX3JlcXVlc3RQYWludCxNZj1yLnVuc3RhYmxlX25vdyxOZj1yLnVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsLE9mPXIudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHksUGY9ci51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSxRZj1yLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5LFJmPXIudW5zdGFibGVfTG93UHJpb3JpdHksU2Y9ci51bnN0YWJsZV9JZGxlUHJpb3JpdHksVGY9e30sVWY9ci51bnN0YWJsZV9zaG91bGRZaWVsZCxWZj12b2lkIDAhPT1MZj9MZjpmdW5jdGlvbigpe30sV2Y9bnVsbCxYZj1udWxsLFlmPSExLFpmPU1mKCksJGY9MUU0PlpmP01mOmZ1bmN0aW9uKCl7cmV0dXJuIE1mKCktWmZ9O1xuZnVuY3Rpb24gYWcoKXtzd2l0Y2goTmYoKSl7Y2FzZSBPZjpyZXR1cm4gOTk7Y2FzZSBQZjpyZXR1cm4gOTg7Y2FzZSBRZjpyZXR1cm4gOTc7Y2FzZSBSZjpyZXR1cm4gOTY7Y2FzZSBTZjpyZXR1cm4gOTU7ZGVmYXVsdDp0aHJvdyBFcnJvcih1KDMzMikpO319ZnVuY3Rpb24gYmcoYSl7c3dpdGNoKGEpe2Nhc2UgOTk6cmV0dXJuIE9mO2Nhc2UgOTg6cmV0dXJuIFBmO2Nhc2UgOTc6cmV0dXJuIFFmO2Nhc2UgOTY6cmV0dXJuIFJmO2Nhc2UgOTU6cmV0dXJuIFNmO2RlZmF1bHQ6dGhyb3cgRXJyb3IodSgzMzIpKTt9fWZ1bmN0aW9uIGNnKGEsYil7YT1iZyhhKTtyZXR1cm4gSWYoYSxiKX1mdW5jdGlvbiBkZyhhLGIsYyl7YT1iZyhhKTtyZXR1cm4gSmYoYSxiLGMpfWZ1bmN0aW9uIGVnKGEpe251bGw9PT1XZj8oV2Y9W2FdLFhmPUpmKE9mLGZnKSk6V2YucHVzaChhKTtyZXR1cm4gVGZ9ZnVuY3Rpb24gZ2coKXtpZihudWxsIT09WGYpe3ZhciBhPVhmO1hmPW51bGw7S2YoYSl9ZmcoKX1cbmZ1bmN0aW9uIGZnKCl7aWYoIVlmJiZudWxsIT09V2Ype1lmPSEwO3ZhciBhPTA7dHJ5e3ZhciBiPVdmO2NnKDk5LGZ1bmN0aW9uKCl7Zm9yKDthPGIubGVuZ3RoO2ErKyl7dmFyIGM9YlthXTtkbyBjPWMoITApO3doaWxlKG51bGwhPT1jKX19KTtXZj1udWxsfWNhdGNoKGMpe3Rocm93IG51bGwhPT1XZiYmKFdmPVdmLnNsaWNlKGErMSkpLEpmKE9mLGdnKSxjO31maW5hbGx5e1lmPSExfX19ZnVuY3Rpb24gaGcoYSxiLGMpe2MvPTEwO3JldHVybiAxMDczNzQxODIxLSgoKDEwNzM3NDE4MjEtYStiLzEwKS9jfDApKzEpKmN9ZnVuY3Rpb24gaWcoYSxiKXtpZihhJiZhLmRlZmF1bHRQcm9wcyl7Yj1uKHt9LGIpO2E9YS5kZWZhdWx0UHJvcHM7Zm9yKHZhciBjIGluIGEpdm9pZCAwPT09YltjXSYmKGJbY109YVtjXSl9cmV0dXJuIGJ9dmFyIGpnPXtjdXJyZW50Om51bGx9LGtnPW51bGwsbGc9bnVsbCxtZz1udWxsO2Z1bmN0aW9uIG5nKCl7bWc9bGc9a2c9bnVsbH1cbmZ1bmN0aW9uIG9nKGEpe3ZhciBiPWpnLmN1cnJlbnQ7SChqZyk7YS50eXBlLl9jb250ZXh0Ll9jdXJyZW50VmFsdWU9Yn1mdW5jdGlvbiBwZyhhLGIpe2Zvcig7bnVsbCE9PWE7KXt2YXIgYz1hLmFsdGVybmF0ZTtpZihhLmNoaWxkRXhwaXJhdGlvblRpbWU8YilhLmNoaWxkRXhwaXJhdGlvblRpbWU9YixudWxsIT09YyYmYy5jaGlsZEV4cGlyYXRpb25UaW1lPGImJihjLmNoaWxkRXhwaXJhdGlvblRpbWU9Yik7ZWxzZSBpZihudWxsIT09YyYmYy5jaGlsZEV4cGlyYXRpb25UaW1lPGIpYy5jaGlsZEV4cGlyYXRpb25UaW1lPWI7ZWxzZSBicmVhazthPWEucmV0dXJufX1mdW5jdGlvbiBxZyhhLGIpe2tnPWE7bWc9bGc9bnVsbDthPWEuZGVwZW5kZW5jaWVzO251bGwhPT1hJiZudWxsIT09YS5maXJzdENvbnRleHQmJihhLmV4cGlyYXRpb25UaW1lPj1iJiYocmc9ITApLGEuZmlyc3RDb250ZXh0PW51bGwpfVxuZnVuY3Rpb24gc2coYSxiKXtpZihtZyE9PWEmJiExIT09YiYmMCE9PWIpe2lmKFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MTA3Mzc0MTgyMz09PWIpbWc9YSxiPTEwNzM3NDE4MjM7Yj17Y29udGV4dDphLG9ic2VydmVkQml0czpiLG5leHQ6bnVsbH07aWYobnVsbD09PWxnKXtpZihudWxsPT09a2cpdGhyb3cgRXJyb3IodSgzMDgpKTtsZz1iO2tnLmRlcGVuZGVuY2llcz17ZXhwaXJhdGlvblRpbWU6MCxmaXJzdENvbnRleHQ6YixyZXNwb25kZXJzOm51bGx9fWVsc2UgbGc9bGcubmV4dD1ifXJldHVybiBhLl9jdXJyZW50VmFsdWV9dmFyIHRnPSExO2Z1bmN0aW9uIHVnKGEpe2EudXBkYXRlUXVldWU9e2Jhc2VTdGF0ZTphLm1lbW9pemVkU3RhdGUsYmFzZVF1ZXVlOm51bGwsc2hhcmVkOntwZW5kaW5nOm51bGx9LGVmZmVjdHM6bnVsbH19XG5mdW5jdGlvbiB2ZyhhLGIpe2E9YS51cGRhdGVRdWV1ZTtiLnVwZGF0ZVF1ZXVlPT09YSYmKGIudXBkYXRlUXVldWU9e2Jhc2VTdGF0ZTphLmJhc2VTdGF0ZSxiYXNlUXVldWU6YS5iYXNlUXVldWUsc2hhcmVkOmEuc2hhcmVkLGVmZmVjdHM6YS5lZmZlY3RzfSl9ZnVuY3Rpb24gd2coYSxiKXthPXtleHBpcmF0aW9uVGltZTphLHN1c3BlbnNlQ29uZmlnOmIsdGFnOjAscGF5bG9hZDpudWxsLGNhbGxiYWNrOm51bGwsbmV4dDpudWxsfTtyZXR1cm4gYS5uZXh0PWF9ZnVuY3Rpb24geGcoYSxiKXthPWEudXBkYXRlUXVldWU7aWYobnVsbCE9PWEpe2E9YS5zaGFyZWQ7dmFyIGM9YS5wZW5kaW5nO251bGw9PT1jP2IubmV4dD1iOihiLm5leHQ9Yy5uZXh0LGMubmV4dD1iKTthLnBlbmRpbmc9Yn19XG5mdW5jdGlvbiB5ZyhhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiZ2ZyhjLGEpO2E9YS51cGRhdGVRdWV1ZTtjPWEuYmFzZVF1ZXVlO251bGw9PT1jPyhhLmJhc2VRdWV1ZT1iLm5leHQ9YixiLm5leHQ9Yik6KGIubmV4dD1jLm5leHQsYy5uZXh0PWIpfVxuZnVuY3Rpb24gemcoYSxiLGMsZCl7dmFyIGU9YS51cGRhdGVRdWV1ZTt0Zz0hMTt2YXIgZj1lLmJhc2VRdWV1ZSxnPWUuc2hhcmVkLnBlbmRpbmc7aWYobnVsbCE9PWcpe2lmKG51bGwhPT1mKXt2YXIgaD1mLm5leHQ7Zi5uZXh0PWcubmV4dDtnLm5leHQ9aH1mPWc7ZS5zaGFyZWQucGVuZGluZz1udWxsO2g9YS5hbHRlcm5hdGU7bnVsbCE9PWgmJihoPWgudXBkYXRlUXVldWUsbnVsbCE9PWgmJihoLmJhc2VRdWV1ZT1nKSl9aWYobnVsbCE9PWYpe2g9Zi5uZXh0O3ZhciBrPWUuYmFzZVN0YXRlLGw9MCxtPW51bGwscD1udWxsLHg9bnVsbDtpZihudWxsIT09aCl7dmFyIHo9aDtkb3tnPXouZXhwaXJhdGlvblRpbWU7aWYoZzxkKXt2YXIgY2E9e2V4cGlyYXRpb25UaW1lOnouZXhwaXJhdGlvblRpbWUsc3VzcGVuc2VDb25maWc6ei5zdXNwZW5zZUNvbmZpZyx0YWc6ei50YWcscGF5bG9hZDp6LnBheWxvYWQsY2FsbGJhY2s6ei5jYWxsYmFjayxuZXh0Om51bGx9O251bGw9PT14PyhwPXg9XG5jYSxtPWspOng9eC5uZXh0PWNhO2c+bCYmKGw9Zyl9ZWxzZXtudWxsIT09eCYmKHg9eC5uZXh0PXtleHBpcmF0aW9uVGltZToxMDczNzQxODIzLHN1c3BlbnNlQ29uZmlnOnouc3VzcGVuc2VDb25maWcsdGFnOnoudGFnLHBheWxvYWQ6ei5wYXlsb2FkLGNhbGxiYWNrOnouY2FsbGJhY2ssbmV4dDpudWxsfSk7QWcoZyx6LnN1c3BlbnNlQ29uZmlnKTthOnt2YXIgRD1hLHQ9ejtnPWI7Y2E9Yztzd2l0Y2godC50YWcpe2Nhc2UgMTpEPXQucGF5bG9hZDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgRCl7az1ELmNhbGwoY2EsayxnKTticmVhayBhfWs9RDticmVhayBhO2Nhc2UgMzpELmVmZmVjdFRhZz1ELmVmZmVjdFRhZyYtNDA5N3w2NDtjYXNlIDA6RD10LnBheWxvYWQ7Zz1cImZ1bmN0aW9uXCI9PT10eXBlb2YgRD9ELmNhbGwoY2EsayxnKTpEO2lmKG51bGw9PT1nfHx2b2lkIDA9PT1nKWJyZWFrIGE7az1uKHt9LGssZyk7YnJlYWsgYTtjYXNlIDI6dGc9ITB9fW51bGwhPT16LmNhbGxiYWNrJiZcbihhLmVmZmVjdFRhZ3w9MzIsZz1lLmVmZmVjdHMsbnVsbD09PWc/ZS5lZmZlY3RzPVt6XTpnLnB1c2goeikpfXo9ei5uZXh0O2lmKG51bGw9PT16fHx6PT09aClpZihnPWUuc2hhcmVkLnBlbmRpbmcsbnVsbD09PWcpYnJlYWs7ZWxzZSB6PWYubmV4dD1nLm5leHQsZy5uZXh0PWgsZS5iYXNlUXVldWU9Zj1nLGUuc2hhcmVkLnBlbmRpbmc9bnVsbH13aGlsZSgxKX1udWxsPT09eD9tPWs6eC5uZXh0PXA7ZS5iYXNlU3RhdGU9bTtlLmJhc2VRdWV1ZT14O0JnKGwpO2EuZXhwaXJhdGlvblRpbWU9bDthLm1lbW9pemVkU3RhdGU9a319XG5mdW5jdGlvbiBDZyhhLGIsYyl7YT1iLmVmZmVjdHM7Yi5lZmZlY3RzPW51bGw7aWYobnVsbCE9PWEpZm9yKGI9MDtiPGEubGVuZ3RoO2IrKyl7dmFyIGQ9YVtiXSxlPWQuY2FsbGJhY2s7aWYobnVsbCE9PWUpe2QuY2FsbGJhY2s9bnVsbDtkPWU7ZT1jO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkKXRocm93IEVycm9yKHUoMTkxLGQpKTtkLmNhbGwoZSl9fX12YXIgRGc9V2EuUmVhY3RDdXJyZW50QmF0Y2hDb25maWcsRWc9KG5ldyBhYS5Db21wb25lbnQpLnJlZnM7ZnVuY3Rpb24gRmcoYSxiLGMsZCl7Yj1hLm1lbW9pemVkU3RhdGU7Yz1jKGQsYik7Yz1udWxsPT09Y3x8dm9pZCAwPT09Yz9iOm4oe30sYixjKTthLm1lbW9pemVkU3RhdGU9YzswPT09YS5leHBpcmF0aW9uVGltZSYmKGEudXBkYXRlUXVldWUuYmFzZVN0YXRlPWMpfVxudmFyIEpnPXtpc01vdW50ZWQ6ZnVuY3Rpb24oYSl7cmV0dXJuKGE9YS5fcmVhY3RJbnRlcm5hbEZpYmVyKT9kYyhhKT09PWE6ITF9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGQ9R2coKSxlPURnLnN1c3BlbnNlO2Q9SGcoZCxhLGUpO2U9d2coZCxlKTtlLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGUuY2FsbGJhY2s9Yyk7eGcoYSxlKTtJZyhhLGQpfSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgZD1HZygpLGU9RGcuc3VzcGVuc2U7ZD1IZyhkLGEsZSk7ZT13ZyhkLGUpO2UudGFnPTE7ZS5wYXlsb2FkPWI7dm9pZCAwIT09YyYmbnVsbCE9PWMmJihlLmNhbGxiYWNrPWMpO3hnKGEsZSk7SWcoYSxkKX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKGEsYil7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGM9R2coKSxkPURnLnN1c3BlbnNlO1xuYz1IZyhjLGEsZCk7ZD13ZyhjLGQpO2QudGFnPTI7dm9pZCAwIT09YiYmbnVsbCE9PWImJihkLmNhbGxiYWNrPWIpO3hnKGEsZCk7SWcoYSxjKX19O2Z1bmN0aW9uIEtnKGEsYixjLGQsZSxmLGcpe2E9YS5zdGF0ZU5vZGU7cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGEuc2hvdWxkQ29tcG9uZW50VXBkYXRlP2Euc2hvdWxkQ29tcG9uZW50VXBkYXRlKGQsZixnKTpiLnByb3RvdHlwZSYmYi5wcm90b3R5cGUuaXNQdXJlUmVhY3RDb21wb25lbnQ/IWJmKGMsZCl8fCFiZihlLGYpOiEwfVxuZnVuY3Rpb24gTGcoYSxiLGMpe3ZhciBkPSExLGU9QWY7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2Y9c2coZik6KGU9TChiKT9CZjpKLmN1cnJlbnQsZD1iLmNvbnRleHRUeXBlcyxmPShkPW51bGwhPT1kJiZ2b2lkIDAhPT1kKT9DZihhLGUpOkFmKTtiPW5ldyBiKGMsZik7YS5tZW1vaXplZFN0YXRlPW51bGwhPT1iLnN0YXRlJiZ2b2lkIDAhPT1iLnN0YXRlP2Iuc3RhdGU6bnVsbDtiLnVwZGF0ZXI9Smc7YS5zdGF0ZU5vZGU9YjtiLl9yZWFjdEludGVybmFsRmliZXI9YTtkJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9ZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWYpO3JldHVybiBifVxuZnVuY3Rpb24gTWcoYSxiLGMsZCl7YT1iLnN0YXRlO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7Yi5zdGF0ZSE9PWEmJkpnLmVucXVldWVSZXBsYWNlU3RhdGUoYixiLnN0YXRlLG51bGwpfVxuZnVuY3Rpb24gTmcoYSxiLGMsZCl7dmFyIGU9YS5zdGF0ZU5vZGU7ZS5wcm9wcz1jO2Uuc3RhdGU9YS5tZW1vaXplZFN0YXRlO2UucmVmcz1FZzt1ZyhhKTt2YXIgZj1iLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY/ZS5jb250ZXh0PXNnKGYpOihmPUwoYik/QmY6Si5jdXJyZW50LGUuY29udGV4dD1DZihhLGYpKTt6ZyhhLGMsZSxkKTtlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtmPWIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBmJiYoRmcoYSxiLGYsYyksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wc3x8XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudHx8XG4oYj1lLnN0YXRlLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudCYmZS5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQoKSxiIT09ZS5zdGF0ZSYmSmcuZW5xdWV1ZVJlcGxhY2VTdGF0ZShlLGUuc3RhdGUsbnVsbCksemcoYSxjLGUsZCksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudERpZE1vdW50JiYoYS5lZmZlY3RUYWd8PTQpfXZhciBPZz1BcnJheS5pc0FycmF5O1xuZnVuY3Rpb24gUGcoYSxiLGMpe2E9Yy5yZWY7aWYobnVsbCE9PWEmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhJiZcIm9iamVjdFwiIT09dHlwZW9mIGEpe2lmKGMuX293bmVyKXtjPWMuX293bmVyO2lmKGMpe2lmKDEhPT1jLnRhZyl0aHJvdyBFcnJvcih1KDMwOSkpO3ZhciBkPWMuc3RhdGVOb2RlfWlmKCFkKXRocm93IEVycm9yKHUoMTQ3LGEpKTt2YXIgZT1cIlwiK2E7aWYobnVsbCE9PWImJm51bGwhPT1iLnJlZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGIucmVmJiZiLnJlZi5fc3RyaW5nUmVmPT09ZSlyZXR1cm4gYi5yZWY7Yj1mdW5jdGlvbihhKXt2YXIgYj1kLnJlZnM7Yj09PUVnJiYoYj1kLnJlZnM9e30pO251bGw9PT1hP2RlbGV0ZSBiW2VdOmJbZV09YX07Yi5fc3RyaW5nUmVmPWU7cmV0dXJuIGJ9aWYoXCJzdHJpbmdcIiE9PXR5cGVvZiBhKXRocm93IEVycm9yKHUoMjg0KSk7aWYoIWMuX293bmVyKXRocm93IEVycm9yKHUoMjkwLGEpKTt9cmV0dXJuIGF9XG5mdW5jdGlvbiBRZyhhLGIpe2lmKFwidGV4dGFyZWFcIiE9PWEudHlwZSl0aHJvdyBFcnJvcih1KDMxLFwiW29iamVjdCBPYmplY3RdXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYik/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhiKS5qb2luKFwiLCBcIikrXCJ9XCI6YixcIlwiKSk7fVxuZnVuY3Rpb24gUmcoYSl7ZnVuY3Rpb24gYihiLGMpe2lmKGEpe3ZhciBkPWIubGFzdEVmZmVjdDtudWxsIT09ZD8oZC5uZXh0RWZmZWN0PWMsYi5sYXN0RWZmZWN0PWMpOmIuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PWM7Yy5uZXh0RWZmZWN0PW51bGw7Yy5lZmZlY3RUYWc9OH19ZnVuY3Rpb24gYyhjLGQpe2lmKCFhKXJldHVybiBudWxsO2Zvcig7bnVsbCE9PWQ7KWIoYyxkKSxkPWQuc2libGluZztyZXR1cm4gbnVsbH1mdW5jdGlvbiBkKGEsYil7Zm9yKGE9bmV3IE1hcDtudWxsIT09YjspbnVsbCE9PWIua2V5P2Euc2V0KGIua2V5LGIpOmEuc2V0KGIuaW5kZXgsYiksYj1iLnNpYmxpbmc7cmV0dXJuIGF9ZnVuY3Rpb24gZShhLGIpe2E9U2coYSxiKTthLmluZGV4PTA7YS5zaWJsaW5nPW51bGw7cmV0dXJuIGF9ZnVuY3Rpb24gZihiLGMsZCl7Yi5pbmRleD1kO2lmKCFhKXJldHVybiBjO2Q9Yi5hbHRlcm5hdGU7aWYobnVsbCE9PWQpcmV0dXJuIGQ9ZC5pbmRleCxkPGM/KGIuZWZmZWN0VGFnPVxuMixjKTpkO2IuZWZmZWN0VGFnPTI7cmV0dXJuIGN9ZnVuY3Rpb24gZyhiKXthJiZudWxsPT09Yi5hbHRlcm5hdGUmJihiLmVmZmVjdFRhZz0yKTtyZXR1cm4gYn1mdW5jdGlvbiBoKGEsYixjLGQpe2lmKG51bGw9PT1ifHw2IT09Yi50YWcpcmV0dXJuIGI9VGcoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gayhhLGIsYyxkKXtpZihudWxsIT09YiYmYi5lbGVtZW50VHlwZT09PWMudHlwZSlyZXR1cm4gZD1lKGIsYy5wcm9wcyksZC5yZWY9UGcoYSxiLGMpLGQucmV0dXJuPWEsZDtkPVVnKGMudHlwZSxjLmtleSxjLnByb3BzLG51bGwsYS5tb2RlLGQpO2QucmVmPVBnKGEsYixjKTtkLnJldHVybj1hO3JldHVybiBkfWZ1bmN0aW9uIGwoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDQhPT1iLnRhZ3x8Yi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyE9PWMuY29udGFpbmVySW5mb3x8Yi5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb24hPT1cbmMuaW1wbGVtZW50YXRpb24pcmV0dXJuIGI9VmcoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMuY2hpbGRyZW58fFtdKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIG0oYSxiLGMsZCxmKXtpZihudWxsPT09Ynx8NyE9PWIudGFnKXJldHVybiBiPVdnKGMsYS5tb2RlLGQsZiksYi5yZXR1cm49YSxiO2I9ZShiLGMpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gcChhLGIsYyl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBifHxcIm51bWJlclwiPT09dHlwZW9mIGIpcmV0dXJuIGI9VGcoXCJcIitiLGEubW9kZSxjKSxiLnJldHVybj1hLGI7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBiJiZudWxsIT09Yil7c3dpdGNoKGIuJCR0eXBlb2Ype2Nhc2UgWmE6cmV0dXJuIGM9VWcoYi50eXBlLGIua2V5LGIucHJvcHMsbnVsbCxhLm1vZGUsYyksYy5yZWY9UGcoYSxudWxsLGIpLGMucmV0dXJuPWEsYztjYXNlICRhOnJldHVybiBiPVZnKGIsYS5tb2RlLGMpLGIucmV0dXJuPWEsYn1pZihPZyhiKXx8XG5uYihiKSlyZXR1cm4gYj1XZyhiLGEubW9kZSxjLG51bGwpLGIucmV0dXJuPWEsYjtRZyhhLGIpfXJldHVybiBudWxsfWZ1bmN0aW9uIHgoYSxiLGMsZCl7dmFyIGU9bnVsbCE9PWI/Yi5rZXk6bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGN8fFwibnVtYmVyXCI9PT10eXBlb2YgYylyZXR1cm4gbnVsbCE9PWU/bnVsbDpoKGEsYixcIlwiK2MsZCk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBjJiZudWxsIT09Yyl7c3dpdGNoKGMuJCR0eXBlb2Ype2Nhc2UgWmE6cmV0dXJuIGMua2V5PT09ZT9jLnR5cGU9PT1hYj9tKGEsYixjLnByb3BzLmNoaWxkcmVuLGQsZSk6ayhhLGIsYyxkKTpudWxsO2Nhc2UgJGE6cmV0dXJuIGMua2V5PT09ZT9sKGEsYixjLGQpOm51bGx9aWYoT2coYyl8fG5iKGMpKXJldHVybiBudWxsIT09ZT9udWxsOm0oYSxiLGMsZCxudWxsKTtRZyhhLGMpfXJldHVybiBudWxsfWZ1bmN0aW9uIHooYSxiLGMsZCxlKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGR8fFwibnVtYmVyXCI9PT10eXBlb2YgZClyZXR1cm4gYT1cbmEuZ2V0KGMpfHxudWxsLGgoYixhLFwiXCIrZCxlKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGQmJm51bGwhPT1kKXtzd2l0Y2goZC4kJHR5cGVvZil7Y2FzZSBaYTpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsZC50eXBlPT09YWI/bShiLGEsZC5wcm9wcy5jaGlsZHJlbixlLGQua2V5KTprKGIsYSxkLGUpO2Nhc2UgJGE6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGwoYixhLGQsZSl9aWYoT2coZCl8fG5iKGQpKXJldHVybiBhPWEuZ2V0KGMpfHxudWxsLG0oYixhLGQsZSxudWxsKTtRZyhiLGQpfXJldHVybiBudWxsfWZ1bmN0aW9uIGNhKGUsZyxoLGspe2Zvcih2YXIgbD1udWxsLHQ9bnVsbCxtPWcseT1nPTAsQT1udWxsO251bGwhPT1tJiZ5PGgubGVuZ3RoO3krKyl7bS5pbmRleD55PyhBPW0sbT1udWxsKTpBPW0uc2libGluZzt2YXIgcT14KGUsbSxoW3ldLGspO2lmKG51bGw9PT1xKXtudWxsPT09bSYmKG09QSk7YnJlYWt9YSYmXG5tJiZudWxsPT09cS5hbHRlcm5hdGUmJmIoZSxtKTtnPWYocSxnLHkpO251bGw9PT10P2w9cTp0LnNpYmxpbmc9cTt0PXE7bT1BfWlmKHk9PT1oLmxlbmd0aClyZXR1cm4gYyhlLG0pLGw7aWYobnVsbD09PW0pe2Zvcig7eTxoLmxlbmd0aDt5KyspbT1wKGUsaFt5XSxrKSxudWxsIT09bSYmKGc9ZihtLGcseSksbnVsbD09PXQ/bD1tOnQuc2libGluZz1tLHQ9bSk7cmV0dXJuIGx9Zm9yKG09ZChlLG0pO3k8aC5sZW5ndGg7eSsrKUE9eihtLGUseSxoW3ldLGspLG51bGwhPT1BJiYoYSYmbnVsbCE9PUEuYWx0ZXJuYXRlJiZtLmRlbGV0ZShudWxsPT09QS5rZXk/eTpBLmtleSksZz1mKEEsZyx5KSxudWxsPT09dD9sPUE6dC5zaWJsaW5nPUEsdD1BKTthJiZtLmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBsfWZ1bmN0aW9uIEQoZSxnLGgsbCl7dmFyIGs9bmIoaCk7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGspdGhyb3cgRXJyb3IodSgxNTApKTtoPWsuY2FsbChoKTtcbmlmKG51bGw9PWgpdGhyb3cgRXJyb3IodSgxNTEpKTtmb3IodmFyIG09az1udWxsLHQ9Zyx5PWc9MCxBPW51bGwscT1oLm5leHQoKTtudWxsIT09dCYmIXEuZG9uZTt5KysscT1oLm5leHQoKSl7dC5pbmRleD55PyhBPXQsdD1udWxsKTpBPXQuc2libGluZzt2YXIgRD14KGUsdCxxLnZhbHVlLGwpO2lmKG51bGw9PT1EKXtudWxsPT09dCYmKHQ9QSk7YnJlYWt9YSYmdCYmbnVsbD09PUQuYWx0ZXJuYXRlJiZiKGUsdCk7Zz1mKEQsZyx5KTtudWxsPT09bT9rPUQ6bS5zaWJsaW5nPUQ7bT1EO3Q9QX1pZihxLmRvbmUpcmV0dXJuIGMoZSx0KSxrO2lmKG51bGw9PT10KXtmb3IoOyFxLmRvbmU7eSsrLHE9aC5uZXh0KCkpcT1wKGUscS52YWx1ZSxsKSxudWxsIT09cSYmKGc9ZihxLGcseSksbnVsbD09PW0/az1xOm0uc2libGluZz1xLG09cSk7cmV0dXJuIGt9Zm9yKHQ9ZChlLHQpOyFxLmRvbmU7eSsrLHE9aC5uZXh0KCkpcT16KHQsZSx5LHEudmFsdWUsbCksbnVsbCE9PXEmJihhJiZudWxsIT09XG5xLmFsdGVybmF0ZSYmdC5kZWxldGUobnVsbD09PXEua2V5P3k6cS5rZXkpLGc9ZihxLGcseSksbnVsbD09PW0/az1xOm0uc2libGluZz1xLG09cSk7YSYmdC5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4ga31yZXR1cm4gZnVuY3Rpb24oYSxkLGYsaCl7dmFyIGs9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZiYmZi50eXBlPT09YWImJm51bGw9PT1mLmtleTtrJiYoZj1mLnByb3BzLmNoaWxkcmVuKTt2YXIgbD1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mO2lmKGwpc3dpdGNoKGYuJCR0eXBlb2Ype2Nhc2UgWmE6YTp7bD1mLmtleTtmb3Ioaz1kO251bGwhPT1rOyl7aWYoay5rZXk9PT1sKXtzd2l0Y2goay50YWcpe2Nhc2UgNzppZihmLnR5cGU9PT1hYil7YyhhLGsuc2libGluZyk7ZD1lKGssZi5wcm9wcy5jaGlsZHJlbik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1icmVhaztkZWZhdWx0OmlmKGsuZWxlbWVudFR5cGU9PT1mLnR5cGUpe2MoYSxcbmsuc2libGluZyk7ZD1lKGssZi5wcm9wcyk7ZC5yZWY9UGcoYSxrLGYpO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9fWMoYSxrKTticmVha31lbHNlIGIoYSxrKTtrPWsuc2libGluZ31mLnR5cGU9PT1hYj8oZD1XZyhmLnByb3BzLmNoaWxkcmVuLGEubW9kZSxoLGYua2V5KSxkLnJldHVybj1hLGE9ZCk6KGg9VWcoZi50eXBlLGYua2V5LGYucHJvcHMsbnVsbCxhLm1vZGUsaCksaC5yZWY9UGcoYSxkLGYpLGgucmV0dXJuPWEsYT1oKX1yZXR1cm4gZyhhKTtjYXNlICRhOmE6e2ZvcihrPWYua2V5O251bGwhPT1kOyl7aWYoZC5rZXk9PT1rKWlmKDQ9PT1kLnRhZyYmZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbz09PWYuY29udGFpbmVySW5mbyYmZC5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb249PT1mLmltcGxlbWVudGF0aW9uKXtjKGEsZC5zaWJsaW5nKTtkPWUoZCxmLmNoaWxkcmVufHxbXSk7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxkKTticmVha31lbHNlIGIoYSxkKTtkPVxuZC5zaWJsaW5nfWQ9VmcoZixhLm1vZGUsaCk7ZC5yZXR1cm49YTthPWR9cmV0dXJuIGcoYSl9aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBmfHxcIm51bWJlclwiPT09dHlwZW9mIGYpcmV0dXJuIGY9XCJcIitmLG51bGwhPT1kJiY2PT09ZC50YWc/KGMoYSxkLnNpYmxpbmcpLGQ9ZShkLGYpLGQucmV0dXJuPWEsYT1kKTooYyhhLGQpLGQ9VGcoZixhLm1vZGUsaCksZC5yZXR1cm49YSxhPWQpLGcoYSk7aWYoT2coZikpcmV0dXJuIGNhKGEsZCxmLGgpO2lmKG5iKGYpKXJldHVybiBEKGEsZCxmLGgpO2wmJlFnKGEsZik7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBmJiYhaylzd2l0Y2goYS50YWcpe2Nhc2UgMTpjYXNlIDA6dGhyb3cgYT1hLnR5cGUsRXJyb3IodSgxNTIsYS5kaXNwbGF5TmFtZXx8YS5uYW1lfHxcIkNvbXBvbmVudFwiKSk7fXJldHVybiBjKGEsZCl9fXZhciBYZz1SZyghMCksWWc9UmcoITEpLFpnPXt9LCRnPXtjdXJyZW50OlpnfSxhaD17Y3VycmVudDpaZ30sYmg9e2N1cnJlbnQ6Wmd9O1xuZnVuY3Rpb24gY2goYSl7aWYoYT09PVpnKXRocm93IEVycm9yKHUoMTc0KSk7cmV0dXJuIGF9ZnVuY3Rpb24gZGgoYSxiKXtJKGJoLGIpO0koYWgsYSk7SSgkZyxaZyk7YT1iLm5vZGVUeXBlO3N3aXRjaChhKXtjYXNlIDk6Y2FzZSAxMTpiPShiPWIuZG9jdW1lbnRFbGVtZW50KT9iLm5hbWVzcGFjZVVSSTpPYihudWxsLFwiXCIpO2JyZWFrO2RlZmF1bHQ6YT04PT09YT9iLnBhcmVudE5vZGU6YixiPWEubmFtZXNwYWNlVVJJfHxudWxsLGE9YS50YWdOYW1lLGI9T2IoYixhKX1IKCRnKTtJKCRnLGIpfWZ1bmN0aW9uIGVoKCl7SCgkZyk7SChhaCk7SChiaCl9ZnVuY3Rpb24gZmgoYSl7Y2goYmguY3VycmVudCk7dmFyIGI9Y2goJGcuY3VycmVudCk7dmFyIGM9T2IoYixhLnR5cGUpO2IhPT1jJiYoSShhaCxhKSxJKCRnLGMpKX1mdW5jdGlvbiBnaChhKXthaC5jdXJyZW50PT09YSYmKEgoJGcpLEgoYWgpKX12YXIgTT17Y3VycmVudDowfTtcbmZ1bmN0aW9uIGhoKGEpe2Zvcih2YXIgYj1hO251bGwhPT1iOyl7aWYoMTM9PT1iLnRhZyl7dmFyIGM9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1jJiYoYz1jLmRlaHlkcmF0ZWQsbnVsbD09PWN8fGMuZGF0YT09PUJkfHxjLmRhdGE9PT1DZCkpcmV0dXJuIGJ9ZWxzZSBpZigxOT09PWIudGFnJiZ2b2lkIDAhPT1iLm1lbW9pemVkUHJvcHMucmV2ZWFsT3JkZXIpe2lmKDAhPT0oYi5lZmZlY3RUYWcmNjQpKXJldHVybiBifWVsc2UgaWYobnVsbCE9PWIuY2hpbGQpe2IuY2hpbGQucmV0dXJuPWI7Yj1iLmNoaWxkO2NvbnRpbnVlfWlmKGI9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWIuc2libGluZzspe2lmKG51bGw9PT1iLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybiBudWxsO2I9Yi5yZXR1cm59Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ31yZXR1cm4gbnVsbH1mdW5jdGlvbiBpaChhLGIpe3JldHVybntyZXNwb25kZXI6YSxwcm9wczpifX1cbnZhciBqaD1XYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLGtoPVdhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnLGxoPTAsTj1udWxsLE89bnVsbCxQPW51bGwsbWg9ITE7ZnVuY3Rpb24gUSgpe3Rocm93IEVycm9yKHUoMzIxKSk7fWZ1bmN0aW9uIG5oKGEsYil7aWYobnVsbD09PWIpcmV0dXJuITE7Zm9yKHZhciBjPTA7YzxiLmxlbmd0aCYmYzxhLmxlbmd0aDtjKyspaWYoISRlKGFbY10sYltjXSkpcmV0dXJuITE7cmV0dXJuITB9XG5mdW5jdGlvbiBvaChhLGIsYyxkLGUsZil7bGg9ZjtOPWI7Yi5tZW1vaXplZFN0YXRlPW51bGw7Yi51cGRhdGVRdWV1ZT1udWxsO2IuZXhwaXJhdGlvblRpbWU9MDtqaC5jdXJyZW50PW51bGw9PT1hfHxudWxsPT09YS5tZW1vaXplZFN0YXRlP3BoOnFoO2E9YyhkLGUpO2lmKGIuZXhwaXJhdGlvblRpbWU9PT1saCl7Zj0wO2Rve2IuZXhwaXJhdGlvblRpbWU9MDtpZighKDI1PmYpKXRocm93IEVycm9yKHUoMzAxKSk7Zis9MTtQPU89bnVsbDtiLnVwZGF0ZVF1ZXVlPW51bGw7amguY3VycmVudD1yaDthPWMoZCxlKX13aGlsZShiLmV4cGlyYXRpb25UaW1lPT09bGgpfWpoLmN1cnJlbnQ9c2g7Yj1udWxsIT09TyYmbnVsbCE9PU8ubmV4dDtsaD0wO1A9Tz1OPW51bGw7bWg9ITE7aWYoYil0aHJvdyBFcnJvcih1KDMwMCkpO3JldHVybiBhfVxuZnVuY3Rpb24gdGgoKXt2YXIgYT17bWVtb2l6ZWRTdGF0ZTpudWxsLGJhc2VTdGF0ZTpudWxsLGJhc2VRdWV1ZTpudWxsLHF1ZXVlOm51bGwsbmV4dDpudWxsfTtudWxsPT09UD9OLm1lbW9pemVkU3RhdGU9UD1hOlA9UC5uZXh0PWE7cmV0dXJuIFB9ZnVuY3Rpb24gdWgoKXtpZihudWxsPT09Tyl7dmFyIGE9Ti5hbHRlcm5hdGU7YT1udWxsIT09YT9hLm1lbW9pemVkU3RhdGU6bnVsbH1lbHNlIGE9Ty5uZXh0O3ZhciBiPW51bGw9PT1QP04ubWVtb2l6ZWRTdGF0ZTpQLm5leHQ7aWYobnVsbCE9PWIpUD1iLE89YTtlbHNle2lmKG51bGw9PT1hKXRocm93IEVycm9yKHUoMzEwKSk7Tz1hO2E9e21lbW9pemVkU3RhdGU6Ty5tZW1vaXplZFN0YXRlLGJhc2VTdGF0ZTpPLmJhc2VTdGF0ZSxiYXNlUXVldWU6Ty5iYXNlUXVldWUscXVldWU6Ty5xdWV1ZSxuZXh0Om51bGx9O251bGw9PT1QP04ubWVtb2l6ZWRTdGF0ZT1QPWE6UD1QLm5leHQ9YX1yZXR1cm4gUH1cbmZ1bmN0aW9uIHZoKGEsYil7cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGI/YihhKTpifVxuZnVuY3Rpb24gd2goYSl7dmFyIGI9dWgoKSxjPWIucXVldWU7aWYobnVsbD09PWMpdGhyb3cgRXJyb3IodSgzMTEpKTtjLmxhc3RSZW5kZXJlZFJlZHVjZXI9YTt2YXIgZD1PLGU9ZC5iYXNlUXVldWUsZj1jLnBlbmRpbmc7aWYobnVsbCE9PWYpe2lmKG51bGwhPT1lKXt2YXIgZz1lLm5leHQ7ZS5uZXh0PWYubmV4dDtmLm5leHQ9Z31kLmJhc2VRdWV1ZT1lPWY7Yy5wZW5kaW5nPW51bGx9aWYobnVsbCE9PWUpe2U9ZS5uZXh0O2Q9ZC5iYXNlU3RhdGU7dmFyIGg9Zz1mPW51bGwsaz1lO2Rve3ZhciBsPWsuZXhwaXJhdGlvblRpbWU7aWYobDxsaCl7dmFyIG09e2V4cGlyYXRpb25UaW1lOmsuZXhwaXJhdGlvblRpbWUsc3VzcGVuc2VDb25maWc6ay5zdXNwZW5zZUNvbmZpZyxhY3Rpb246ay5hY3Rpb24sZWFnZXJSZWR1Y2VyOmsuZWFnZXJSZWR1Y2VyLGVhZ2VyU3RhdGU6ay5lYWdlclN0YXRlLG5leHQ6bnVsbH07bnVsbD09PWg/KGc9aD1tLGY9ZCk6aD1oLm5leHQ9bTtsPk4uZXhwaXJhdGlvblRpbWUmJlxuKE4uZXhwaXJhdGlvblRpbWU9bCxCZyhsKSl9ZWxzZSBudWxsIT09aCYmKGg9aC5uZXh0PXtleHBpcmF0aW9uVGltZToxMDczNzQxODIzLHN1c3BlbnNlQ29uZmlnOmsuc3VzcGVuc2VDb25maWcsYWN0aW9uOmsuYWN0aW9uLGVhZ2VyUmVkdWNlcjprLmVhZ2VyUmVkdWNlcixlYWdlclN0YXRlOmsuZWFnZXJTdGF0ZSxuZXh0Om51bGx9KSxBZyhsLGsuc3VzcGVuc2VDb25maWcpLGQ9ay5lYWdlclJlZHVjZXI9PT1hP2suZWFnZXJTdGF0ZTphKGQsay5hY3Rpb24pO2s9ay5uZXh0fXdoaWxlKG51bGwhPT1rJiZrIT09ZSk7bnVsbD09PWg/Zj1kOmgubmV4dD1nOyRlKGQsYi5tZW1vaXplZFN0YXRlKXx8KHJnPSEwKTtiLm1lbW9pemVkU3RhdGU9ZDtiLmJhc2VTdGF0ZT1mO2IuYmFzZVF1ZXVlPWg7Yy5sYXN0UmVuZGVyZWRTdGF0ZT1kfXJldHVybltiLm1lbW9pemVkU3RhdGUsYy5kaXNwYXRjaF19XG5mdW5jdGlvbiB4aChhKXt2YXIgYj11aCgpLGM9Yi5xdWV1ZTtpZihudWxsPT09Yyl0aHJvdyBFcnJvcih1KDMxMSkpO2MubGFzdFJlbmRlcmVkUmVkdWNlcj1hO3ZhciBkPWMuZGlzcGF0Y2gsZT1jLnBlbmRpbmcsZj1iLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWUpe2MucGVuZGluZz1udWxsO3ZhciBnPWU9ZS5uZXh0O2RvIGY9YShmLGcuYWN0aW9uKSxnPWcubmV4dDt3aGlsZShnIT09ZSk7JGUoZixiLm1lbW9pemVkU3RhdGUpfHwocmc9ITApO2IubWVtb2l6ZWRTdGF0ZT1mO251bGw9PT1iLmJhc2VRdWV1ZSYmKGIuYmFzZVN0YXRlPWYpO2MubGFzdFJlbmRlcmVkU3RhdGU9Zn1yZXR1cm5bZixkXX1cbmZ1bmN0aW9uIHloKGEpe3ZhciBiPXRoKCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGEmJihhPWEoKSk7Yi5tZW1vaXplZFN0YXRlPWIuYmFzZVN0YXRlPWE7YT1iLnF1ZXVlPXtwZW5kaW5nOm51bGwsZGlzcGF0Y2g6bnVsbCxsYXN0UmVuZGVyZWRSZWR1Y2VyOnZoLGxhc3RSZW5kZXJlZFN0YXRlOmF9O2E9YS5kaXNwYXRjaD16aC5iaW5kKG51bGwsTixhKTtyZXR1cm5bYi5tZW1vaXplZFN0YXRlLGFdfWZ1bmN0aW9uIEFoKGEsYixjLGQpe2E9e3RhZzphLGNyZWF0ZTpiLGRlc3Ryb3k6YyxkZXBzOmQsbmV4dDpudWxsfTtiPU4udXBkYXRlUXVldWU7bnVsbD09PWI/KGI9e2xhc3RFZmZlY3Q6bnVsbH0sTi51cGRhdGVRdWV1ZT1iLGIubGFzdEVmZmVjdD1hLm5leHQ9YSk6KGM9Yi5sYXN0RWZmZWN0LG51bGw9PT1jP2IubGFzdEVmZmVjdD1hLm5leHQ9YTooZD1jLm5leHQsYy5uZXh0PWEsYS5uZXh0PWQsYi5sYXN0RWZmZWN0PWEpKTtyZXR1cm4gYX1cbmZ1bmN0aW9uIEJoKCl7cmV0dXJuIHVoKCkubWVtb2l6ZWRTdGF0ZX1mdW5jdGlvbiBDaChhLGIsYyxkKXt2YXIgZT10aCgpO04uZWZmZWN0VGFnfD1hO2UubWVtb2l6ZWRTdGF0ZT1BaCgxfGIsYyx2b2lkIDAsdm9pZCAwPT09ZD9udWxsOmQpfWZ1bmN0aW9uIERoKGEsYixjLGQpe3ZhciBlPXVoKCk7ZD12b2lkIDA9PT1kP251bGw6ZDt2YXIgZj12b2lkIDA7aWYobnVsbCE9PU8pe3ZhciBnPU8ubWVtb2l6ZWRTdGF0ZTtmPWcuZGVzdHJveTtpZihudWxsIT09ZCYmbmgoZCxnLmRlcHMpKXtBaChiLGMsZixkKTtyZXR1cm59fU4uZWZmZWN0VGFnfD1hO2UubWVtb2l6ZWRTdGF0ZT1BaCgxfGIsYyxmLGQpfWZ1bmN0aW9uIEVoKGEsYil7cmV0dXJuIENoKDUxNiw0LGEsYil9ZnVuY3Rpb24gRmgoYSxiKXtyZXR1cm4gRGgoNTE2LDQsYSxiKX1mdW5jdGlvbiBHaChhLGIpe3JldHVybiBEaCg0LDIsYSxiKX1cbmZ1bmN0aW9uIEhoKGEsYil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIpcmV0dXJuIGE9YSgpLGIoYSksZnVuY3Rpb24oKXtiKG51bGwpfTtpZihudWxsIT09YiYmdm9pZCAwIT09YilyZXR1cm4gYT1hKCksYi5jdXJyZW50PWEsZnVuY3Rpb24oKXtiLmN1cnJlbnQ9bnVsbH19ZnVuY3Rpb24gSWgoYSxiLGMpe2M9bnVsbCE9PWMmJnZvaWQgMCE9PWM/Yy5jb25jYXQoW2FdKTpudWxsO3JldHVybiBEaCg0LDIsSGguYmluZChudWxsLGIsYSksYyl9ZnVuY3Rpb24gSmgoKXt9ZnVuY3Rpb24gS2goYSxiKXt0aCgpLm1lbW9pemVkU3RhdGU9W2Esdm9pZCAwPT09Yj9udWxsOmJdO3JldHVybiBhfWZ1bmN0aW9uIExoKGEsYil7dmFyIGM9dWgoKTtiPXZvaWQgMD09PWI/bnVsbDpiO3ZhciBkPWMubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZCYmbnVsbCE9PWImJm5oKGIsZFsxXSkpcmV0dXJuIGRbMF07Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfVxuZnVuY3Rpb24gTWgoYSxiKXt2YXIgYz11aCgpO2I9dm9pZCAwPT09Yj9udWxsOmI7dmFyIGQ9Yy5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kJiZudWxsIT09YiYmbmgoYixkWzFdKSlyZXR1cm4gZFswXTthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9ZnVuY3Rpb24gTmgoYSxiLGMpe3ZhciBkPWFnKCk7Y2coOTg+ZD85ODpkLGZ1bmN0aW9uKCl7YSghMCl9KTtjZyg5NzxkPzk3OmQsZnVuY3Rpb24oKXt2YXIgZD1raC5zdXNwZW5zZTtraC5zdXNwZW5zZT12b2lkIDA9PT1iP251bGw6Yjt0cnl7YSghMSksYygpfWZpbmFsbHl7a2guc3VzcGVuc2U9ZH19KX1cbmZ1bmN0aW9uIHpoKGEsYixjKXt2YXIgZD1HZygpLGU9RGcuc3VzcGVuc2U7ZD1IZyhkLGEsZSk7ZT17ZXhwaXJhdGlvblRpbWU6ZCxzdXNwZW5zZUNvbmZpZzplLGFjdGlvbjpjLGVhZ2VyUmVkdWNlcjpudWxsLGVhZ2VyU3RhdGU6bnVsbCxuZXh0Om51bGx9O3ZhciBmPWIucGVuZGluZztudWxsPT09Zj9lLm5leHQ9ZTooZS5uZXh0PWYubmV4dCxmLm5leHQ9ZSk7Yi5wZW5kaW5nPWU7Zj1hLmFsdGVybmF0ZTtpZihhPT09Tnx8bnVsbCE9PWYmJmY9PT1OKW1oPSEwLGUuZXhwaXJhdGlvblRpbWU9bGgsTi5leHBpcmF0aW9uVGltZT1saDtlbHNle2lmKDA9PT1hLmV4cGlyYXRpb25UaW1lJiYobnVsbD09PWZ8fDA9PT1mLmV4cGlyYXRpb25UaW1lKSYmKGY9Yi5sYXN0UmVuZGVyZWRSZWR1Y2VyLG51bGwhPT1mKSl0cnl7dmFyIGc9Yi5sYXN0UmVuZGVyZWRTdGF0ZSxoPWYoZyxjKTtlLmVhZ2VyUmVkdWNlcj1mO2UuZWFnZXJTdGF0ZT1oO2lmKCRlKGgsZykpcmV0dXJufWNhdGNoKGspe31maW5hbGx5e31JZyhhLFxuZCl9fVxudmFyIHNoPXtyZWFkQ29udGV4dDpzZyx1c2VDYWxsYmFjazpRLHVzZUNvbnRleHQ6USx1c2VFZmZlY3Q6USx1c2VJbXBlcmF0aXZlSGFuZGxlOlEsdXNlTGF5b3V0RWZmZWN0OlEsdXNlTWVtbzpRLHVzZVJlZHVjZXI6USx1c2VSZWY6USx1c2VTdGF0ZTpRLHVzZURlYnVnVmFsdWU6USx1c2VSZXNwb25kZXI6USx1c2VEZWZlcnJlZFZhbHVlOlEsdXNlVHJhbnNpdGlvbjpRfSxwaD17cmVhZENvbnRleHQ6c2csdXNlQ2FsbGJhY2s6S2gsdXNlQ29udGV4dDpzZyx1c2VFZmZlY3Q6RWgsdXNlSW1wZXJhdGl2ZUhhbmRsZTpmdW5jdGlvbihhLGIsYyl7Yz1udWxsIT09YyYmdm9pZCAwIT09Yz9jLmNvbmNhdChbYV0pOm51bGw7cmV0dXJuIENoKDQsMixIaC5iaW5kKG51bGwsYixhKSxjKX0sdXNlTGF5b3V0RWZmZWN0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIENoKDQsMixhLGIpfSx1c2VNZW1vOmZ1bmN0aW9uKGEsYil7dmFyIGM9dGgoKTtiPXZvaWQgMD09PWI/bnVsbDpiO2E9YSgpO2MubWVtb2l6ZWRTdGF0ZT1bYSxcbmJdO3JldHVybiBhfSx1c2VSZWR1Y2VyOmZ1bmN0aW9uKGEsYixjKXt2YXIgZD10aCgpO2I9dm9pZCAwIT09Yz9jKGIpOmI7ZC5tZW1vaXplZFN0YXRlPWQuYmFzZVN0YXRlPWI7YT1kLnF1ZXVlPXtwZW5kaW5nOm51bGwsZGlzcGF0Y2g6bnVsbCxsYXN0UmVuZGVyZWRSZWR1Y2VyOmEsbGFzdFJlbmRlcmVkU3RhdGU6Yn07YT1hLmRpc3BhdGNoPXpoLmJpbmQobnVsbCxOLGEpO3JldHVybltkLm1lbW9pemVkU3RhdGUsYV19LHVzZVJlZjpmdW5jdGlvbihhKXt2YXIgYj10aCgpO2E9e2N1cnJlbnQ6YX07cmV0dXJuIGIubWVtb2l6ZWRTdGF0ZT1hfSx1c2VTdGF0ZTp5aCx1c2VEZWJ1Z1ZhbHVlOkpoLHVzZVJlc3BvbmRlcjppaCx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEsYil7dmFyIGM9eWgoYSksZD1jWzBdLGU9Y1sxXTtFaChmdW5jdGlvbigpe3ZhciBjPWtoLnN1c3BlbnNlO2toLnN1c3BlbnNlPXZvaWQgMD09PWI/bnVsbDpiO3RyeXtlKGEpfWZpbmFsbHl7a2guc3VzcGVuc2U9XG5jfX0sW2EsYl0pO3JldHVybiBkfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKGEpe3ZhciBiPXloKCExKSxjPWJbMF07Yj1iWzFdO3JldHVybltLaChOaC5iaW5kKG51bGwsYixhKSxbYixhXSksY119fSxxaD17cmVhZENvbnRleHQ6c2csdXNlQ2FsbGJhY2s6TGgsdXNlQ29udGV4dDpzZyx1c2VFZmZlY3Q6RmgsdXNlSW1wZXJhdGl2ZUhhbmRsZTpJaCx1c2VMYXlvdXRFZmZlY3Q6R2gsdXNlTWVtbzpNaCx1c2VSZWR1Y2VyOndoLHVzZVJlZjpCaCx1c2VTdGF0ZTpmdW5jdGlvbigpe3JldHVybiB3aCh2aCl9LHVzZURlYnVnVmFsdWU6SmgsdXNlUmVzcG9uZGVyOmloLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oYSxiKXt2YXIgYz13aCh2aCksZD1jWzBdLGU9Y1sxXTtGaChmdW5jdGlvbigpe3ZhciBjPWtoLnN1c3BlbnNlO2toLnN1c3BlbnNlPXZvaWQgMD09PWI/bnVsbDpiO3RyeXtlKGEpfWZpbmFsbHl7a2guc3VzcGVuc2U9Y319LFthLGJdKTtyZXR1cm4gZH0sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbihhKXt2YXIgYj1cbndoKHZoKSxjPWJbMF07Yj1iWzFdO3JldHVybltMaChOaC5iaW5kKG51bGwsYixhKSxbYixhXSksY119fSxyaD17cmVhZENvbnRleHQ6c2csdXNlQ2FsbGJhY2s6TGgsdXNlQ29udGV4dDpzZyx1c2VFZmZlY3Q6RmgsdXNlSW1wZXJhdGl2ZUhhbmRsZTpJaCx1c2VMYXlvdXRFZmZlY3Q6R2gsdXNlTWVtbzpNaCx1c2VSZWR1Y2VyOnhoLHVzZVJlZjpCaCx1c2VTdGF0ZTpmdW5jdGlvbigpe3JldHVybiB4aCh2aCl9LHVzZURlYnVnVmFsdWU6SmgsdXNlUmVzcG9uZGVyOmloLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oYSxiKXt2YXIgYz14aCh2aCksZD1jWzBdLGU9Y1sxXTtGaChmdW5jdGlvbigpe3ZhciBjPWtoLnN1c3BlbnNlO2toLnN1c3BlbnNlPXZvaWQgMD09PWI/bnVsbDpiO3RyeXtlKGEpfWZpbmFsbHl7a2guc3VzcGVuc2U9Y319LFthLGJdKTtyZXR1cm4gZH0sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbihhKXt2YXIgYj14aCh2aCksYz1iWzBdO2I9YlsxXTtyZXR1cm5bTGgoTmguYmluZChudWxsLFxuYixhKSxbYixhXSksY119fSxPaD1udWxsLFBoPW51bGwsUWg9ITE7ZnVuY3Rpb24gUmgoYSxiKXt2YXIgYz1TaCg1LG51bGwsbnVsbCwwKTtjLmVsZW1lbnRUeXBlPVwiREVMRVRFRFwiO2MudHlwZT1cIkRFTEVURURcIjtjLnN0YXRlTm9kZT1iO2MucmV0dXJuPWE7Yy5lZmZlY3RUYWc9ODtudWxsIT09YS5sYXN0RWZmZWN0PyhhLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1jLGEubGFzdEVmZmVjdD1jKTphLmZpcnN0RWZmZWN0PWEubGFzdEVmZmVjdD1jfVxuZnVuY3Rpb24gVGgoYSxiKXtzd2l0Y2goYS50YWcpe2Nhc2UgNTp2YXIgYz1hLnR5cGU7Yj0xIT09Yi5ub2RlVHlwZXx8Yy50b0xvd2VyQ2FzZSgpIT09Yi5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpP251bGw6YjtyZXR1cm4gbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2Nhc2UgNjpyZXR1cm4gYj1cIlwiPT09YS5wZW5kaW5nUHJvcHN8fDMhPT1iLm5vZGVUeXBlP251bGw6YixudWxsIT09Yj8oYS5zdGF0ZU5vZGU9YiwhMCk6ITE7Y2FzZSAxMzpyZXR1cm4hMTtkZWZhdWx0OnJldHVybiExfX1cbmZ1bmN0aW9uIFVoKGEpe2lmKFFoKXt2YXIgYj1QaDtpZihiKXt2YXIgYz1iO2lmKCFUaChhLGIpKXtiPUpkKGMubmV4dFNpYmxpbmcpO2lmKCFifHwhVGgoYSxiKSl7YS5lZmZlY3RUYWc9YS5lZmZlY3RUYWcmLTEwMjV8MjtRaD0hMTtPaD1hO3JldHVybn1SaChPaCxjKX1PaD1hO1BoPUpkKGIuZmlyc3RDaGlsZCl9ZWxzZSBhLmVmZmVjdFRhZz1hLmVmZmVjdFRhZyYtMTAyNXwyLFFoPSExLE9oPWF9fWZ1bmN0aW9uIFZoKGEpe2ZvcihhPWEucmV0dXJuO251bGwhPT1hJiY1IT09YS50YWcmJjMhPT1hLnRhZyYmMTMhPT1hLnRhZzspYT1hLnJldHVybjtPaD1hfVxuZnVuY3Rpb24gV2goYSl7aWYoYSE9PU9oKXJldHVybiExO2lmKCFRaClyZXR1cm4gVmgoYSksUWg9ITAsITE7dmFyIGI9YS50eXBlO2lmKDUhPT1hLnRhZ3x8XCJoZWFkXCIhPT1iJiZcImJvZHlcIiE9PWImJiFHZChiLGEubWVtb2l6ZWRQcm9wcykpZm9yKGI9UGg7YjspUmgoYSxiKSxiPUpkKGIubmV4dFNpYmxpbmcpO1ZoKGEpO2lmKDEzPT09YS50YWcpe2E9YS5tZW1vaXplZFN0YXRlO2E9bnVsbCE9PWE/YS5kZWh5ZHJhdGVkOm51bGw7aWYoIWEpdGhyb3cgRXJyb3IodSgzMTcpKTthOnthPWEubmV4dFNpYmxpbmc7Zm9yKGI9MDthOyl7aWYoOD09PWEubm9kZVR5cGUpe3ZhciBjPWEuZGF0YTtpZihjPT09QWQpe2lmKDA9PT1iKXtQaD1KZChhLm5leHRTaWJsaW5nKTticmVhayBhfWItLX1lbHNlIGMhPT16ZCYmYyE9PUNkJiZjIT09QmR8fGIrK31hPWEubmV4dFNpYmxpbmd9UGg9bnVsbH19ZWxzZSBQaD1PaD9KZChhLnN0YXRlTm9kZS5uZXh0U2libGluZyk6bnVsbDtyZXR1cm4hMH1cbmZ1bmN0aW9uIFhoKCl7UGg9T2g9bnVsbDtRaD0hMX12YXIgWWg9V2EuUmVhY3RDdXJyZW50T3duZXIscmc9ITE7ZnVuY3Rpb24gUihhLGIsYyxkKXtiLmNoaWxkPW51bGw9PT1hP1lnKGIsbnVsbCxjLGQpOlhnKGIsYS5jaGlsZCxjLGQpfWZ1bmN0aW9uIFpoKGEsYixjLGQsZSl7Yz1jLnJlbmRlcjt2YXIgZj1iLnJlZjtxZyhiLGUpO2Q9b2goYSxiLGMsZCxmLGUpO2lmKG51bGwhPT1hJiYhcmcpcmV0dXJuIGIudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZSxiLmVmZmVjdFRhZyY9LTUxNyxhLmV4cGlyYXRpb25UaW1lPD1lJiYoYS5leHBpcmF0aW9uVGltZT0wKSwkaChhLGIsZSk7Yi5lZmZlY3RUYWd8PTE7UihhLGIsZCxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIGFpKGEsYixjLGQsZSxmKXtpZihudWxsPT09YSl7dmFyIGc9Yy50eXBlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnJiYhYmkoZykmJnZvaWQgMD09PWcuZGVmYXVsdFByb3BzJiZudWxsPT09Yy5jb21wYXJlJiZ2b2lkIDA9PT1jLmRlZmF1bHRQcm9wcylyZXR1cm4gYi50YWc9MTUsYi50eXBlPWcsY2koYSxiLGcsZCxlLGYpO2E9VWcoYy50eXBlLG51bGwsZCxudWxsLGIubW9kZSxmKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9Zz1hLmNoaWxkO2lmKGU8ZiYmKGU9Zy5tZW1vaXplZFByb3BzLGM9Yy5jb21wYXJlLGM9bnVsbCE9PWM/YzpiZixjKGUsZCkmJmEucmVmPT09Yi5yZWYpKXJldHVybiAkaChhLGIsZik7Yi5lZmZlY3RUYWd8PTE7YT1TZyhnLGQpO2EucmVmPWIucmVmO2EucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9YX1cbmZ1bmN0aW9uIGNpKGEsYixjLGQsZSxmKXtyZXR1cm4gbnVsbCE9PWEmJmJmKGEubWVtb2l6ZWRQcm9wcyxkKSYmYS5yZWY9PT1iLnJlZiYmKHJnPSExLGU8Zik/KGIuZXhwaXJhdGlvblRpbWU9YS5leHBpcmF0aW9uVGltZSwkaChhLGIsZikpOmRpKGEsYixjLGQsZil9ZnVuY3Rpb24gZWkoYSxiKXt2YXIgYz1iLnJlZjtpZihudWxsPT09YSYmbnVsbCE9PWN8fG51bGwhPT1hJiZhLnJlZiE9PWMpYi5lZmZlY3RUYWd8PTEyOH1mdW5jdGlvbiBkaShhLGIsYyxkLGUpe3ZhciBmPUwoYyk/QmY6Si5jdXJyZW50O2Y9Q2YoYixmKTtxZyhiLGUpO2M9b2goYSxiLGMsZCxmLGUpO2lmKG51bGwhPT1hJiYhcmcpcmV0dXJuIGIudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZSxiLmVmZmVjdFRhZyY9LTUxNyxhLmV4cGlyYXRpb25UaW1lPD1lJiYoYS5leHBpcmF0aW9uVGltZT0wKSwkaChhLGIsZSk7Yi5lZmZlY3RUYWd8PTE7UihhLGIsYyxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIGZpKGEsYixjLGQsZSl7aWYoTChjKSl7dmFyIGY9ITA7R2YoYil9ZWxzZSBmPSExO3FnKGIsZSk7aWYobnVsbD09PWIuc3RhdGVOb2RlKW51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKSxMZyhiLGMsZCksTmcoYixjLGQsZSksZD0hMDtlbHNlIGlmKG51bGw9PT1hKXt2YXIgZz1iLnN0YXRlTm9kZSxoPWIubWVtb2l6ZWRQcm9wcztnLnByb3BzPWg7dmFyIGs9Zy5jb250ZXh0LGw9Yy5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGwmJm51bGwhPT1sP2w9c2cobCk6KGw9TChjKT9CZjpKLmN1cnJlbnQsbD1DZihiLGwpKTt2YXIgbT1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyxwPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBtfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZTtwfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXG5cImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PWR8fGshPT1sKSYmTWcoYixnLGQsbCk7dGc9ITE7dmFyIHg9Yi5tZW1vaXplZFN0YXRlO2cuc3RhdGU9eDt6ZyhiLGQsZyxlKTtrPWIubWVtb2l6ZWRTdGF0ZTtoIT09ZHx8eCE9PWt8fEsuY3VycmVudHx8dGc/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBtJiYoRmcoYixjLG0sZCksaz1iLm1lbW9pemVkU3RhdGUpLChoPXRnfHxLZyhiLGMsaCxkLHgsayxsKSk/KHB8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxNb3VudHx8KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxNb3VudCYmZy5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQoKSksXCJmdW5jdGlvblwiPT09XG50eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZWZmZWN0VGFnfD00KSk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpLGIubWVtb2l6ZWRQcm9wcz1kLGIubWVtb2l6ZWRTdGF0ZT1rKSxnLnByb3BzPWQsZy5zdGF0ZT1rLGcuY29udGV4dD1sLGQ9aCk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpLGQ9ITEpfWVsc2UgZz1iLnN0YXRlTm9kZSx2ZyhhLGIpLGg9Yi5tZW1vaXplZFByb3BzLGcucHJvcHM9Yi50eXBlPT09Yi5lbGVtZW50VHlwZT9oOmlnKGIudHlwZSxoKSxrPWcuY29udGV4dCxsPWMuY29udGV4dFR5cGUsXCJvYmplY3RcIj09PXR5cGVvZiBsJiZudWxsIT09bD9sPXNnKGwpOihsPUwoYyk/QmY6Si5jdXJyZW50LGw9Q2YoYixsKSksbT1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcywocD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgbXx8XCJmdW5jdGlvblwiPT09XG50eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSl8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PWR8fGshPT1sKSYmTWcoYixnLGQsbCksdGc9ITEsaz1iLm1lbW9pemVkU3RhdGUsZy5zdGF0ZT1rLHpnKGIsZCxnLGUpLHg9Yi5tZW1vaXplZFN0YXRlLGghPT1kfHxrIT09eHx8Sy5jdXJyZW50fHx0Zz8oXCJmdW5jdGlvblwiPT09dHlwZW9mIG0mJihGZyhiLGMsbSxkKSx4PWIubWVtb2l6ZWRTdGF0ZSksKG09dGd8fEtnKGIsYyxoLGQsayx4LGwpKT8ocHx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGV8fChcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlJiZnLmNvbXBvbmVudFdpbGxVcGRhdGUoZCxcbngsbCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJmcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUoZCx4LGwpKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGUmJihiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUmJihiLmVmZmVjdFRhZ3w9MjU2KSk6KFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmaz09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmaz09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD0yNTYpLGIubWVtb2l6ZWRQcm9wcz1kLGIubWVtb2l6ZWRTdGF0ZT14KSxnLnByb3BzPWQsZy5zdGF0ZT14LGcuY29udGV4dD1sLGQ9bSk6XG4oXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZrPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZrPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTI1NiksZD0hMSk7cmV0dXJuIGdpKGEsYixjLGQsZixlKX1cbmZ1bmN0aW9uIGdpKGEsYixjLGQsZSxmKXtlaShhLGIpO3ZhciBnPTAhPT0oYi5lZmZlY3RUYWcmNjQpO2lmKCFkJiYhZylyZXR1cm4gZSYmSGYoYixjLCExKSwkaChhLGIsZik7ZD1iLnN0YXRlTm9kZTtZaC5jdXJyZW50PWI7dmFyIGg9ZyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGMuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yP251bGw6ZC5yZW5kZXIoKTtiLmVmZmVjdFRhZ3w9MTtudWxsIT09YSYmZz8oYi5jaGlsZD1YZyhiLGEuY2hpbGQsbnVsbCxmKSxiLmNoaWxkPVhnKGIsbnVsbCxoLGYpKTpSKGEsYixoLGYpO2IubWVtb2l6ZWRTdGF0ZT1kLnN0YXRlO2UmJkhmKGIsYywhMCk7cmV0dXJuIGIuY2hpbGR9ZnVuY3Rpb24gaGkoYSl7dmFyIGI9YS5zdGF0ZU5vZGU7Yi5wZW5kaW5nQ29udGV4dD9FZihhLGIucGVuZGluZ0NvbnRleHQsYi5wZW5kaW5nQ29udGV4dCE9PWIuY29udGV4dCk6Yi5jb250ZXh0JiZFZihhLGIuY29udGV4dCwhMSk7ZGgoYSxiLmNvbnRhaW5lckluZm8pfVxudmFyIGlpPXtkZWh5ZHJhdGVkOm51bGwscmV0cnlUaW1lOjB9O1xuZnVuY3Rpb24gamkoYSxiLGMpe3ZhciBkPWIubW9kZSxlPWIucGVuZGluZ1Byb3BzLGY9TS5jdXJyZW50LGc9ITEsaDsoaD0wIT09KGIuZWZmZWN0VGFnJjY0KSl8fChoPTAhPT0oZiYyKSYmKG51bGw9PT1hfHxudWxsIT09YS5tZW1vaXplZFN0YXRlKSk7aD8oZz0hMCxiLmVmZmVjdFRhZyY9LTY1KTpudWxsIT09YSYmbnVsbD09PWEubWVtb2l6ZWRTdGF0ZXx8dm9pZCAwPT09ZS5mYWxsYmFja3x8ITA9PT1lLnVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrfHwoZnw9MSk7SShNLGYmMSk7aWYobnVsbD09PWEpe3ZvaWQgMCE9PWUuZmFsbGJhY2smJlVoKGIpO2lmKGcpe2c9ZS5mYWxsYmFjaztlPVdnKG51bGwsZCwwLG51bGwpO2UucmV0dXJuPWI7aWYoMD09PShiLm1vZGUmMikpZm9yKGE9bnVsbCE9PWIubWVtb2l6ZWRTdGF0ZT9iLmNoaWxkLmNoaWxkOmIuY2hpbGQsZS5jaGlsZD1hO251bGwhPT1hOylhLnJldHVybj1lLGE9YS5zaWJsaW5nO2M9V2coZyxkLGMsbnVsbCk7Yy5yZXR1cm49XG5iO2Uuc2libGluZz1jO2IubWVtb2l6ZWRTdGF0ZT1paTtiLmNoaWxkPWU7cmV0dXJuIGN9ZD1lLmNoaWxkcmVuO2IubWVtb2l6ZWRTdGF0ZT1udWxsO3JldHVybiBiLmNoaWxkPVlnKGIsbnVsbCxkLGMpfWlmKG51bGwhPT1hLm1lbW9pemVkU3RhdGUpe2E9YS5jaGlsZDtkPWEuc2libGluZztpZihnKXtlPWUuZmFsbGJhY2s7Yz1TZyhhLGEucGVuZGluZ1Byb3BzKTtjLnJldHVybj1iO2lmKDA9PT0oYi5tb2RlJjIpJiYoZz1udWxsIT09Yi5tZW1vaXplZFN0YXRlP2IuY2hpbGQuY2hpbGQ6Yi5jaGlsZCxnIT09YS5jaGlsZCkpZm9yKGMuY2hpbGQ9ZztudWxsIT09ZzspZy5yZXR1cm49YyxnPWcuc2libGluZztkPVNnKGQsZSk7ZC5yZXR1cm49YjtjLnNpYmxpbmc9ZDtjLmNoaWxkRXhwaXJhdGlvblRpbWU9MDtiLm1lbW9pemVkU3RhdGU9aWk7Yi5jaGlsZD1jO3JldHVybiBkfWM9WGcoYixhLmNoaWxkLGUuY2hpbGRyZW4sYyk7Yi5tZW1vaXplZFN0YXRlPW51bGw7cmV0dXJuIGIuY2hpbGQ9XG5jfWE9YS5jaGlsZDtpZihnKXtnPWUuZmFsbGJhY2s7ZT1XZyhudWxsLGQsMCxudWxsKTtlLnJldHVybj1iO2UuY2hpbGQ9YTtudWxsIT09YSYmKGEucmV0dXJuPWUpO2lmKDA9PT0oYi5tb2RlJjIpKWZvcihhPW51bGwhPT1iLm1lbW9pemVkU3RhdGU/Yi5jaGlsZC5jaGlsZDpiLmNoaWxkLGUuY2hpbGQ9YTtudWxsIT09YTspYS5yZXR1cm49ZSxhPWEuc2libGluZztjPVdnKGcsZCxjLG51bGwpO2MucmV0dXJuPWI7ZS5zaWJsaW5nPWM7Yy5lZmZlY3RUYWd8PTI7ZS5jaGlsZEV4cGlyYXRpb25UaW1lPTA7Yi5tZW1vaXplZFN0YXRlPWlpO2IuY2hpbGQ9ZTtyZXR1cm4gY31iLm1lbW9pemVkU3RhdGU9bnVsbDtyZXR1cm4gYi5jaGlsZD1YZyhiLGEsZS5jaGlsZHJlbixjKX1cbmZ1bmN0aW9uIGtpKGEsYil7YS5leHBpcmF0aW9uVGltZTxiJiYoYS5leHBpcmF0aW9uVGltZT1iKTt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmYy5leHBpcmF0aW9uVGltZTxiJiYoYy5leHBpcmF0aW9uVGltZT1iKTtwZyhhLnJldHVybixiKX1mdW5jdGlvbiBsaShhLGIsYyxkLGUsZil7dmFyIGc9YS5tZW1vaXplZFN0YXRlO251bGw9PT1nP2EubWVtb2l6ZWRTdGF0ZT17aXNCYWNrd2FyZHM6YixyZW5kZXJpbmc6bnVsbCxyZW5kZXJpbmdTdGFydFRpbWU6MCxsYXN0OmQsdGFpbDpjLHRhaWxFeHBpcmF0aW9uOjAsdGFpbE1vZGU6ZSxsYXN0RWZmZWN0OmZ9OihnLmlzQmFja3dhcmRzPWIsZy5yZW5kZXJpbmc9bnVsbCxnLnJlbmRlcmluZ1N0YXJ0VGltZT0wLGcubGFzdD1kLGcudGFpbD1jLGcudGFpbEV4cGlyYXRpb249MCxnLnRhaWxNb2RlPWUsZy5sYXN0RWZmZWN0PWYpfVxuZnVuY3Rpb24gbWkoYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzLGU9ZC5yZXZlYWxPcmRlcixmPWQudGFpbDtSKGEsYixkLmNoaWxkcmVuLGMpO2Q9TS5jdXJyZW50O2lmKDAhPT0oZCYyKSlkPWQmMXwyLGIuZWZmZWN0VGFnfD02NDtlbHNle2lmKG51bGwhPT1hJiYwIT09KGEuZWZmZWN0VGFnJjY0KSlhOmZvcihhPWIuY2hpbGQ7bnVsbCE9PWE7KXtpZigxMz09PWEudGFnKW51bGwhPT1hLm1lbW9pemVkU3RhdGUmJmtpKGEsYyk7ZWxzZSBpZigxOT09PWEudGFnKWtpKGEsYyk7ZWxzZSBpZihudWxsIT09YS5jaGlsZCl7YS5jaGlsZC5yZXR1cm49YTthPWEuY2hpbGQ7Y29udGludWV9aWYoYT09PWIpYnJlYWsgYTtmb3IoO251bGw9PT1hLnNpYmxpbmc7KXtpZihudWxsPT09YS5yZXR1cm58fGEucmV0dXJuPT09YilicmVhayBhO2E9YS5yZXR1cm59YS5zaWJsaW5nLnJldHVybj1hLnJldHVybjthPWEuc2libGluZ31kJj0xfUkoTSxkKTtpZigwPT09KGIubW9kZSYyKSliLm1lbW9pemVkU3RhdGU9XG5udWxsO2Vsc2Ugc3dpdGNoKGUpe2Nhc2UgXCJmb3J3YXJkc1wiOmM9Yi5jaGlsZDtmb3IoZT1udWxsO251bGwhPT1jOylhPWMuYWx0ZXJuYXRlLG51bGwhPT1hJiZudWxsPT09aGgoYSkmJihlPWMpLGM9Yy5zaWJsaW5nO2M9ZTtudWxsPT09Yz8oZT1iLmNoaWxkLGIuY2hpbGQ9bnVsbCk6KGU9Yy5zaWJsaW5nLGMuc2libGluZz1udWxsKTtsaShiLCExLGUsYyxmLGIubGFzdEVmZmVjdCk7YnJlYWs7Y2FzZSBcImJhY2t3YXJkc1wiOmM9bnVsbDtlPWIuY2hpbGQ7Zm9yKGIuY2hpbGQ9bnVsbDtudWxsIT09ZTspe2E9ZS5hbHRlcm5hdGU7aWYobnVsbCE9PWEmJm51bGw9PT1oaChhKSl7Yi5jaGlsZD1lO2JyZWFrfWE9ZS5zaWJsaW5nO2Uuc2libGluZz1jO2M9ZTtlPWF9bGkoYiwhMCxjLG51bGwsZixiLmxhc3RFZmZlY3QpO2JyZWFrO2Nhc2UgXCJ0b2dldGhlclwiOmxpKGIsITEsbnVsbCxudWxsLHZvaWQgMCxiLmxhc3RFZmZlY3QpO2JyZWFrO2RlZmF1bHQ6Yi5tZW1vaXplZFN0YXRlPW51bGx9cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiAkaChhLGIsYyl7bnVsbCE9PWEmJihiLmRlcGVuZGVuY2llcz1hLmRlcGVuZGVuY2llcyk7dmFyIGQ9Yi5leHBpcmF0aW9uVGltZTswIT09ZCYmQmcoZCk7aWYoYi5jaGlsZEV4cGlyYXRpb25UaW1lPGMpcmV0dXJuIG51bGw7aWYobnVsbCE9PWEmJmIuY2hpbGQhPT1hLmNoaWxkKXRocm93IEVycm9yKHUoMTUzKSk7aWYobnVsbCE9PWIuY2hpbGQpe2E9Yi5jaGlsZDtjPVNnKGEsYS5wZW5kaW5nUHJvcHMpO2IuY2hpbGQ9Yztmb3IoYy5yZXR1cm49YjtudWxsIT09YS5zaWJsaW5nOylhPWEuc2libGluZyxjPWMuc2libGluZz1TZyhhLGEucGVuZGluZ1Byb3BzKSxjLnJldHVybj1iO2Muc2libGluZz1udWxsfXJldHVybiBiLmNoaWxkfXZhciBuaSxvaSxwaSxxaTtcbm5pPWZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPWIuY2hpbGQ7bnVsbCE9PWM7KXtpZig1PT09Yy50YWd8fDY9PT1jLnRhZylhLmFwcGVuZENoaWxkKGMuc3RhdGVOb2RlKTtlbHNlIGlmKDQhPT1jLnRhZyYmbnVsbCE9PWMuY2hpbGQpe2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfWlmKGM9PT1iKWJyZWFrO2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8Yy5yZXR1cm49PT1iKXJldHVybjtjPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Yz1jLnNpYmxpbmd9fTtvaT1mdW5jdGlvbigpe307XG5waT1mdW5jdGlvbihhLGIsYyxkLGUpe3ZhciBmPWEubWVtb2l6ZWRQcm9wcztpZihmIT09ZCl7dmFyIGc9Yi5zdGF0ZU5vZGU7Y2goJGcuY3VycmVudCk7YT1udWxsO3N3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjpmPXpiKGcsZik7ZD16YihnLGQpO2E9W107YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmY9R2IoZyxmKTtkPUdiKGcsZCk7YT1bXTticmVhaztjYXNlIFwic2VsZWN0XCI6Zj1uKHt9LGYse3ZhbHVlOnZvaWQgMH0pO2Q9bih7fSxkLHt2YWx1ZTp2b2lkIDB9KTthPVtdO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmY9SWIoZyxmKTtkPUliKGcsZCk7YT1bXTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBmLm9uQ2xpY2smJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLm9uQ2xpY2smJihnLm9uY2xpY2s9c2QpfW9kKGMsZCk7dmFyIGgsaztjPW51bGw7Zm9yKGggaW4gZilpZighZC5oYXNPd25Qcm9wZXJ0eShoKSYmZi5oYXNPd25Qcm9wZXJ0eShoKSYmbnVsbCE9ZltoXSlpZihcInN0eWxlXCI9PT1cbmgpZm9yKGsgaW4gZz1mW2hdLGcpZy5oYXNPd25Qcm9wZXJ0eShrKSYmKGN8fChjPXt9KSxjW2tdPVwiXCIpO2Vsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCIhPT1oJiZcImNoaWxkcmVuXCIhPT1oJiZcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09aCYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWgmJlwiYXV0b0ZvY3VzXCIhPT1oJiYodmEuaGFzT3duUHJvcGVydHkoaCk/YXx8KGE9W10pOihhPWF8fFtdKS5wdXNoKGgsbnVsbCkpO2ZvcihoIGluIGQpe3ZhciBsPWRbaF07Zz1udWxsIT1mP2ZbaF06dm9pZCAwO2lmKGQuaGFzT3duUHJvcGVydHkoaCkmJmwhPT1nJiYobnVsbCE9bHx8bnVsbCE9ZykpaWYoXCJzdHlsZVwiPT09aClpZihnKXtmb3IoayBpbiBnKSFnLmhhc093blByb3BlcnR5KGspfHxsJiZsLmhhc093blByb3BlcnR5KGspfHwoY3x8KGM9e30pLGNba109XCJcIik7Zm9yKGsgaW4gbClsLmhhc093blByb3BlcnR5KGspJiZnW2tdIT09bFtrXSYmKGN8fChjPXt9KSxcbmNba109bFtrXSl9ZWxzZSBjfHwoYXx8KGE9W10pLGEucHVzaChoLGMpKSxjPWw7ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWg/KGw9bD9sLl9faHRtbDp2b2lkIDAsZz1nP2cuX19odG1sOnZvaWQgMCxudWxsIT1sJiZnIT09bCYmKGE9YXx8W10pLnB1c2goaCxsKSk6XCJjaGlsZHJlblwiPT09aD9nPT09bHx8XCJzdHJpbmdcIiE9PXR5cGVvZiBsJiZcIm51bWJlclwiIT09dHlwZW9mIGx8fChhPWF8fFtdKS5wdXNoKGgsXCJcIitsKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09aCYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWgmJih2YS5oYXNPd25Qcm9wZXJ0eShoKT8obnVsbCE9bCYmcmQoZSxoKSxhfHxnPT09bHx8KGE9W10pKTooYT1hfHxbXSkucHVzaChoLGwpKX1jJiYoYT1hfHxbXSkucHVzaChcInN0eWxlXCIsYyk7ZT1hO2lmKGIudXBkYXRlUXVldWU9ZSliLmVmZmVjdFRhZ3w9NH19O1xucWk9ZnVuY3Rpb24oYSxiLGMsZCl7YyE9PWQmJihiLmVmZmVjdFRhZ3w9NCl9O2Z1bmN0aW9uIHJpKGEsYil7c3dpdGNoKGEudGFpbE1vZGUpe2Nhc2UgXCJoaWRkZW5cIjpiPWEudGFpbDtmb3IodmFyIGM9bnVsbDtudWxsIT09YjspbnVsbCE9PWIuYWx0ZXJuYXRlJiYoYz1iKSxiPWIuc2libGluZztudWxsPT09Yz9hLnRhaWw9bnVsbDpjLnNpYmxpbmc9bnVsbDticmVhaztjYXNlIFwiY29sbGFwc2VkXCI6Yz1hLnRhaWw7Zm9yKHZhciBkPW51bGw7bnVsbCE9PWM7KW51bGwhPT1jLmFsdGVybmF0ZSYmKGQ9YyksYz1jLnNpYmxpbmc7bnVsbD09PWQ/Ynx8bnVsbD09PWEudGFpbD9hLnRhaWw9bnVsbDphLnRhaWwuc2libGluZz1udWxsOmQuc2libGluZz1udWxsfX1cbmZ1bmN0aW9uIHNpKGEsYixjKXt2YXIgZD1iLnBlbmRpbmdQcm9wcztzd2l0Y2goYi50YWcpe2Nhc2UgMjpjYXNlIDE2OmNhc2UgMTU6Y2FzZSAwOmNhc2UgMTE6Y2FzZSA3OmNhc2UgODpjYXNlIDEyOmNhc2UgOTpjYXNlIDE0OnJldHVybiBudWxsO2Nhc2UgMTpyZXR1cm4gTChiLnR5cGUpJiZEZigpLG51bGw7Y2FzZSAzOnJldHVybiBlaCgpLEgoSyksSChKKSxjPWIuc3RhdGVOb2RlLGMucGVuZGluZ0NvbnRleHQmJihjLmNvbnRleHQ9Yy5wZW5kaW5nQ29udGV4dCxjLnBlbmRpbmdDb250ZXh0PW51bGwpLG51bGwhPT1hJiZudWxsIT09YS5jaGlsZHx8IVdoKGIpfHwoYi5lZmZlY3RUYWd8PTQpLG9pKGIpLG51bGw7Y2FzZSA1OmdoKGIpO2M9Y2goYmguY3VycmVudCk7dmFyIGU9Yi50eXBlO2lmKG51bGwhPT1hJiZudWxsIT1iLnN0YXRlTm9kZSlwaShhLGIsZSxkLGMpLGEucmVmIT09Yi5yZWYmJihiLmVmZmVjdFRhZ3w9MTI4KTtlbHNle2lmKCFkKXtpZihudWxsPT09Yi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IodSgxNjYpKTtcbnJldHVybiBudWxsfWE9Y2goJGcuY3VycmVudCk7aWYoV2goYikpe2Q9Yi5zdGF0ZU5vZGU7ZT1iLnR5cGU7dmFyIGY9Yi5tZW1vaXplZFByb3BzO2RbTWRdPWI7ZFtOZF09Zjtzd2l0Y2goZSl7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwiZW1iZWRcIjpGKFwibG9hZFwiLGQpO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihhPTA7YTxhYy5sZW5ndGg7YSsrKUYoYWNbYV0sZCk7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkYoXCJlcnJvclwiLGQpO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkYoXCJlcnJvclwiLGQpO0YoXCJsb2FkXCIsZCk7YnJlYWs7Y2FzZSBcImZvcm1cIjpGKFwicmVzZXRcIixkKTtGKFwic3VibWl0XCIsZCk7YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpGKFwidG9nZ2xlXCIsZCk7YnJlYWs7Y2FzZSBcImlucHV0XCI6QWIoZCxmKTtGKFwiaW52YWxpZFwiLGQpO3JkKGMsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwic2VsZWN0XCI6ZC5fd3JhcHBlclN0YXRlPVxue3dhc011bHRpcGxlOiEhZi5tdWx0aXBsZX07RihcImludmFsaWRcIixkKTtyZChjLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6SmIoZCxmKSxGKFwiaW52YWxpZFwiLGQpLHJkKGMsXCJvbkNoYW5nZVwiKX1vZChlLGYpO2E9bnVsbDtmb3IodmFyIGcgaW4gZilpZihmLmhhc093blByb3BlcnR5KGcpKXt2YXIgaD1mW2ddO1wiY2hpbGRyZW5cIj09PWc/XCJzdHJpbmdcIj09PXR5cGVvZiBoP2QudGV4dENvbnRlbnQhPT1oJiYoYT1bXCJjaGlsZHJlblwiLGhdKTpcIm51bWJlclwiPT09dHlwZW9mIGgmJmQudGV4dENvbnRlbnQhPT1cIlwiK2gmJihhPVtcImNoaWxkcmVuXCIsXCJcIitoXSk6dmEuaGFzT3duUHJvcGVydHkoZykmJm51bGwhPWgmJnJkKGMsZyl9c3dpdGNoKGUpe2Nhc2UgXCJpbnB1dFwiOnhiKGQpO0ViKGQsZiwhMCk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6eGIoZCk7TGIoZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJvcHRpb25cIjpicmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLm9uQ2xpY2smJlxuKGQub25jbGljaz1zZCl9Yz1hO2IudXBkYXRlUXVldWU9YztudWxsIT09YyYmKGIuZWZmZWN0VGFnfD00KX1lbHNle2c9OT09PWMubm9kZVR5cGU/YzpjLm93bmVyRG9jdW1lbnQ7YT09PXFkJiYoYT1OYihlKSk7YT09PXFkP1wic2NyaXB0XCI9PT1lPyhhPWcuY3JlYXRlRWxlbWVudChcImRpdlwiKSxhLmlubmVySFRNTD1cIjxzY3JpcHQ+XFx4M2Mvc2NyaXB0PlwiLGE9YS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpKTpcInN0cmluZ1wiPT09dHlwZW9mIGQuaXM/YT1nLmNyZWF0ZUVsZW1lbnQoZSx7aXM6ZC5pc30pOihhPWcuY3JlYXRlRWxlbWVudChlKSxcInNlbGVjdFwiPT09ZSYmKGc9YSxkLm11bHRpcGxlP2cubXVsdGlwbGU9ITA6ZC5zaXplJiYoZy5zaXplPWQuc2l6ZSkpKTphPWcuY3JlYXRlRWxlbWVudE5TKGEsZSk7YVtNZF09YjthW05kXT1kO25pKGEsYiwhMSwhMSk7Yi5zdGF0ZU5vZGU9YTtnPXBkKGUsZCk7c3dpdGNoKGUpe2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcImVtYmVkXCI6RihcImxvYWRcIixcbmEpO2g9ZDticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoaD0wO2g8YWMubGVuZ3RoO2grKylGKGFjW2hdLGEpO2g9ZDticmVhaztjYXNlIFwic291cmNlXCI6RihcImVycm9yXCIsYSk7aD1kO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkYoXCJlcnJvclwiLGEpO0YoXCJsb2FkXCIsYSk7aD1kO2JyZWFrO2Nhc2UgXCJmb3JtXCI6RihcInJlc2V0XCIsYSk7RihcInN1Ym1pdFwiLGEpO2g9ZDticmVhaztjYXNlIFwiZGV0YWlsc1wiOkYoXCJ0b2dnbGVcIixhKTtoPWQ7YnJlYWs7Y2FzZSBcImlucHV0XCI6QWIoYSxkKTtoPXpiKGEsZCk7RihcImludmFsaWRcIixhKTtyZChjLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmg9R2IoYSxkKTticmVhaztjYXNlIFwic2VsZWN0XCI6YS5fd3JhcHBlclN0YXRlPXt3YXNNdWx0aXBsZTohIWQubXVsdGlwbGV9O2g9bih7fSxkLHt2YWx1ZTp2b2lkIDB9KTtGKFwiaW52YWxpZFwiLGEpO3JkKGMsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpKYihhLFxuZCk7aD1JYihhLGQpO0YoXCJpbnZhbGlkXCIsYSk7cmQoYyxcIm9uQ2hhbmdlXCIpO2JyZWFrO2RlZmF1bHQ6aD1kfW9kKGUsaCk7dmFyIGs9aDtmb3IoZiBpbiBrKWlmKGsuaGFzT3duUHJvcGVydHkoZikpe3ZhciBsPWtbZl07XCJzdHlsZVwiPT09Zj9tZChhLGwpOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWY/KGw9bD9sLl9faHRtbDp2b2lkIDAsbnVsbCE9bCYmUWIoYSxsKSk6XCJjaGlsZHJlblwiPT09Zj9cInN0cmluZ1wiPT09dHlwZW9mIGw/KFwidGV4dGFyZWFcIiE9PWV8fFwiXCIhPT1sKSYmUmIoYSxsKTpcIm51bWJlclwiPT09dHlwZW9mIGwmJlJiKGEsXCJcIitsKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09ZiYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWYmJlwiYXV0b0ZvY3VzXCIhPT1mJiYodmEuaGFzT3duUHJvcGVydHkoZik/bnVsbCE9bCYmcmQoYyxmKTpudWxsIT1sJiZYYShhLGYsbCxnKSl9c3dpdGNoKGUpe2Nhc2UgXCJpbnB1dFwiOnhiKGEpO0ViKGEsZCwhMSk7XG5icmVhaztjYXNlIFwidGV4dGFyZWFcIjp4YihhKTtMYihhKTticmVhaztjYXNlIFwib3B0aW9uXCI6bnVsbCE9ZC52YWx1ZSYmYS5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLFwiXCIrcmIoZC52YWx1ZSkpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjphLm11bHRpcGxlPSEhZC5tdWx0aXBsZTtjPWQudmFsdWU7bnVsbCE9Yz9IYihhLCEhZC5tdWx0aXBsZSxjLCExKTpudWxsIT1kLmRlZmF1bHRWYWx1ZSYmSGIoYSwhIWQubXVsdGlwbGUsZC5kZWZhdWx0VmFsdWUsITApO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIGgub25DbGljayYmKGEub25jbGljaz1zZCl9RmQoZSxkKSYmKGIuZWZmZWN0VGFnfD00KX1udWxsIT09Yi5yZWYmJihiLmVmZmVjdFRhZ3w9MTI4KX1yZXR1cm4gbnVsbDtjYXNlIDY6aWYoYSYmbnVsbCE9Yi5zdGF0ZU5vZGUpcWkoYSxiLGEubWVtb2l6ZWRQcm9wcyxkKTtlbHNle2lmKFwic3RyaW5nXCIhPT10eXBlb2YgZCYmbnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKHUoMTY2KSk7XG5jPWNoKGJoLmN1cnJlbnQpO2NoKCRnLmN1cnJlbnQpO1doKGIpPyhjPWIuc3RhdGVOb2RlLGQ9Yi5tZW1vaXplZFByb3BzLGNbTWRdPWIsYy5ub2RlVmFsdWUhPT1kJiYoYi5lZmZlY3RUYWd8PTQpKTooYz0oOT09PWMubm9kZVR5cGU/YzpjLm93bmVyRG9jdW1lbnQpLmNyZWF0ZVRleHROb2RlKGQpLGNbTWRdPWIsYi5zdGF0ZU5vZGU9Yyl9cmV0dXJuIG51bGw7Y2FzZSAxMzpIKE0pO2Q9Yi5tZW1vaXplZFN0YXRlO2lmKDAhPT0oYi5lZmZlY3RUYWcmNjQpKXJldHVybiBiLmV4cGlyYXRpb25UaW1lPWMsYjtjPW51bGwhPT1kO2Q9ITE7bnVsbD09PWE/dm9pZCAwIT09Yi5tZW1vaXplZFByb3BzLmZhbGxiYWNrJiZXaChiKTooZT1hLm1lbW9pemVkU3RhdGUsZD1udWxsIT09ZSxjfHxudWxsPT09ZXx8KGU9YS5jaGlsZC5zaWJsaW5nLG51bGwhPT1lJiYoZj1iLmZpcnN0RWZmZWN0LG51bGwhPT1mPyhiLmZpcnN0RWZmZWN0PWUsZS5uZXh0RWZmZWN0PWYpOihiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1cbmUsZS5uZXh0RWZmZWN0PW51bGwpLGUuZWZmZWN0VGFnPTgpKSk7aWYoYyYmIWQmJjAhPT0oYi5tb2RlJjIpKWlmKG51bGw9PT1hJiYhMCE9PWIubWVtb2l6ZWRQcm9wcy51bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFja3x8MCE9PShNLmN1cnJlbnQmMSkpUz09PXRpJiYoUz11aSk7ZWxzZXtpZihTPT09dGl8fFM9PT11aSlTPXZpOzAhPT13aSYmbnVsbCE9PVQmJih4aShULFUpLHlpKFQsd2kpKX1pZihjfHxkKWIuZWZmZWN0VGFnfD00O3JldHVybiBudWxsO2Nhc2UgNDpyZXR1cm4gZWgoKSxvaShiKSxudWxsO2Nhc2UgMTA6cmV0dXJuIG9nKGIpLG51bGw7Y2FzZSAxNzpyZXR1cm4gTChiLnR5cGUpJiZEZigpLG51bGw7Y2FzZSAxOTpIKE0pO2Q9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGw9PT1kKXJldHVybiBudWxsO2U9MCE9PShiLmVmZmVjdFRhZyY2NCk7Zj1kLnJlbmRlcmluZztpZihudWxsPT09ZilpZihlKXJpKGQsITEpO2Vsc2V7aWYoUyE9PXRpfHxudWxsIT09YSYmMCE9PShhLmVmZmVjdFRhZyZcbjY0KSlmb3IoZj1iLmNoaWxkO251bGwhPT1mOyl7YT1oaChmKTtpZihudWxsIT09YSl7Yi5lZmZlY3RUYWd8PTY0O3JpKGQsITEpO2U9YS51cGRhdGVRdWV1ZTtudWxsIT09ZSYmKGIudXBkYXRlUXVldWU9ZSxiLmVmZmVjdFRhZ3w9NCk7bnVsbD09PWQubGFzdEVmZmVjdCYmKGIuZmlyc3RFZmZlY3Q9bnVsbCk7Yi5sYXN0RWZmZWN0PWQubGFzdEVmZmVjdDtmb3IoZD1iLmNoaWxkO251bGwhPT1kOyllPWQsZj1jLGUuZWZmZWN0VGFnJj0yLGUubmV4dEVmZmVjdD1udWxsLGUuZmlyc3RFZmZlY3Q9bnVsbCxlLmxhc3RFZmZlY3Q9bnVsbCxhPWUuYWx0ZXJuYXRlLG51bGw9PT1hPyhlLmNoaWxkRXhwaXJhdGlvblRpbWU9MCxlLmV4cGlyYXRpb25UaW1lPWYsZS5jaGlsZD1udWxsLGUubWVtb2l6ZWRQcm9wcz1udWxsLGUubWVtb2l6ZWRTdGF0ZT1udWxsLGUudXBkYXRlUXVldWU9bnVsbCxlLmRlcGVuZGVuY2llcz1udWxsKTooZS5jaGlsZEV4cGlyYXRpb25UaW1lPWEuY2hpbGRFeHBpcmF0aW9uVGltZSxcbmUuZXhwaXJhdGlvblRpbWU9YS5leHBpcmF0aW9uVGltZSxlLmNoaWxkPWEuY2hpbGQsZS5tZW1vaXplZFByb3BzPWEubWVtb2l6ZWRQcm9wcyxlLm1lbW9pemVkU3RhdGU9YS5tZW1vaXplZFN0YXRlLGUudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZSxmPWEuZGVwZW5kZW5jaWVzLGUuZGVwZW5kZW5jaWVzPW51bGw9PT1mP251bGw6e2V4cGlyYXRpb25UaW1lOmYuZXhwaXJhdGlvblRpbWUsZmlyc3RDb250ZXh0OmYuZmlyc3RDb250ZXh0LHJlc3BvbmRlcnM6Zi5yZXNwb25kZXJzfSksZD1kLnNpYmxpbmc7SShNLE0uY3VycmVudCYxfDIpO3JldHVybiBiLmNoaWxkfWY9Zi5zaWJsaW5nfX1lbHNle2lmKCFlKWlmKGE9aGgoZiksbnVsbCE9PWEpe2lmKGIuZWZmZWN0VGFnfD02NCxlPSEwLGM9YS51cGRhdGVRdWV1ZSxudWxsIT09YyYmKGIudXBkYXRlUXVldWU9YyxiLmVmZmVjdFRhZ3w9NCkscmkoZCwhMCksbnVsbD09PWQudGFpbCYmXCJoaWRkZW5cIj09PWQudGFpbE1vZGUmJiFmLmFsdGVybmF0ZSlyZXR1cm4gYj1cbmIubGFzdEVmZmVjdD1kLmxhc3RFZmZlY3QsbnVsbCE9PWImJihiLm5leHRFZmZlY3Q9bnVsbCksbnVsbH1lbHNlIDIqJGYoKS1kLnJlbmRlcmluZ1N0YXJ0VGltZT5kLnRhaWxFeHBpcmF0aW9uJiYxPGMmJihiLmVmZmVjdFRhZ3w9NjQsZT0hMCxyaShkLCExKSxiLmV4cGlyYXRpb25UaW1lPWIuY2hpbGRFeHBpcmF0aW9uVGltZT1jLTEpO2QuaXNCYWNrd2FyZHM/KGYuc2libGluZz1iLmNoaWxkLGIuY2hpbGQ9Zik6KGM9ZC5sYXN0LG51bGwhPT1jP2Muc2libGluZz1mOmIuY2hpbGQ9ZixkLmxhc3Q9Zil9cmV0dXJuIG51bGwhPT1kLnRhaWw/KDA9PT1kLnRhaWxFeHBpcmF0aW9uJiYoZC50YWlsRXhwaXJhdGlvbj0kZigpKzUwMCksYz1kLnRhaWwsZC5yZW5kZXJpbmc9YyxkLnRhaWw9Yy5zaWJsaW5nLGQubGFzdEVmZmVjdD1iLmxhc3RFZmZlY3QsZC5yZW5kZXJpbmdTdGFydFRpbWU9JGYoKSxjLnNpYmxpbmc9bnVsbCxiPU0uY3VycmVudCxJKE0sZT9iJjF8MjpiJjEpLGMpOm51bGx9dGhyb3cgRXJyb3IodSgxNTYsXG5iLnRhZykpO31mdW5jdGlvbiB6aShhKXtzd2l0Y2goYS50YWcpe2Nhc2UgMTpMKGEudHlwZSkmJkRmKCk7dmFyIGI9YS5lZmZlY3RUYWc7cmV0dXJuIGImNDA5Nj8oYS5lZmZlY3RUYWc9YiYtNDA5N3w2NCxhKTpudWxsO2Nhc2UgMzplaCgpO0goSyk7SChKKTtiPWEuZWZmZWN0VGFnO2lmKDAhPT0oYiY2NCkpdGhyb3cgRXJyb3IodSgyODUpKTthLmVmZmVjdFRhZz1iJi00MDk3fDY0O3JldHVybiBhO2Nhc2UgNTpyZXR1cm4gZ2goYSksbnVsbDtjYXNlIDEzOnJldHVybiBIKE0pLGI9YS5lZmZlY3RUYWcsYiY0MDk2PyhhLmVmZmVjdFRhZz1iJi00MDk3fDY0LGEpOm51bGw7Y2FzZSAxOTpyZXR1cm4gSChNKSxudWxsO2Nhc2UgNDpyZXR1cm4gZWgoKSxudWxsO2Nhc2UgMTA6cmV0dXJuIG9nKGEpLG51bGw7ZGVmYXVsdDpyZXR1cm4gbnVsbH19ZnVuY3Rpb24gQWkoYSxiKXtyZXR1cm57dmFsdWU6YSxzb3VyY2U6YixzdGFjazpxYihiKX19XG52YXIgQmk9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtTZXQ/V2Vha1NldDpTZXQ7ZnVuY3Rpb24gQ2koYSxiKXt2YXIgYz1iLnNvdXJjZSxkPWIuc3RhY2s7bnVsbD09PWQmJm51bGwhPT1jJiYoZD1xYihjKSk7bnVsbCE9PWMmJnBiKGMudHlwZSk7Yj1iLnZhbHVlO251bGwhPT1hJiYxPT09YS50YWcmJnBiKGEudHlwZSk7dHJ5e2NvbnNvbGUuZXJyb3IoYil9Y2F0Y2goZSl7c2V0VGltZW91dChmdW5jdGlvbigpe3Rocm93IGU7fSl9fWZ1bmN0aW9uIERpKGEsYil7dHJ5e2IucHJvcHM9YS5tZW1vaXplZFByb3BzLGIuc3RhdGU9YS5tZW1vaXplZFN0YXRlLGIuY29tcG9uZW50V2lsbFVubW91bnQoKX1jYXRjaChjKXtFaShhLGMpfX1mdW5jdGlvbiBGaShhKXt2YXIgYj1hLnJlZjtpZihudWxsIT09YilpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYil0cnl7YihudWxsKX1jYXRjaChjKXtFaShhLGMpfWVsc2UgYi5jdXJyZW50PW51bGx9XG5mdW5jdGlvbiBHaShhLGIpe3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpjYXNlIDIyOnJldHVybjtjYXNlIDE6aWYoYi5lZmZlY3RUYWcmMjU2JiZudWxsIT09YSl7dmFyIGM9YS5tZW1vaXplZFByb3BzLGQ9YS5tZW1vaXplZFN0YXRlO2E9Yi5zdGF0ZU5vZGU7Yj1hLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKGIuZWxlbWVudFR5cGU9PT1iLnR5cGU/YzppZyhiLnR5cGUsYyksZCk7YS5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZT1ifXJldHVybjtjYXNlIDM6Y2FzZSA1OmNhc2UgNjpjYXNlIDQ6Y2FzZSAxNzpyZXR1cm59dGhyb3cgRXJyb3IodSgxNjMpKTt9XG5mdW5jdGlvbiBIaShhLGIpe2I9Yi51cGRhdGVRdWV1ZTtiPW51bGwhPT1iP2IubGFzdEVmZmVjdDpudWxsO2lmKG51bGwhPT1iKXt2YXIgYz1iPWIubmV4dDtkb3tpZigoYy50YWcmYSk9PT1hKXt2YXIgZD1jLmRlc3Ryb3k7Yy5kZXN0cm95PXZvaWQgMDt2b2lkIDAhPT1kJiZkKCl9Yz1jLm5leHR9d2hpbGUoYyE9PWIpfX1mdW5jdGlvbiBJaShhLGIpe2I9Yi51cGRhdGVRdWV1ZTtiPW51bGwhPT1iP2IubGFzdEVmZmVjdDpudWxsO2lmKG51bGwhPT1iKXt2YXIgYz1iPWIubmV4dDtkb3tpZigoYy50YWcmYSk9PT1hKXt2YXIgZD1jLmNyZWF0ZTtjLmRlc3Ryb3k9ZCgpfWM9Yy5uZXh0fXdoaWxlKGMhPT1iKX19XG5mdW5jdGlvbiBKaShhLGIsYyl7c3dpdGNoKGMudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OmNhc2UgMjI6SWkoMyxjKTtyZXR1cm47Y2FzZSAxOmE9Yy5zdGF0ZU5vZGU7aWYoYy5lZmZlY3RUYWcmNClpZihudWxsPT09YilhLmNvbXBvbmVudERpZE1vdW50KCk7ZWxzZXt2YXIgZD1jLmVsZW1lbnRUeXBlPT09Yy50eXBlP2IubWVtb2l6ZWRQcm9wczppZyhjLnR5cGUsYi5tZW1vaXplZFByb3BzKTthLmNvbXBvbmVudERpZFVwZGF0ZShkLGIubWVtb2l6ZWRTdGF0ZSxhLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlKX1iPWMudXBkYXRlUXVldWU7bnVsbCE9PWImJkNnKGMsYixhKTtyZXR1cm47Y2FzZSAzOmI9Yy51cGRhdGVRdWV1ZTtpZihudWxsIT09Yil7YT1udWxsO2lmKG51bGwhPT1jLmNoaWxkKXN3aXRjaChjLmNoaWxkLnRhZyl7Y2FzZSA1OmE9Yy5jaGlsZC5zdGF0ZU5vZGU7YnJlYWs7Y2FzZSAxOmE9Yy5jaGlsZC5zdGF0ZU5vZGV9Q2coYyxiLGEpfXJldHVybjtcbmNhc2UgNTphPWMuc3RhdGVOb2RlO251bGw9PT1iJiZjLmVmZmVjdFRhZyY0JiZGZChjLnR5cGUsYy5tZW1vaXplZFByb3BzKSYmYS5mb2N1cygpO3JldHVybjtjYXNlIDY6cmV0dXJuO2Nhc2UgNDpyZXR1cm47Y2FzZSAxMjpyZXR1cm47Y2FzZSAxMzpudWxsPT09Yy5tZW1vaXplZFN0YXRlJiYoYz1jLmFsdGVybmF0ZSxudWxsIT09YyYmKGM9Yy5tZW1vaXplZFN0YXRlLG51bGwhPT1jJiYoYz1jLmRlaHlkcmF0ZWQsbnVsbCE9PWMmJlZjKGMpKSkpO3JldHVybjtjYXNlIDE5OmNhc2UgMTc6Y2FzZSAyMDpjYXNlIDIxOnJldHVybn10aHJvdyBFcnJvcih1KDE2MykpO31cbmZ1bmN0aW9uIEtpKGEsYixjKXtcImZ1bmN0aW9uXCI9PT10eXBlb2YgTGkmJkxpKGIpO3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OmNhc2UgMjI6YT1iLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1hJiYoYT1hLmxhc3RFZmZlY3QsbnVsbCE9PWEpKXt2YXIgZD1hLm5leHQ7Y2coOTc8Yz85NzpjLGZ1bmN0aW9uKCl7dmFyIGE9ZDtkb3t2YXIgYz1hLmRlc3Ryb3k7aWYodm9pZCAwIT09Yyl7dmFyIGc9Yjt0cnl7YygpfWNhdGNoKGgpe0VpKGcsaCl9fWE9YS5uZXh0fXdoaWxlKGEhPT1kKX0pfWJyZWFrO2Nhc2UgMTpGaShiKTtjPWIuc3RhdGVOb2RlO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBjLmNvbXBvbmVudFdpbGxVbm1vdW50JiZEaShiLGMpO2JyZWFrO2Nhc2UgNTpGaShiKTticmVhaztjYXNlIDQ6TWkoYSxiLGMpfX1cbmZ1bmN0aW9uIE5pKGEpe3ZhciBiPWEuYWx0ZXJuYXRlO2EucmV0dXJuPW51bGw7YS5jaGlsZD1udWxsO2EubWVtb2l6ZWRTdGF0ZT1udWxsO2EudXBkYXRlUXVldWU9bnVsbDthLmRlcGVuZGVuY2llcz1udWxsO2EuYWx0ZXJuYXRlPW51bGw7YS5maXJzdEVmZmVjdD1udWxsO2EubGFzdEVmZmVjdD1udWxsO2EucGVuZGluZ1Byb3BzPW51bGw7YS5tZW1vaXplZFByb3BzPW51bGw7YS5zdGF0ZU5vZGU9bnVsbDtudWxsIT09YiYmTmkoYil9ZnVuY3Rpb24gT2koYSl7cmV0dXJuIDU9PT1hLnRhZ3x8Mz09PWEudGFnfHw0PT09YS50YWd9XG5mdW5jdGlvbiBQaShhKXthOntmb3IodmFyIGI9YS5yZXR1cm47bnVsbCE9PWI7KXtpZihPaShiKSl7dmFyIGM9YjticmVhayBhfWI9Yi5yZXR1cm59dGhyb3cgRXJyb3IodSgxNjApKTt9Yj1jLnN0YXRlTm9kZTtzd2l0Y2goYy50YWcpe2Nhc2UgNTp2YXIgZD0hMTticmVhaztjYXNlIDM6Yj1iLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztjYXNlIDQ6Yj1iLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHUoMTYxKSk7fWMuZWZmZWN0VGFnJjE2JiYoUmIoYixcIlwiKSxjLmVmZmVjdFRhZyY9LTE3KTthOmI6Zm9yKGM9YTs7KXtmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fE9pKGMucmV0dXJuKSl7Yz1udWxsO2JyZWFrIGF9Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2ZvcihjPWMuc2libGluZzs1IT09Yy50YWcmJjYhPT1jLnRhZyYmMTghPT1jLnRhZzspe2lmKGMuZWZmZWN0VGFnJjIpY29udGludWUgYjtcbmlmKG51bGw9PT1jLmNoaWxkfHw0PT09Yy50YWcpY29udGludWUgYjtlbHNlIGMuY2hpbGQucmV0dXJuPWMsYz1jLmNoaWxkfWlmKCEoYy5lZmZlY3RUYWcmMikpe2M9Yy5zdGF0ZU5vZGU7YnJlYWsgYX19ZD9RaShhLGMsYik6UmkoYSxjLGIpfVxuZnVuY3Rpb24gUWkoYSxiLGMpe3ZhciBkPWEudGFnLGU9NT09PWR8fDY9PT1kO2lmKGUpYT1lP2Euc3RhdGVOb2RlOmEuc3RhdGVOb2RlLmluc3RhbmNlLGI/OD09PWMubm9kZVR5cGU/Yy5wYXJlbnROb2RlLmluc2VydEJlZm9yZShhLGIpOmMuaW5zZXJ0QmVmb3JlKGEsYik6KDg9PT1jLm5vZGVUeXBlPyhiPWMucGFyZW50Tm9kZSxiLmluc2VydEJlZm9yZShhLGMpKTooYj1jLGIuYXBwZW5kQ2hpbGQoYSkpLGM9Yy5fcmVhY3RSb290Q29udGFpbmVyLG51bGwhPT1jJiZ2b2lkIDAhPT1jfHxudWxsIT09Yi5vbmNsaWNrfHwoYi5vbmNsaWNrPXNkKSk7ZWxzZSBpZig0IT09ZCYmKGE9YS5jaGlsZCxudWxsIT09YSkpZm9yKFFpKGEsYixjKSxhPWEuc2libGluZztudWxsIT09YTspUWkoYSxiLGMpLGE9YS5zaWJsaW5nfVxuZnVuY3Rpb24gUmkoYSxiLGMpe3ZhciBkPWEudGFnLGU9NT09PWR8fDY9PT1kO2lmKGUpYT1lP2Euc3RhdGVOb2RlOmEuc3RhdGVOb2RlLmluc3RhbmNlLGI/Yy5pbnNlcnRCZWZvcmUoYSxiKTpjLmFwcGVuZENoaWxkKGEpO2Vsc2UgaWYoNCE9PWQmJihhPWEuY2hpbGQsbnVsbCE9PWEpKWZvcihSaShhLGIsYyksYT1hLnNpYmxpbmc7bnVsbCE9PWE7KVJpKGEsYixjKSxhPWEuc2libGluZ31cbmZ1bmN0aW9uIE1pKGEsYixjKXtmb3IodmFyIGQ9YixlPSExLGYsZzs7KXtpZighZSl7ZT1kLnJldHVybjthOmZvcig7Oyl7aWYobnVsbD09PWUpdGhyb3cgRXJyb3IodSgxNjApKTtmPWUuc3RhdGVOb2RlO3N3aXRjaChlLnRhZyl7Y2FzZSA1Omc9ITE7YnJlYWsgYTtjYXNlIDM6Zj1mLmNvbnRhaW5lckluZm87Zz0hMDticmVhayBhO2Nhc2UgNDpmPWYuY29udGFpbmVySW5mbztnPSEwO2JyZWFrIGF9ZT1lLnJldHVybn1lPSEwfWlmKDU9PT1kLnRhZ3x8Nj09PWQudGFnKXthOmZvcih2YXIgaD1hLGs9ZCxsPWMsbT1rOzspaWYoS2koaCxtLGwpLG51bGwhPT1tLmNoaWxkJiY0IT09bS50YWcpbS5jaGlsZC5yZXR1cm49bSxtPW0uY2hpbGQ7ZWxzZXtpZihtPT09aylicmVhayBhO2Zvcig7bnVsbD09PW0uc2libGluZzspe2lmKG51bGw9PT1tLnJldHVybnx8bS5yZXR1cm49PT1rKWJyZWFrIGE7bT1tLnJldHVybn1tLnNpYmxpbmcucmV0dXJuPW0ucmV0dXJuO209bS5zaWJsaW5nfWc/KGg9XG5mLGs9ZC5zdGF0ZU5vZGUsOD09PWgubm9kZVR5cGU/aC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGspOmgucmVtb3ZlQ2hpbGQoaykpOmYucmVtb3ZlQ2hpbGQoZC5zdGF0ZU5vZGUpfWVsc2UgaWYoND09PWQudGFnKXtpZihudWxsIT09ZC5jaGlsZCl7Zj1kLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2c9ITA7ZC5jaGlsZC5yZXR1cm49ZDtkPWQuY2hpbGQ7Y29udGludWV9fWVsc2UgaWYoS2koYSxkLGMpLG51bGwhPT1kLmNoaWxkKXtkLmNoaWxkLnJldHVybj1kO2Q9ZC5jaGlsZDtjb250aW51ZX1pZihkPT09YilicmVhaztmb3IoO251bGw9PT1kLnNpYmxpbmc7KXtpZihudWxsPT09ZC5yZXR1cm58fGQucmV0dXJuPT09YilyZXR1cm47ZD1kLnJldHVybjs0PT09ZC50YWcmJihlPSExKX1kLnNpYmxpbmcucmV0dXJuPWQucmV0dXJuO2Q9ZC5zaWJsaW5nfX1cbmZ1bmN0aW9uIFNpKGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6Y2FzZSAyMjpIaSgzLGIpO3JldHVybjtjYXNlIDE6cmV0dXJuO2Nhc2UgNTp2YXIgYz1iLnN0YXRlTm9kZTtpZihudWxsIT1jKXt2YXIgZD1iLm1lbW9pemVkUHJvcHMsZT1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6ZDthPWIudHlwZTt2YXIgZj1iLnVwZGF0ZVF1ZXVlO2IudXBkYXRlUXVldWU9bnVsbDtpZihudWxsIT09Zil7Y1tOZF09ZDtcImlucHV0XCI9PT1hJiZcInJhZGlvXCI9PT1kLnR5cGUmJm51bGwhPWQubmFtZSYmQmIoYyxkKTtwZChhLGUpO2I9cGQoYSxkKTtmb3IoZT0wO2U8Zi5sZW5ndGg7ZSs9Mil7dmFyIGc9ZltlXSxoPWZbZSsxXTtcInN0eWxlXCI9PT1nP21kKGMsaCk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Zz9RYihjLGgpOlwiY2hpbGRyZW5cIj09PWc/UmIoYyxoKTpYYShjLGcsaCxiKX1zd2l0Y2goYSl7Y2FzZSBcImlucHV0XCI6Q2IoYyxkKTticmVhaztcbmNhc2UgXCJ0ZXh0YXJlYVwiOktiKGMsZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9Yy5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlLGMuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZT0hIWQubXVsdGlwbGUsYT1kLnZhbHVlLG51bGwhPWE/SGIoYywhIWQubXVsdGlwbGUsYSwhMSk6YiE9PSEhZC5tdWx0aXBsZSYmKG51bGwhPWQuZGVmYXVsdFZhbHVlP0hiKGMsISFkLm11bHRpcGxlLGQuZGVmYXVsdFZhbHVlLCEwKTpIYihjLCEhZC5tdWx0aXBsZSxkLm11bHRpcGxlP1tdOlwiXCIsITEpKX19fXJldHVybjtjYXNlIDY6aWYobnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKHUoMTYyKSk7Yi5zdGF0ZU5vZGUubm9kZVZhbHVlPWIubWVtb2l6ZWRQcm9wcztyZXR1cm47Y2FzZSAzOmI9Yi5zdGF0ZU5vZGU7Yi5oeWRyYXRlJiYoYi5oeWRyYXRlPSExLFZjKGIuY29udGFpbmVySW5mbykpO3JldHVybjtjYXNlIDEyOnJldHVybjtjYXNlIDEzOmM9YjtudWxsPT09Yi5tZW1vaXplZFN0YXRlP1xuZD0hMTooZD0hMCxjPWIuY2hpbGQsVGk9JGYoKSk7aWYobnVsbCE9PWMpYTpmb3IoYT1jOzspe2lmKDU9PT1hLnRhZylmPWEuc3RhdGVOb2RlLGQ/KGY9Zi5zdHlsZSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5zZXRQcm9wZXJ0eT9mLnNldFByb3BlcnR5KFwiZGlzcGxheVwiLFwibm9uZVwiLFwiaW1wb3J0YW50XCIpOmYuZGlzcGxheT1cIm5vbmVcIik6KGY9YS5zdGF0ZU5vZGUsZT1hLm1lbW9pemVkUHJvcHMuc3R5bGUsZT12b2lkIDAhPT1lJiZudWxsIT09ZSYmZS5oYXNPd25Qcm9wZXJ0eShcImRpc3BsYXlcIik/ZS5kaXNwbGF5Om51bGwsZi5zdHlsZS5kaXNwbGF5PWxkKFwiZGlzcGxheVwiLGUpKTtlbHNlIGlmKDY9PT1hLnRhZylhLnN0YXRlTm9kZS5ub2RlVmFsdWU9ZD9cIlwiOmEubWVtb2l6ZWRQcm9wcztlbHNlIGlmKDEzPT09YS50YWcmJm51bGwhPT1hLm1lbW9pemVkU3RhdGUmJm51bGw9PT1hLm1lbW9pemVkU3RhdGUuZGVoeWRyYXRlZCl7Zj1hLmNoaWxkLnNpYmxpbmc7Zi5yZXR1cm49YTthPVxuZjtjb250aW51ZX1lbHNlIGlmKG51bGwhPT1hLmNoaWxkKXthLmNoaWxkLnJldHVybj1hO2E9YS5jaGlsZDtjb250aW51ZX1pZihhPT09YylicmVhaztmb3IoO251bGw9PT1hLnNpYmxpbmc7KXtpZihudWxsPT09YS5yZXR1cm58fGEucmV0dXJuPT09YylicmVhayBhO2E9YS5yZXR1cm59YS5zaWJsaW5nLnJldHVybj1hLnJldHVybjthPWEuc2libGluZ31VaShiKTtyZXR1cm47Y2FzZSAxOTpVaShiKTtyZXR1cm47Y2FzZSAxNzpyZXR1cm59dGhyb3cgRXJyb3IodSgxNjMpKTt9ZnVuY3Rpb24gVWkoYSl7dmFyIGI9YS51cGRhdGVRdWV1ZTtpZihudWxsIT09Yil7YS51cGRhdGVRdWV1ZT1udWxsO3ZhciBjPWEuc3RhdGVOb2RlO251bGw9PT1jJiYoYz1hLnN0YXRlTm9kZT1uZXcgQmkpO2IuZm9yRWFjaChmdW5jdGlvbihiKXt2YXIgZD1WaS5iaW5kKG51bGwsYSxiKTtjLmhhcyhiKXx8KGMuYWRkKGIpLGIudGhlbihkLGQpKX0pfX1cbnZhciBXaT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha01hcD9XZWFrTWFwOk1hcDtmdW5jdGlvbiBYaShhLGIsYyl7Yz13ZyhjLG51bGwpO2MudGFnPTM7Yy5wYXlsb2FkPXtlbGVtZW50Om51bGx9O3ZhciBkPWIudmFsdWU7Yy5jYWxsYmFjaz1mdW5jdGlvbigpe1lpfHwoWWk9ITAsWmk9ZCk7Q2koYSxiKX07cmV0dXJuIGN9XG5mdW5jdGlvbiAkaShhLGIsYyl7Yz13ZyhjLG51bGwpO2MudGFnPTM7dmFyIGQ9YS50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcjtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZCl7dmFyIGU9Yi52YWx1ZTtjLnBheWxvYWQ9ZnVuY3Rpb24oKXtDaShhLGIpO3JldHVybiBkKGUpfX12YXIgZj1hLnN0YXRlTm9kZTtudWxsIT09ZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGYuY29tcG9uZW50RGlkQ2F0Y2gmJihjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7XCJmdW5jdGlvblwiIT09dHlwZW9mIGQmJihudWxsPT09YWo/YWo9bmV3IFNldChbdGhpc10pOmFqLmFkZCh0aGlzKSxDaShhLGIpKTt2YXIgYz1iLnN0YWNrO3RoaXMuY29tcG9uZW50RGlkQ2F0Y2goYi52YWx1ZSx7Y29tcG9uZW50U3RhY2s6bnVsbCE9PWM/YzpcIlwifSl9KTtyZXR1cm4gY31cbnZhciBiaj1NYXRoLmNlaWwsY2o9V2EuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixkaj1XYS5SZWFjdEN1cnJlbnRPd25lcixWPTAsZWo9OCxmaj0xNixnaj0zMix0aT0wLGhqPTEsaWo9Mix1aT0zLHZpPTQsamo9NSxXPVYsVD1udWxsLFg9bnVsbCxVPTAsUz10aSxraj1udWxsLGxqPTEwNzM3NDE4MjMsbWo9MTA3Mzc0MTgyMyxuaj1udWxsLHdpPTAsb2o9ITEsVGk9MCxwaj01MDAsWT1udWxsLFlpPSExLFppPW51bGwsYWo9bnVsbCxxaj0hMSxyaj1udWxsLHNqPTkwLHRqPW51bGwsdWo9MCx2aj1udWxsLHdqPTA7ZnVuY3Rpb24gR2coKXtyZXR1cm4oVyYoZmp8Z2opKSE9PVY/MTA3Mzc0MTgyMS0oJGYoKS8xMHwwKTowIT09d2o/d2o6d2o9MTA3Mzc0MTgyMS0oJGYoKS8xMHwwKX1cbmZ1bmN0aW9uIEhnKGEsYixjKXtiPWIubW9kZTtpZigwPT09KGImMikpcmV0dXJuIDEwNzM3NDE4MjM7dmFyIGQ9YWcoKTtpZigwPT09KGImNCkpcmV0dXJuIDk5PT09ZD8xMDczNzQxODIzOjEwNzM3NDE4MjI7aWYoKFcmZmopIT09VilyZXR1cm4gVTtpZihudWxsIT09YylhPWhnKGEsYy50aW1lb3V0TXN8MHx8NUUzLDI1MCk7ZWxzZSBzd2l0Y2goZCl7Y2FzZSA5OTphPTEwNzM3NDE4MjM7YnJlYWs7Y2FzZSA5ODphPWhnKGEsMTUwLDEwMCk7YnJlYWs7Y2FzZSA5NzpjYXNlIDk2OmE9aGcoYSw1RTMsMjUwKTticmVhaztjYXNlIDk1OmE9MjticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHUoMzI2KSk7fW51bGwhPT1UJiZhPT09VSYmLS1hO3JldHVybiBhfVxuZnVuY3Rpb24gSWcoYSxiKXtpZig1MDx1ail0aHJvdyB1aj0wLHZqPW51bGwsRXJyb3IodSgxODUpKTthPXhqKGEsYik7aWYobnVsbCE9PWEpe3ZhciBjPWFnKCk7MTA3Mzc0MTgyMz09PWI/KFcmZWopIT09ViYmKFcmKGZqfGdqKSk9PT1WP3lqKGEpOihaKGEpLFc9PT1WJiZnZygpKTpaKGEpOyhXJjQpPT09Vnx8OTghPT1jJiY5OSE9PWN8fChudWxsPT09dGo/dGo9bmV3IE1hcChbW2EsYl1dKTooYz10ai5nZXQoYSksKHZvaWQgMD09PWN8fGM+YikmJnRqLnNldChhLGIpKSl9fVxuZnVuY3Rpb24geGooYSxiKXthLmV4cGlyYXRpb25UaW1lPGImJihhLmV4cGlyYXRpb25UaW1lPWIpO3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiZjLmV4cGlyYXRpb25UaW1lPGImJihjLmV4cGlyYXRpb25UaW1lPWIpO3ZhciBkPWEucmV0dXJuLGU9bnVsbDtpZihudWxsPT09ZCYmMz09PWEudGFnKWU9YS5zdGF0ZU5vZGU7ZWxzZSBmb3IoO251bGwhPT1kOyl7Yz1kLmFsdGVybmF0ZTtkLmNoaWxkRXhwaXJhdGlvblRpbWU8YiYmKGQuY2hpbGRFeHBpcmF0aW9uVGltZT1iKTtudWxsIT09YyYmYy5jaGlsZEV4cGlyYXRpb25UaW1lPGImJihjLmNoaWxkRXhwaXJhdGlvblRpbWU9Yik7aWYobnVsbD09PWQucmV0dXJuJiYzPT09ZC50YWcpe2U9ZC5zdGF0ZU5vZGU7YnJlYWt9ZD1kLnJldHVybn1udWxsIT09ZSYmKFQ9PT1lJiYoQmcoYiksUz09PXZpJiZ4aShlLFUpKSx5aShlLGIpKTtyZXR1cm4gZX1cbmZ1bmN0aW9uIHpqKGEpe3ZhciBiPWEubGFzdEV4cGlyZWRUaW1lO2lmKDAhPT1iKXJldHVybiBiO2I9YS5maXJzdFBlbmRpbmdUaW1lO2lmKCFBaihhLGIpKXJldHVybiBiO3ZhciBjPWEubGFzdFBpbmdlZFRpbWU7YT1hLm5leHRLbm93blBlbmRpbmdMZXZlbDthPWM+YT9jOmE7cmV0dXJuIDI+PWEmJmIhPT1hPzA6YX1cbmZ1bmN0aW9uIFooYSl7aWYoMCE9PWEubGFzdEV4cGlyZWRUaW1lKWEuY2FsbGJhY2tFeHBpcmF0aW9uVGltZT0xMDczNzQxODIzLGEuY2FsbGJhY2tQcmlvcml0eT05OSxhLmNhbGxiYWNrTm9kZT1lZyh5ai5iaW5kKG51bGwsYSkpO2Vsc2V7dmFyIGI9emooYSksYz1hLmNhbGxiYWNrTm9kZTtpZigwPT09YiludWxsIT09YyYmKGEuY2FsbGJhY2tOb2RlPW51bGwsYS5jYWxsYmFja0V4cGlyYXRpb25UaW1lPTAsYS5jYWxsYmFja1ByaW9yaXR5PTkwKTtlbHNle3ZhciBkPUdnKCk7MTA3Mzc0MTgyMz09PWI/ZD05OToxPT09Ynx8Mj09PWI/ZD05NTooZD0xMCooMTA3Mzc0MTgyMS1iKS0xMCooMTA3Mzc0MTgyMS1kKSxkPTA+PWQ/OTk6MjUwPj1kPzk4OjUyNTA+PWQ/OTc6OTUpO2lmKG51bGwhPT1jKXt2YXIgZT1hLmNhbGxiYWNrUHJpb3JpdHk7aWYoYS5jYWxsYmFja0V4cGlyYXRpb25UaW1lPT09YiYmZT49ZClyZXR1cm47YyE9PVRmJiZLZihjKX1hLmNhbGxiYWNrRXhwaXJhdGlvblRpbWU9XG5iO2EuY2FsbGJhY2tQcmlvcml0eT1kO2I9MTA3Mzc0MTgyMz09PWI/ZWcoeWouYmluZChudWxsLGEpKTpkZyhkLEJqLmJpbmQobnVsbCxhKSx7dGltZW91dDoxMCooMTA3Mzc0MTgyMS1iKS0kZigpfSk7YS5jYWxsYmFja05vZGU9Yn19fVxuZnVuY3Rpb24gQmooYSxiKXt3aj0wO2lmKGIpcmV0dXJuIGI9R2coKSxDaihhLGIpLFooYSksbnVsbDt2YXIgYz16aihhKTtpZigwIT09Yyl7Yj1hLmNhbGxiYWNrTm9kZTtpZigoVyYoZmp8Z2opKSE9PVYpdGhyb3cgRXJyb3IodSgzMjcpKTtEaigpO2E9PT1UJiZjPT09VXx8RWooYSxjKTtpZihudWxsIT09WCl7dmFyIGQ9VztXfD1majt2YXIgZT1GaigpO2RvIHRyeXtHaigpO2JyZWFrfWNhdGNoKGgpe0hqKGEsaCl9d2hpbGUoMSk7bmcoKTtXPWQ7Y2ouY3VycmVudD1lO2lmKFM9PT1oail0aHJvdyBiPWtqLEVqKGEsYykseGkoYSxjKSxaKGEpLGI7aWYobnVsbD09PVgpc3dpdGNoKGU9YS5maW5pc2hlZFdvcms9YS5jdXJyZW50LmFsdGVybmF0ZSxhLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9YyxkPVMsVD1udWxsLGQpe2Nhc2UgdGk6Y2FzZSBoajp0aHJvdyBFcnJvcih1KDM0NSkpO2Nhc2UgaWo6Q2ooYSwyPGM/MjpjKTticmVhaztjYXNlIHVpOnhpKGEsYyk7ZD1hLmxhc3RTdXNwZW5kZWRUaW1lO1xuYz09PWQmJihhLm5leHRLbm93blBlbmRpbmdMZXZlbD1JaihlKSk7aWYoMTA3Mzc0MTgyMz09PWxqJiYoZT1UaStwai0kZigpLDEwPGUpKXtpZihvail7dmFyIGY9YS5sYXN0UGluZ2VkVGltZTtpZigwPT09Znx8Zj49Yyl7YS5sYXN0UGluZ2VkVGltZT1jO0VqKGEsYyk7YnJlYWt9fWY9emooYSk7aWYoMCE9PWYmJmYhPT1jKWJyZWFrO2lmKDAhPT1kJiZkIT09Yyl7YS5sYXN0UGluZ2VkVGltZT1kO2JyZWFrfWEudGltZW91dEhhbmRsZT1IZChKai5iaW5kKG51bGwsYSksZSk7YnJlYWt9SmooYSk7YnJlYWs7Y2FzZSB2aTp4aShhLGMpO2Q9YS5sYXN0U3VzcGVuZGVkVGltZTtjPT09ZCYmKGEubmV4dEtub3duUGVuZGluZ0xldmVsPUlqKGUpKTtpZihvaiYmKGU9YS5sYXN0UGluZ2VkVGltZSwwPT09ZXx8ZT49Yykpe2EubGFzdFBpbmdlZFRpbWU9YztFaihhLGMpO2JyZWFrfWU9emooYSk7aWYoMCE9PWUmJmUhPT1jKWJyZWFrO2lmKDAhPT1kJiZkIT09Yyl7YS5sYXN0UGluZ2VkVGltZT1cbmQ7YnJlYWt9MTA3Mzc0MTgyMyE9PW1qP2Q9MTAqKDEwNzM3NDE4MjEtbWopLSRmKCk6MTA3Mzc0MTgyMz09PWxqP2Q9MDooZD0xMCooMTA3Mzc0MTgyMS1saiktNUUzLGU9JGYoKSxjPTEwKigxMDczNzQxODIxLWMpLWUsZD1lLWQsMD5kJiYoZD0wKSxkPSgxMjA+ZD8xMjA6NDgwPmQ/NDgwOjEwODA+ZD8xMDgwOjE5MjA+ZD8xOTIwOjNFMz5kPzNFMzo0MzIwPmQ/NDMyMDoxOTYwKmJqKGQvMTk2MCkpLWQsYzxkJiYoZD1jKSk7aWYoMTA8ZCl7YS50aW1lb3V0SGFuZGxlPUhkKEpqLmJpbmQobnVsbCxhKSxkKTticmVha31KaihhKTticmVhaztjYXNlIGpqOmlmKDEwNzM3NDE4MjMhPT1saiYmbnVsbCE9PW5qKXtmPWxqO3ZhciBnPW5qO2Q9Zy5idXN5TWluRHVyYXRpb25Nc3wwOzA+PWQ/ZD0wOihlPWcuYnVzeURlbGF5TXN8MCxmPSRmKCktKDEwKigxMDczNzQxODIxLWYpLShnLnRpbWVvdXRNc3wwfHw1RTMpKSxkPWY8PWU/MDplK2QtZik7aWYoMTA8ZCl7eGkoYSxjKTthLnRpbWVvdXRIYW5kbGU9XG5IZChKai5iaW5kKG51bGwsYSksZCk7YnJlYWt9fUpqKGEpO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IodSgzMjkpKTt9WihhKTtpZihhLmNhbGxiYWNrTm9kZT09PWIpcmV0dXJuIEJqLmJpbmQobnVsbCxhKX19cmV0dXJuIG51bGx9XG5mdW5jdGlvbiB5aihhKXt2YXIgYj1hLmxhc3RFeHBpcmVkVGltZTtiPTAhPT1iP2I6MTA3Mzc0MTgyMztpZigoVyYoZmp8Z2opKSE9PVYpdGhyb3cgRXJyb3IodSgzMjcpKTtEaigpO2E9PT1UJiZiPT09VXx8RWooYSxiKTtpZihudWxsIT09WCl7dmFyIGM9VztXfD1majt2YXIgZD1GaigpO2RvIHRyeXtLaigpO2JyZWFrfWNhdGNoKGUpe0hqKGEsZSl9d2hpbGUoMSk7bmcoKTtXPWM7Y2ouY3VycmVudD1kO2lmKFM9PT1oail0aHJvdyBjPWtqLEVqKGEsYikseGkoYSxiKSxaKGEpLGM7aWYobnVsbCE9PVgpdGhyb3cgRXJyb3IodSgyNjEpKTthLmZpbmlzaGVkV29yaz1hLmN1cnJlbnQuYWx0ZXJuYXRlO2EuZmluaXNoZWRFeHBpcmF0aW9uVGltZT1iO1Q9bnVsbDtKaihhKTtaKGEpfXJldHVybiBudWxsfWZ1bmN0aW9uIExqKCl7aWYobnVsbCE9PXRqKXt2YXIgYT10ajt0aj1udWxsO2EuZm9yRWFjaChmdW5jdGlvbihhLGMpe0NqKGMsYSk7WihjKX0pO2dnKCl9fVxuZnVuY3Rpb24gTWooYSxiKXt2YXIgYz1XO1d8PTE7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7Vz1jLFc9PT1WJiZnZygpfX1mdW5jdGlvbiBOaihhLGIpe3ZhciBjPVc7VyY9LTI7V3w9ZWo7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7Vz1jLFc9PT1WJiZnZygpfX1cbmZ1bmN0aW9uIEVqKGEsYil7YS5maW5pc2hlZFdvcms9bnVsbDthLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9MDt2YXIgYz1hLnRpbWVvdXRIYW5kbGU7LTEhPT1jJiYoYS50aW1lb3V0SGFuZGxlPS0xLElkKGMpKTtpZihudWxsIT09WClmb3IoYz1YLnJldHVybjtudWxsIT09Yzspe3ZhciBkPWM7c3dpdGNoKGQudGFnKXtjYXNlIDE6ZD1kLnR5cGUuY2hpbGRDb250ZXh0VHlwZXM7bnVsbCE9PWQmJnZvaWQgMCE9PWQmJkRmKCk7YnJlYWs7Y2FzZSAzOmVoKCk7SChLKTtIKEopO2JyZWFrO2Nhc2UgNTpnaChkKTticmVhaztjYXNlIDQ6ZWgoKTticmVhaztjYXNlIDEzOkgoTSk7YnJlYWs7Y2FzZSAxOTpIKE0pO2JyZWFrO2Nhc2UgMTA6b2coZCl9Yz1jLnJldHVybn1UPWE7WD1TZyhhLmN1cnJlbnQsbnVsbCk7VT1iO1M9dGk7a2o9bnVsbDttaj1saj0xMDczNzQxODIzO25qPW51bGw7d2k9MDtvaj0hMX1cbmZ1bmN0aW9uIEhqKGEsYil7ZG97dHJ5e25nKCk7amguY3VycmVudD1zaDtpZihtaClmb3IodmFyIGM9Ti5tZW1vaXplZFN0YXRlO251bGwhPT1jOyl7dmFyIGQ9Yy5xdWV1ZTtudWxsIT09ZCYmKGQucGVuZGluZz1udWxsKTtjPWMubmV4dH1saD0wO1A9Tz1OPW51bGw7bWg9ITE7aWYobnVsbD09PVh8fG51bGw9PT1YLnJldHVybilyZXR1cm4gUz1oaixraj1iLFg9bnVsbDthOnt2YXIgZT1hLGY9WC5yZXR1cm4sZz1YLGg9YjtiPVU7Zy5lZmZlY3RUYWd8PTIwNDg7Zy5maXJzdEVmZmVjdD1nLmxhc3RFZmZlY3Q9bnVsbDtpZihudWxsIT09aCYmXCJvYmplY3RcIj09PXR5cGVvZiBoJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgaC50aGVuKXt2YXIgaz1oO2lmKDA9PT0oZy5tb2RlJjIpKXt2YXIgbD1nLmFsdGVybmF0ZTtsPyhnLnVwZGF0ZVF1ZXVlPWwudXBkYXRlUXVldWUsZy5tZW1vaXplZFN0YXRlPWwubWVtb2l6ZWRTdGF0ZSxnLmV4cGlyYXRpb25UaW1lPWwuZXhwaXJhdGlvblRpbWUpOihnLnVwZGF0ZVF1ZXVlPVxubnVsbCxnLm1lbW9pemVkU3RhdGU9bnVsbCl9dmFyIG09MCE9PShNLmN1cnJlbnQmMSkscD1mO2Rve3ZhciB4O2lmKHg9MTM9PT1wLnRhZyl7dmFyIHo9cC5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT16KXg9bnVsbCE9PXouZGVoeWRyYXRlZD8hMDohMTtlbHNle3ZhciBjYT1wLm1lbW9pemVkUHJvcHM7eD12b2lkIDA9PT1jYS5mYWxsYmFjaz8hMTohMCE9PWNhLnVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrPyEwOm0/ITE6ITB9fWlmKHgpe3ZhciBEPXAudXBkYXRlUXVldWU7aWYobnVsbD09PUQpe3ZhciB0PW5ldyBTZXQ7dC5hZGQoayk7cC51cGRhdGVRdWV1ZT10fWVsc2UgRC5hZGQoayk7aWYoMD09PShwLm1vZGUmMikpe3AuZWZmZWN0VGFnfD02NDtnLmVmZmVjdFRhZyY9LTI5ODE7aWYoMT09PWcudGFnKWlmKG51bGw9PT1nLmFsdGVybmF0ZSlnLnRhZz0xNztlbHNle3ZhciB5PXdnKDEwNzM3NDE4MjMsbnVsbCk7eS50YWc9Mjt4ZyhnLHkpfWcuZXhwaXJhdGlvblRpbWU9MTA3Mzc0MTgyMztcbmJyZWFrIGF9aD12b2lkIDA7Zz1iO3ZhciBBPWUucGluZ0NhY2hlO251bGw9PT1BPyhBPWUucGluZ0NhY2hlPW5ldyBXaSxoPW5ldyBTZXQsQS5zZXQoayxoKSk6KGg9QS5nZXQoayksdm9pZCAwPT09aCYmKGg9bmV3IFNldCxBLnNldChrLGgpKSk7aWYoIWguaGFzKGcpKXtoLmFkZChnKTt2YXIgcT1Pai5iaW5kKG51bGwsZSxrLGcpO2sudGhlbihxLHEpfXAuZWZmZWN0VGFnfD00MDk2O3AuZXhwaXJhdGlvblRpbWU9YjticmVhayBhfXA9cC5yZXR1cm59d2hpbGUobnVsbCE9PXApO2g9RXJyb3IoKHBiKGcudHlwZSl8fFwiQSBSZWFjdCBjb21wb25lbnRcIikrXCIgc3VzcGVuZGVkIHdoaWxlIHJlbmRlcmluZywgYnV0IG5vIGZhbGxiYWNrIFVJIHdhcyBzcGVjaWZpZWQuXFxuXFxuQWRkIGEgPFN1c3BlbnNlIGZhbGxiYWNrPS4uLj4gY29tcG9uZW50IGhpZ2hlciBpbiB0aGUgdHJlZSB0byBwcm92aWRlIGEgbG9hZGluZyBpbmRpY2F0b3Igb3IgcGxhY2Vob2xkZXIgdG8gZGlzcGxheS5cIitxYihnKSl9UyE9PVxuamomJihTPWlqKTtoPUFpKGgsZyk7cD1mO2Rve3N3aXRjaChwLnRhZyl7Y2FzZSAzOms9aDtwLmVmZmVjdFRhZ3w9NDA5NjtwLmV4cGlyYXRpb25UaW1lPWI7dmFyIEI9WGkocCxrLGIpO3lnKHAsQik7YnJlYWsgYTtjYXNlIDE6az1oO3ZhciB3PXAudHlwZSx1Yj1wLnN0YXRlTm9kZTtpZigwPT09KHAuZWZmZWN0VGFnJjY0KSYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiB3LmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8bnVsbCE9PXViJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgdWIuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09YWp8fCFhai5oYXModWIpKSkpe3AuZWZmZWN0VGFnfD00MDk2O3AuZXhwaXJhdGlvblRpbWU9Yjt2YXIgdmI9JGkocCxrLGIpO3lnKHAsdmIpO2JyZWFrIGF9fXA9cC5yZXR1cm59d2hpbGUobnVsbCE9PXApfVg9UGooWCl9Y2F0Y2goWGMpe2I9WGM7Y29udGludWV9YnJlYWt9d2hpbGUoMSl9XG5mdW5jdGlvbiBGaigpe3ZhciBhPWNqLmN1cnJlbnQ7Y2ouY3VycmVudD1zaDtyZXR1cm4gbnVsbD09PWE/c2g6YX1mdW5jdGlvbiBBZyhhLGIpe2E8bGomJjI8YSYmKGxqPWEpO251bGwhPT1iJiZhPG1qJiYyPGEmJihtaj1hLG5qPWIpfWZ1bmN0aW9uIEJnKGEpe2E+d2kmJih3aT1hKX1mdW5jdGlvbiBLaigpe2Zvcig7bnVsbCE9PVg7KVg9UWooWCl9ZnVuY3Rpb24gR2ooKXtmb3IoO251bGwhPT1YJiYhVWYoKTspWD1RaihYKX1mdW5jdGlvbiBRaihhKXt2YXIgYj1SaihhLmFsdGVybmF0ZSxhLFUpO2EubWVtb2l6ZWRQcm9wcz1hLnBlbmRpbmdQcm9wcztudWxsPT09YiYmKGI9UGooYSkpO2RqLmN1cnJlbnQ9bnVsbDtyZXR1cm4gYn1cbmZ1bmN0aW9uIFBqKGEpe1g9YTtkb3t2YXIgYj1YLmFsdGVybmF0ZTthPVgucmV0dXJuO2lmKDA9PT0oWC5lZmZlY3RUYWcmMjA0OCkpe2I9c2koYixYLFUpO2lmKDE9PT1VfHwxIT09WC5jaGlsZEV4cGlyYXRpb25UaW1lKXtmb3IodmFyIGM9MCxkPVguY2hpbGQ7bnVsbCE9PWQ7KXt2YXIgZT1kLmV4cGlyYXRpb25UaW1lLGY9ZC5jaGlsZEV4cGlyYXRpb25UaW1lO2U+YyYmKGM9ZSk7Zj5jJiYoYz1mKTtkPWQuc2libGluZ31YLmNoaWxkRXhwaXJhdGlvblRpbWU9Y31pZihudWxsIT09YilyZXR1cm4gYjtudWxsIT09YSYmMD09PShhLmVmZmVjdFRhZyYyMDQ4KSYmKG51bGw9PT1hLmZpcnN0RWZmZWN0JiYoYS5maXJzdEVmZmVjdD1YLmZpcnN0RWZmZWN0KSxudWxsIT09WC5sYXN0RWZmZWN0JiYobnVsbCE9PWEubGFzdEVmZmVjdCYmKGEubGFzdEVmZmVjdC5uZXh0RWZmZWN0PVguZmlyc3RFZmZlY3QpLGEubGFzdEVmZmVjdD1YLmxhc3RFZmZlY3QpLDE8WC5lZmZlY3RUYWcmJihudWxsIT09XG5hLmxhc3RFZmZlY3Q/YS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9WDphLmZpcnN0RWZmZWN0PVgsYS5sYXN0RWZmZWN0PVgpKX1lbHNle2I9emkoWCk7aWYobnVsbCE9PWIpcmV0dXJuIGIuZWZmZWN0VGFnJj0yMDQ3LGI7bnVsbCE9PWEmJihhLmZpcnN0RWZmZWN0PWEubGFzdEVmZmVjdD1udWxsLGEuZWZmZWN0VGFnfD0yMDQ4KX1iPVguc2libGluZztpZihudWxsIT09YilyZXR1cm4gYjtYPWF9d2hpbGUobnVsbCE9PVgpO1M9PT10aSYmKFM9amopO3JldHVybiBudWxsfWZ1bmN0aW9uIElqKGEpe3ZhciBiPWEuZXhwaXJhdGlvblRpbWU7YT1hLmNoaWxkRXhwaXJhdGlvblRpbWU7cmV0dXJuIGI+YT9iOmF9ZnVuY3Rpb24gSmooYSl7dmFyIGI9YWcoKTtjZyg5OSxTai5iaW5kKG51bGwsYSxiKSk7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBTaihhLGIpe2RvIERqKCk7d2hpbGUobnVsbCE9PXJqKTtpZigoVyYoZmp8Z2opKSE9PVYpdGhyb3cgRXJyb3IodSgzMjcpKTt2YXIgYz1hLmZpbmlzaGVkV29yayxkPWEuZmluaXNoZWRFeHBpcmF0aW9uVGltZTtpZihudWxsPT09YylyZXR1cm4gbnVsbDthLmZpbmlzaGVkV29yaz1udWxsO2EuZmluaXNoZWRFeHBpcmF0aW9uVGltZT0wO2lmKGM9PT1hLmN1cnJlbnQpdGhyb3cgRXJyb3IodSgxNzcpKTthLmNhbGxiYWNrTm9kZT1udWxsO2EuY2FsbGJhY2tFeHBpcmF0aW9uVGltZT0wO2EuY2FsbGJhY2tQcmlvcml0eT05MDthLm5leHRLbm93blBlbmRpbmdMZXZlbD0wO3ZhciBlPUlqKGMpO2EuZmlyc3RQZW5kaW5nVGltZT1lO2Q8PWEubGFzdFN1c3BlbmRlZFRpbWU/YS5maXJzdFN1c3BlbmRlZFRpbWU9YS5sYXN0U3VzcGVuZGVkVGltZT1hLm5leHRLbm93blBlbmRpbmdMZXZlbD0wOmQ8PWEuZmlyc3RTdXNwZW5kZWRUaW1lJiYoYS5maXJzdFN1c3BlbmRlZFRpbWU9XG5kLTEpO2Q8PWEubGFzdFBpbmdlZFRpbWUmJihhLmxhc3RQaW5nZWRUaW1lPTApO2Q8PWEubGFzdEV4cGlyZWRUaW1lJiYoYS5sYXN0RXhwaXJlZFRpbWU9MCk7YT09PVQmJihYPVQ9bnVsbCxVPTApOzE8Yy5lZmZlY3RUYWc/bnVsbCE9PWMubGFzdEVmZmVjdD8oYy5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YyxlPWMuZmlyc3RFZmZlY3QpOmU9YzplPWMuZmlyc3RFZmZlY3Q7aWYobnVsbCE9PWUpe3ZhciBmPVc7V3w9Z2o7ZGouY3VycmVudD1udWxsO0RkPWZkO3ZhciBnPXhkKCk7aWYoeWQoZykpe2lmKFwic2VsZWN0aW9uU3RhcnRcImluIGcpdmFyIGg9e3N0YXJ0Omcuc2VsZWN0aW9uU3RhcnQsZW5kOmcuc2VsZWN0aW9uRW5kfTtlbHNlIGE6e2g9KGg9Zy5vd25lckRvY3VtZW50KSYmaC5kZWZhdWx0Vmlld3x8d2luZG93O3ZhciBrPWguZ2V0U2VsZWN0aW9uJiZoLmdldFNlbGVjdGlvbigpO2lmKGsmJjAhPT1rLnJhbmdlQ291bnQpe2g9ay5hbmNob3JOb2RlO3ZhciBsPWsuYW5jaG9yT2Zmc2V0LFxubT1rLmZvY3VzTm9kZTtrPWsuZm9jdXNPZmZzZXQ7dHJ5e2gubm9kZVR5cGUsbS5ub2RlVHlwZX1jYXRjaCh3Yil7aD1udWxsO2JyZWFrIGF9dmFyIHA9MCx4PS0xLHo9LTEsY2E9MCxEPTAsdD1nLHk9bnVsbDtiOmZvcig7Oyl7Zm9yKHZhciBBOzspe3QhPT1ofHwwIT09bCYmMyE9PXQubm9kZVR5cGV8fCh4PXArbCk7dCE9PW18fDAhPT1rJiYzIT09dC5ub2RlVHlwZXx8KHo9cCtrKTszPT09dC5ub2RlVHlwZSYmKHArPXQubm9kZVZhbHVlLmxlbmd0aCk7aWYobnVsbD09PShBPXQuZmlyc3RDaGlsZCkpYnJlYWs7eT10O3Q9QX1mb3IoOzspe2lmKHQ9PT1nKWJyZWFrIGI7eT09PWgmJisrY2E9PT1sJiYoeD1wKTt5PT09bSYmKytEPT09ayYmKHo9cCk7aWYobnVsbCE9PShBPXQubmV4dFNpYmxpbmcpKWJyZWFrO3Q9eTt5PXQucGFyZW50Tm9kZX10PUF9aD0tMT09PXh8fC0xPT09ej9udWxsOntzdGFydDp4LGVuZDp6fX1lbHNlIGg9bnVsbH1oPWh8fHtzdGFydDowLGVuZDowfX1lbHNlIGg9XG5udWxsO0VkPXthY3RpdmVFbGVtZW50RGV0YWNoZWQ6bnVsbCxmb2N1c2VkRWxlbTpnLHNlbGVjdGlvblJhbmdlOmh9O2ZkPSExO1k9ZTtkbyB0cnl7VGooKX1jYXRjaCh3Yil7aWYobnVsbD09PVkpdGhyb3cgRXJyb3IodSgzMzApKTtFaShZLHdiKTtZPVkubmV4dEVmZmVjdH13aGlsZShudWxsIT09WSk7WT1lO2RvIHRyeXtmb3IoZz1hLGg9YjtudWxsIT09WTspe3ZhciBxPVkuZWZmZWN0VGFnO3EmMTYmJlJiKFkuc3RhdGVOb2RlLFwiXCIpO2lmKHEmMTI4KXt2YXIgQj1ZLmFsdGVybmF0ZTtpZihudWxsIT09Qil7dmFyIHc9Qi5yZWY7bnVsbCE9PXcmJihcImZ1bmN0aW9uXCI9PT10eXBlb2Ygdz93KG51bGwpOncuY3VycmVudD1udWxsKX19c3dpdGNoKHEmMTAzOCl7Y2FzZSAyOlBpKFkpO1kuZWZmZWN0VGFnJj0tMzticmVhaztjYXNlIDY6UGkoWSk7WS5lZmZlY3RUYWcmPS0zO1NpKFkuYWx0ZXJuYXRlLFkpO2JyZWFrO2Nhc2UgMTAyNDpZLmVmZmVjdFRhZyY9LTEwMjU7YnJlYWs7Y2FzZSAxMDI4OlkuZWZmZWN0VGFnJj1cbi0xMDI1O1NpKFkuYWx0ZXJuYXRlLFkpO2JyZWFrO2Nhc2UgNDpTaShZLmFsdGVybmF0ZSxZKTticmVhaztjYXNlIDg6bD1ZLE1pKGcsbCxoKSxOaShsKX1ZPVkubmV4dEVmZmVjdH19Y2F0Y2god2Ipe2lmKG51bGw9PT1ZKXRocm93IEVycm9yKHUoMzMwKSk7RWkoWSx3Yik7WT1ZLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PVkpO3c9RWQ7Qj14ZCgpO3E9dy5mb2N1c2VkRWxlbTtoPXcuc2VsZWN0aW9uUmFuZ2U7aWYoQiE9PXEmJnEmJnEub3duZXJEb2N1bWVudCYmd2QocS5vd25lckRvY3VtZW50LmRvY3VtZW50RWxlbWVudCxxKSl7bnVsbCE9PWgmJnlkKHEpJiYoQj1oLnN0YXJ0LHc9aC5lbmQsdm9pZCAwPT09dyYmKHc9QiksXCJzZWxlY3Rpb25TdGFydFwiaW4gcT8ocS5zZWxlY3Rpb25TdGFydD1CLHEuc2VsZWN0aW9uRW5kPU1hdGgubWluKHcscS52YWx1ZS5sZW5ndGgpKToodz0oQj1xLm93bmVyRG9jdW1lbnR8fGRvY3VtZW50KSYmQi5kZWZhdWx0Vmlld3x8d2luZG93LHcuZ2V0U2VsZWN0aW9uJiZcbih3PXcuZ2V0U2VsZWN0aW9uKCksbD1xLnRleHRDb250ZW50Lmxlbmd0aCxnPU1hdGgubWluKGguc3RhcnQsbCksaD12b2lkIDA9PT1oLmVuZD9nOk1hdGgubWluKGguZW5kLGwpLCF3LmV4dGVuZCYmZz5oJiYobD1oLGg9ZyxnPWwpLGw9dmQocSxnKSxtPXZkKHEsaCksbCYmbSYmKDEhPT13LnJhbmdlQ291bnR8fHcuYW5jaG9yTm9kZSE9PWwubm9kZXx8dy5hbmNob3JPZmZzZXQhPT1sLm9mZnNldHx8dy5mb2N1c05vZGUhPT1tLm5vZGV8fHcuZm9jdXNPZmZzZXQhPT1tLm9mZnNldCkmJihCPUIuY3JlYXRlUmFuZ2UoKSxCLnNldFN0YXJ0KGwubm9kZSxsLm9mZnNldCksdy5yZW1vdmVBbGxSYW5nZXMoKSxnPmg/KHcuYWRkUmFuZ2UoQiksdy5leHRlbmQobS5ub2RlLG0ub2Zmc2V0KSk6KEIuc2V0RW5kKG0ubm9kZSxtLm9mZnNldCksdy5hZGRSYW5nZShCKSkpKSkpO0I9W107Zm9yKHc9cTt3PXcucGFyZW50Tm9kZTspMT09PXcubm9kZVR5cGUmJkIucHVzaCh7ZWxlbWVudDp3LGxlZnQ6dy5zY3JvbGxMZWZ0LFxudG9wOncuc2Nyb2xsVG9wfSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIHEuZm9jdXMmJnEuZm9jdXMoKTtmb3IocT0wO3E8Qi5sZW5ndGg7cSsrKXc9QltxXSx3LmVsZW1lbnQuc2Nyb2xsTGVmdD13LmxlZnQsdy5lbGVtZW50LnNjcm9sbFRvcD13LnRvcH1mZD0hIURkO0VkPURkPW51bGw7YS5jdXJyZW50PWM7WT1lO2RvIHRyeXtmb3IocT1hO251bGwhPT1ZOyl7dmFyIHViPVkuZWZmZWN0VGFnO3ViJjM2JiZKaShxLFkuYWx0ZXJuYXRlLFkpO2lmKHViJjEyOCl7Qj12b2lkIDA7dmFyIHZiPVkucmVmO2lmKG51bGwhPT12Yil7dmFyIFhjPVkuc3RhdGVOb2RlO3N3aXRjaChZLnRhZyl7Y2FzZSA1OkI9WGM7YnJlYWs7ZGVmYXVsdDpCPVhjfVwiZnVuY3Rpb25cIj09PXR5cGVvZiB2Yj92YihCKTp2Yi5jdXJyZW50PUJ9fVk9WS5uZXh0RWZmZWN0fX1jYXRjaCh3Yil7aWYobnVsbD09PVkpdGhyb3cgRXJyb3IodSgzMzApKTtFaShZLHdiKTtZPVkubmV4dEVmZmVjdH13aGlsZShudWxsIT09WSk7WT1cbm51bGw7VmYoKTtXPWZ9ZWxzZSBhLmN1cnJlbnQ9YztpZihxailxaj0hMSxyaj1hLHNqPWI7ZWxzZSBmb3IoWT1lO251bGwhPT1ZOyliPVkubmV4dEVmZmVjdCxZLm5leHRFZmZlY3Q9bnVsbCxZPWI7Yj1hLmZpcnN0UGVuZGluZ1RpbWU7MD09PWImJihhaj1udWxsKTsxMDczNzQxODIzPT09Yj9hPT09dmo/dWorKzoodWo9MCx2aj1hKTp1aj0wO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBVaiYmVWooYy5zdGF0ZU5vZGUsZCk7WihhKTtpZihZaSl0aHJvdyBZaT0hMSxhPVppLFppPW51bGwsYTtpZigoVyZlaikhPT1WKXJldHVybiBudWxsO2dnKCk7cmV0dXJuIG51bGx9ZnVuY3Rpb24gVGooKXtmb3IoO251bGwhPT1ZOyl7dmFyIGE9WS5lZmZlY3RUYWc7MCE9PShhJjI1NikmJkdpKFkuYWx0ZXJuYXRlLFkpOzA9PT0oYSY1MTIpfHxxanx8KHFqPSEwLGRnKDk3LGZ1bmN0aW9uKCl7RGooKTtyZXR1cm4gbnVsbH0pKTtZPVkubmV4dEVmZmVjdH19XG5mdW5jdGlvbiBEaigpe2lmKDkwIT09c2ope3ZhciBhPTk3PHNqPzk3OnNqO3NqPTkwO3JldHVybiBjZyhhLFZqKX19ZnVuY3Rpb24gVmooKXtpZihudWxsPT09cmopcmV0dXJuITE7dmFyIGE9cmo7cmo9bnVsbDtpZigoVyYoZmp8Z2opKSE9PVYpdGhyb3cgRXJyb3IodSgzMzEpKTt2YXIgYj1XO1d8PWdqO2ZvcihhPWEuY3VycmVudC5maXJzdEVmZmVjdDtudWxsIT09YTspe3RyeXt2YXIgYz1hO2lmKDAhPT0oYy5lZmZlY3RUYWcmNTEyKSlzd2l0Y2goYy50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6Y2FzZSAyMjpIaSg1LGMpLElpKDUsYyl9fWNhdGNoKGQpe2lmKG51bGw9PT1hKXRocm93IEVycm9yKHUoMzMwKSk7RWkoYSxkKX1jPWEubmV4dEVmZmVjdDthLm5leHRFZmZlY3Q9bnVsbDthPWN9Vz1iO2dnKCk7cmV0dXJuITB9XG5mdW5jdGlvbiBXaihhLGIsYyl7Yj1BaShjLGIpO2I9WGkoYSxiLDEwNzM3NDE4MjMpO3hnKGEsYik7YT14aihhLDEwNzM3NDE4MjMpO251bGwhPT1hJiZaKGEpfWZ1bmN0aW9uIEVpKGEsYil7aWYoMz09PWEudGFnKVdqKGEsYSxiKTtlbHNlIGZvcih2YXIgYz1hLnJldHVybjtudWxsIT09Yzspe2lmKDM9PT1jLnRhZyl7V2ooYyxhLGIpO2JyZWFrfWVsc2UgaWYoMT09PWMudGFnKXt2YXIgZD1jLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09YWp8fCFhai5oYXMoZCkpKXthPUFpKGIsYSk7YT0kaShjLGEsMTA3Mzc0MTgyMyk7eGcoYyxhKTtjPXhqKGMsMTA3Mzc0MTgyMyk7bnVsbCE9PWMmJlooYyk7YnJlYWt9fWM9Yy5yZXR1cm59fVxuZnVuY3Rpb24gT2ooYSxiLGMpe3ZhciBkPWEucGluZ0NhY2hlO251bGwhPT1kJiZkLmRlbGV0ZShiKTtUPT09YSYmVT09PWM/Uz09PXZpfHxTPT09dWkmJjEwNzM3NDE4MjM9PT1saiYmJGYoKS1UaTxwaj9FaihhLFUpOm9qPSEwOkFqKGEsYykmJihiPWEubGFzdFBpbmdlZFRpbWUsMCE9PWImJmI8Y3x8KGEubGFzdFBpbmdlZFRpbWU9YyxaKGEpKSl9ZnVuY3Rpb24gVmkoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtudWxsIT09YyYmYy5kZWxldGUoYik7Yj0wOzA9PT1iJiYoYj1HZygpLGI9SGcoYixhLG51bGwpKTthPXhqKGEsYik7bnVsbCE9PWEmJlooYSl9dmFyIFJqO1xuUmo9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPWIuZXhwaXJhdGlvblRpbWU7aWYobnVsbCE9PWEpe3ZhciBlPWIucGVuZGluZ1Byb3BzO2lmKGEubWVtb2l6ZWRQcm9wcyE9PWV8fEsuY3VycmVudClyZz0hMDtlbHNle2lmKGQ8Yyl7cmc9ITE7c3dpdGNoKGIudGFnKXtjYXNlIDM6aGkoYik7WGgoKTticmVhaztjYXNlIDU6ZmgoYik7aWYoYi5tb2RlJjQmJjEhPT1jJiZlLmhpZGRlbilyZXR1cm4gYi5leHBpcmF0aW9uVGltZT1iLmNoaWxkRXhwaXJhdGlvblRpbWU9MSxudWxsO2JyZWFrO2Nhc2UgMTpMKGIudHlwZSkmJkdmKGIpO2JyZWFrO2Nhc2UgNDpkaChiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pO2JyZWFrO2Nhc2UgMTA6ZD1iLm1lbW9pemVkUHJvcHMudmFsdWU7ZT1iLnR5cGUuX2NvbnRleHQ7SShqZyxlLl9jdXJyZW50VmFsdWUpO2UuX2N1cnJlbnRWYWx1ZT1kO2JyZWFrO2Nhc2UgMTM6aWYobnVsbCE9PWIubWVtb2l6ZWRTdGF0ZSl7ZD1iLmNoaWxkLmNoaWxkRXhwaXJhdGlvblRpbWU7XG5pZigwIT09ZCYmZD49YylyZXR1cm4gamkoYSxiLGMpO0koTSxNLmN1cnJlbnQmMSk7Yj0kaChhLGIsYyk7cmV0dXJuIG51bGwhPT1iP2Iuc2libGluZzpudWxsfUkoTSxNLmN1cnJlbnQmMSk7YnJlYWs7Y2FzZSAxOTpkPWIuY2hpbGRFeHBpcmF0aW9uVGltZT49YztpZigwIT09KGEuZWZmZWN0VGFnJjY0KSl7aWYoZClyZXR1cm4gbWkoYSxiLGMpO2IuZWZmZWN0VGFnfD02NH1lPWIubWVtb2l6ZWRTdGF0ZTtudWxsIT09ZSYmKGUucmVuZGVyaW5nPW51bGwsZS50YWlsPW51bGwpO0koTSxNLmN1cnJlbnQpO2lmKCFkKXJldHVybiBudWxsfXJldHVybiAkaChhLGIsYyl9cmc9ITF9fWVsc2Ugcmc9ITE7Yi5leHBpcmF0aW9uVGltZT0wO3N3aXRjaChiLnRhZyl7Y2FzZSAyOmQ9Yi50eXBlO251bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKTthPWIucGVuZGluZ1Byb3BzO2U9Q2YoYixKLmN1cnJlbnQpO3FnKGIsYyk7ZT1vaChudWxsLFxuYixkLGEsZSxjKTtiLmVmZmVjdFRhZ3w9MTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGUmJm51bGwhPT1lJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5yZW5kZXImJnZvaWQgMD09PWUuJCR0eXBlb2Ype2IudGFnPTE7Yi5tZW1vaXplZFN0YXRlPW51bGw7Yi51cGRhdGVRdWV1ZT1udWxsO2lmKEwoZCkpe3ZhciBmPSEwO0dmKGIpfWVsc2UgZj0hMTtiLm1lbW9pemVkU3RhdGU9bnVsbCE9PWUuc3RhdGUmJnZvaWQgMCE9PWUuc3RhdGU/ZS5zdGF0ZTpudWxsO3VnKGIpO3ZhciBnPWQuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBnJiZGZyhiLGQsZyxhKTtlLnVwZGF0ZXI9Smc7Yi5zdGF0ZU5vZGU9ZTtlLl9yZWFjdEludGVybmFsRmliZXI9YjtOZyhiLGQsYSxjKTtiPWdpKG51bGwsYixkLCEwLGYsYyl9ZWxzZSBiLnRhZz0wLFIobnVsbCxiLGUsYyksYj1iLmNoaWxkO3JldHVybiBiO2Nhc2UgMTY6YTp7ZT1iLmVsZW1lbnRUeXBlO251bGwhPT1hJiYoYS5hbHRlcm5hdGU9XG5udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5lZmZlY3RUYWd8PTIpO2E9Yi5wZW5kaW5nUHJvcHM7b2IoZSk7aWYoMSE9PWUuX3N0YXR1cyl0aHJvdyBlLl9yZXN1bHQ7ZT1lLl9yZXN1bHQ7Yi50eXBlPWU7Zj1iLnRhZz1YaihlKTthPWlnKGUsYSk7c3dpdGNoKGYpe2Nhc2UgMDpiPWRpKG51bGwsYixlLGEsYyk7YnJlYWsgYTtjYXNlIDE6Yj1maShudWxsLGIsZSxhLGMpO2JyZWFrIGE7Y2FzZSAxMTpiPVpoKG51bGwsYixlLGEsYyk7YnJlYWsgYTtjYXNlIDE0OmI9YWkobnVsbCxiLGUsaWcoZS50eXBlLGEpLGQsYyk7YnJlYWsgYX10aHJvdyBFcnJvcih1KDMwNixlLFwiXCIpKTt9cmV0dXJuIGI7Y2FzZSAwOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTppZyhkLGUpLGRpKGEsYixkLGUsYyk7Y2FzZSAxOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTppZyhkLGUpLGZpKGEsYixkLGUsYyk7XG5jYXNlIDM6aGkoYik7ZD1iLnVwZGF0ZVF1ZXVlO2lmKG51bGw9PT1hfHxudWxsPT09ZCl0aHJvdyBFcnJvcih1KDI4MikpO2Q9Yi5wZW5kaW5nUHJvcHM7ZT1iLm1lbW9pemVkU3RhdGU7ZT1udWxsIT09ZT9lLmVsZW1lbnQ6bnVsbDt2ZyhhLGIpO3pnKGIsZCxudWxsLGMpO2Q9Yi5tZW1vaXplZFN0YXRlLmVsZW1lbnQ7aWYoZD09PWUpWGgoKSxiPSRoKGEsYixjKTtlbHNle2lmKGU9Yi5zdGF0ZU5vZGUuaHlkcmF0ZSlQaD1KZChiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvLmZpcnN0Q2hpbGQpLE9oPWIsZT1RaD0hMDtpZihlKWZvcihjPVlnKGIsbnVsbCxkLGMpLGIuY2hpbGQ9YztjOyljLmVmZmVjdFRhZz1jLmVmZmVjdFRhZyYtM3wxMDI0LGM9Yy5zaWJsaW5nO2Vsc2UgUihhLGIsZCxjKSxYaCgpO2I9Yi5jaGlsZH1yZXR1cm4gYjtjYXNlIDU6cmV0dXJuIGZoKGIpLG51bGw9PT1hJiZVaChiKSxkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGY9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOlxubnVsbCxnPWUuY2hpbGRyZW4sR2QoZCxlKT9nPW51bGw6bnVsbCE9PWYmJkdkKGQsZikmJihiLmVmZmVjdFRhZ3w9MTYpLGVpKGEsYiksYi5tb2RlJjQmJjEhPT1jJiZlLmhpZGRlbj8oYi5leHBpcmF0aW9uVGltZT1iLmNoaWxkRXhwaXJhdGlvblRpbWU9MSxiPW51bGwpOihSKGEsYixnLGMpLGI9Yi5jaGlsZCksYjtjYXNlIDY6cmV0dXJuIG51bGw9PT1hJiZVaChiKSxudWxsO2Nhc2UgMTM6cmV0dXJuIGppKGEsYixjKTtjYXNlIDQ6cmV0dXJuIGRoKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksZD1iLnBlbmRpbmdQcm9wcyxudWxsPT09YT9iLmNoaWxkPVhnKGIsbnVsbCxkLGMpOlIoYSxiLGQsYyksYi5jaGlsZDtjYXNlIDExOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTppZyhkLGUpLFpoKGEsYixkLGUsYyk7Y2FzZSA3OnJldHVybiBSKGEsYixiLnBlbmRpbmdQcm9wcyxjKSxiLmNoaWxkO2Nhc2UgODpyZXR1cm4gUihhLFxuYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixjKSxiLmNoaWxkO2Nhc2UgMTI6cmV0dXJuIFIoYSxiLGIucGVuZGluZ1Byb3BzLmNoaWxkcmVuLGMpLGIuY2hpbGQ7Y2FzZSAxMDphOntkPWIudHlwZS5fY29udGV4dDtlPWIucGVuZGluZ1Byb3BzO2c9Yi5tZW1vaXplZFByb3BzO2Y9ZS52YWx1ZTt2YXIgaD1iLnR5cGUuX2NvbnRleHQ7SShqZyxoLl9jdXJyZW50VmFsdWUpO2guX2N1cnJlbnRWYWx1ZT1mO2lmKG51bGwhPT1nKWlmKGg9Zy52YWx1ZSxmPSRlKGgsZik/MDooXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuX2NhbGN1bGF0ZUNoYW5nZWRCaXRzP2QuX2NhbGN1bGF0ZUNoYW5nZWRCaXRzKGgsZik6MTA3Mzc0MTgyMyl8MCwwPT09Zil7aWYoZy5jaGlsZHJlbj09PWUuY2hpbGRyZW4mJiFLLmN1cnJlbnQpe2I9JGgoYSxiLGMpO2JyZWFrIGF9fWVsc2UgZm9yKGg9Yi5jaGlsZCxudWxsIT09aCYmKGgucmV0dXJuPWIpO251bGwhPT1oOyl7dmFyIGs9aC5kZXBlbmRlbmNpZXM7aWYobnVsbCE9PVxuayl7Zz1oLmNoaWxkO2Zvcih2YXIgbD1rLmZpcnN0Q29udGV4dDtudWxsIT09bDspe2lmKGwuY29udGV4dD09PWQmJjAhPT0obC5vYnNlcnZlZEJpdHMmZikpezE9PT1oLnRhZyYmKGw9d2coYyxudWxsKSxsLnRhZz0yLHhnKGgsbCkpO2guZXhwaXJhdGlvblRpbWU8YyYmKGguZXhwaXJhdGlvblRpbWU9Yyk7bD1oLmFsdGVybmF0ZTtudWxsIT09bCYmbC5leHBpcmF0aW9uVGltZTxjJiYobC5leHBpcmF0aW9uVGltZT1jKTtwZyhoLnJldHVybixjKTtrLmV4cGlyYXRpb25UaW1lPGMmJihrLmV4cGlyYXRpb25UaW1lPWMpO2JyZWFrfWw9bC5uZXh0fX1lbHNlIGc9MTA9PT1oLnRhZz9oLnR5cGU9PT1iLnR5cGU/bnVsbDpoLmNoaWxkOmguY2hpbGQ7aWYobnVsbCE9PWcpZy5yZXR1cm49aDtlbHNlIGZvcihnPWg7bnVsbCE9PWc7KXtpZihnPT09Yil7Zz1udWxsO2JyZWFrfWg9Zy5zaWJsaW5nO2lmKG51bGwhPT1oKXtoLnJldHVybj1nLnJldHVybjtnPWg7YnJlYWt9Zz1nLnJldHVybn1oPVxuZ31SKGEsYixlLmNoaWxkcmVuLGMpO2I9Yi5jaGlsZH1yZXR1cm4gYjtjYXNlIDk6cmV0dXJuIGU9Yi50eXBlLGY9Yi5wZW5kaW5nUHJvcHMsZD1mLmNoaWxkcmVuLHFnKGIsYyksZT1zZyhlLGYudW5zdGFibGVfb2JzZXJ2ZWRCaXRzKSxkPWQoZSksYi5lZmZlY3RUYWd8PTEsUihhLGIsZCxjKSxiLmNoaWxkO2Nhc2UgMTQ6cmV0dXJuIGU9Yi50eXBlLGY9aWcoZSxiLnBlbmRpbmdQcm9wcyksZj1pZyhlLnR5cGUsZiksYWkoYSxiLGUsZixkLGMpO2Nhc2UgMTU6cmV0dXJuIGNpKGEsYixiLnR5cGUsYi5wZW5kaW5nUHJvcHMsZCxjKTtjYXNlIDE3OnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTppZyhkLGUpLG51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKSxiLnRhZz0xLEwoZCk/KGE9ITAsR2YoYikpOmE9ITEscWcoYixjKSxMZyhiLGQsZSksTmcoYixkLGUsYyksZ2kobnVsbCxcbmIsZCwhMCxhLGMpO2Nhc2UgMTk6cmV0dXJuIG1pKGEsYixjKX10aHJvdyBFcnJvcih1KDE1NixiLnRhZykpO307dmFyIFVqPW51bGwsTGk9bnVsbDtmdW5jdGlvbiBZaihhKXtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXylyZXR1cm4hMTt2YXIgYj1fX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX187aWYoYi5pc0Rpc2FibGVkfHwhYi5zdXBwb3J0c0ZpYmVyKXJldHVybiEwO3RyeXt2YXIgYz1iLmluamVjdChhKTtVaj1mdW5jdGlvbihhKXt0cnl7Yi5vbkNvbW1pdEZpYmVyUm9vdChjLGEsdm9pZCAwLDY0PT09KGEuY3VycmVudC5lZmZlY3RUYWcmNjQpKX1jYXRjaChlKXt9fTtMaT1mdW5jdGlvbihhKXt0cnl7Yi5vbkNvbW1pdEZpYmVyVW5tb3VudChjLGEpfWNhdGNoKGUpe319fWNhdGNoKGQpe31yZXR1cm4hMH1cbmZ1bmN0aW9uIFpqKGEsYixjLGQpe3RoaXMudGFnPWE7dGhpcy5rZXk9Yzt0aGlzLnNpYmxpbmc9dGhpcy5jaGlsZD10aGlzLnJldHVybj10aGlzLnN0YXRlTm9kZT10aGlzLnR5cGU9dGhpcy5lbGVtZW50VHlwZT1udWxsO3RoaXMuaW5kZXg9MDt0aGlzLnJlZj1udWxsO3RoaXMucGVuZGluZ1Byb3BzPWI7dGhpcy5kZXBlbmRlbmNpZXM9dGhpcy5tZW1vaXplZFN0YXRlPXRoaXMudXBkYXRlUXVldWU9dGhpcy5tZW1vaXplZFByb3BzPW51bGw7dGhpcy5tb2RlPWQ7dGhpcy5lZmZlY3RUYWc9MDt0aGlzLmxhc3RFZmZlY3Q9dGhpcy5maXJzdEVmZmVjdD10aGlzLm5leHRFZmZlY3Q9bnVsbDt0aGlzLmNoaWxkRXhwaXJhdGlvblRpbWU9dGhpcy5leHBpcmF0aW9uVGltZT0wO3RoaXMuYWx0ZXJuYXRlPW51bGx9ZnVuY3Rpb24gU2goYSxiLGMsZCl7cmV0dXJuIG5ldyBaaihhLGIsYyxkKX1cbmZ1bmN0aW9uIGJpKGEpe2E9YS5wcm90b3R5cGU7cmV0dXJuISghYXx8IWEuaXNSZWFjdENvbXBvbmVudCl9ZnVuY3Rpb24gWGooYSl7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpcmV0dXJuIGJpKGEpPzE6MDtpZih2b2lkIDAhPT1hJiZudWxsIT09YSl7YT1hLiQkdHlwZW9mO2lmKGE9PT1nYilyZXR1cm4gMTE7aWYoYT09PWpiKXJldHVybiAxNH1yZXR1cm4gMn1cbmZ1bmN0aW9uIFNnKGEsYil7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbD09PWM/KGM9U2goYS50YWcsYixhLmtleSxhLm1vZGUpLGMuZWxlbWVudFR5cGU9YS5lbGVtZW50VHlwZSxjLnR5cGU9YS50eXBlLGMuc3RhdGVOb2RlPWEuc3RhdGVOb2RlLGMuYWx0ZXJuYXRlPWEsYS5hbHRlcm5hdGU9Yyk6KGMucGVuZGluZ1Byb3BzPWIsYy5lZmZlY3RUYWc9MCxjLm5leHRFZmZlY3Q9bnVsbCxjLmZpcnN0RWZmZWN0PW51bGwsYy5sYXN0RWZmZWN0PW51bGwpO2MuY2hpbGRFeHBpcmF0aW9uVGltZT1hLmNoaWxkRXhwaXJhdGlvblRpbWU7Yy5leHBpcmF0aW9uVGltZT1hLmV4cGlyYXRpb25UaW1lO2MuY2hpbGQ9YS5jaGlsZDtjLm1lbW9pemVkUHJvcHM9YS5tZW1vaXplZFByb3BzO2MubWVtb2l6ZWRTdGF0ZT1hLm1lbW9pemVkU3RhdGU7Yy51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlO2I9YS5kZXBlbmRlbmNpZXM7Yy5kZXBlbmRlbmNpZXM9bnVsbD09PWI/bnVsbDp7ZXhwaXJhdGlvblRpbWU6Yi5leHBpcmF0aW9uVGltZSxcbmZpcnN0Q29udGV4dDpiLmZpcnN0Q29udGV4dCxyZXNwb25kZXJzOmIucmVzcG9uZGVyc307Yy5zaWJsaW5nPWEuc2libGluZztjLmluZGV4PWEuaW5kZXg7Yy5yZWY9YS5yZWY7cmV0dXJuIGN9XG5mdW5jdGlvbiBVZyhhLGIsYyxkLGUsZil7dmFyIGc9MjtkPWE7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpYmkoYSkmJihnPTEpO2Vsc2UgaWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKWc9NTtlbHNlIGE6c3dpdGNoKGEpe2Nhc2UgYWI6cmV0dXJuIFdnKGMuY2hpbGRyZW4sZSxmLGIpO2Nhc2UgZmI6Zz04O2V8PTc7YnJlYWs7Y2FzZSBiYjpnPTg7ZXw9MTticmVhaztjYXNlIGNiOnJldHVybiBhPVNoKDEyLGMsYixlfDgpLGEuZWxlbWVudFR5cGU9Y2IsYS50eXBlPWNiLGEuZXhwaXJhdGlvblRpbWU9ZixhO2Nhc2UgaGI6cmV0dXJuIGE9U2goMTMsYyxiLGUpLGEudHlwZT1oYixhLmVsZW1lbnRUeXBlPWhiLGEuZXhwaXJhdGlvblRpbWU9ZixhO2Nhc2UgaWI6cmV0dXJuIGE9U2goMTksYyxiLGUpLGEuZWxlbWVudFR5cGU9aWIsYS5leHBpcmF0aW9uVGltZT1mLGE7ZGVmYXVsdDppZihcIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIGRiOmc9XG4xMDticmVhayBhO2Nhc2UgZWI6Zz05O2JyZWFrIGE7Y2FzZSBnYjpnPTExO2JyZWFrIGE7Y2FzZSBqYjpnPTE0O2JyZWFrIGE7Y2FzZSBrYjpnPTE2O2Q9bnVsbDticmVhayBhO2Nhc2UgbGI6Zz0yMjticmVhayBhfXRocm93IEVycm9yKHUoMTMwLG51bGw9PWE/YTp0eXBlb2YgYSxcIlwiKSk7fWI9U2goZyxjLGIsZSk7Yi5lbGVtZW50VHlwZT1hO2IudHlwZT1kO2IuZXhwaXJhdGlvblRpbWU9ZjtyZXR1cm4gYn1mdW5jdGlvbiBXZyhhLGIsYyxkKXthPVNoKDcsYSxkLGIpO2EuZXhwaXJhdGlvblRpbWU9YztyZXR1cm4gYX1mdW5jdGlvbiBUZyhhLGIsYyl7YT1TaCg2LGEsbnVsbCxiKTthLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGF9XG5mdW5jdGlvbiBWZyhhLGIsYyl7Yj1TaCg0LG51bGwhPT1hLmNoaWxkcmVuP2EuY2hpbGRyZW46W10sYS5rZXksYik7Yi5leHBpcmF0aW9uVGltZT1jO2Iuc3RhdGVOb2RlPXtjb250YWluZXJJbmZvOmEuY29udGFpbmVySW5mbyxwZW5kaW5nQ2hpbGRyZW46bnVsbCxpbXBsZW1lbnRhdGlvbjphLmltcGxlbWVudGF0aW9ufTtyZXR1cm4gYn1cbmZ1bmN0aW9uIGFrKGEsYixjKXt0aGlzLnRhZz1iO3RoaXMuY3VycmVudD1udWxsO3RoaXMuY29udGFpbmVySW5mbz1hO3RoaXMucGluZ0NhY2hlPXRoaXMucGVuZGluZ0NoaWxkcmVuPW51bGw7dGhpcy5maW5pc2hlZEV4cGlyYXRpb25UaW1lPTA7dGhpcy5maW5pc2hlZFdvcms9bnVsbDt0aGlzLnRpbWVvdXRIYW5kbGU9LTE7dGhpcy5wZW5kaW5nQ29udGV4dD10aGlzLmNvbnRleHQ9bnVsbDt0aGlzLmh5ZHJhdGU9Yzt0aGlzLmNhbGxiYWNrTm9kZT1udWxsO3RoaXMuY2FsbGJhY2tQcmlvcml0eT05MDt0aGlzLmxhc3RFeHBpcmVkVGltZT10aGlzLmxhc3RQaW5nZWRUaW1lPXRoaXMubmV4dEtub3duUGVuZGluZ0xldmVsPXRoaXMubGFzdFN1c3BlbmRlZFRpbWU9dGhpcy5maXJzdFN1c3BlbmRlZFRpbWU9dGhpcy5maXJzdFBlbmRpbmdUaW1lPTB9XG5mdW5jdGlvbiBBaihhLGIpe3ZhciBjPWEuZmlyc3RTdXNwZW5kZWRUaW1lO2E9YS5sYXN0U3VzcGVuZGVkVGltZTtyZXR1cm4gMCE9PWMmJmM+PWImJmE8PWJ9ZnVuY3Rpb24geGkoYSxiKXt2YXIgYz1hLmZpcnN0U3VzcGVuZGVkVGltZSxkPWEubGFzdFN1c3BlbmRlZFRpbWU7YzxiJiYoYS5maXJzdFN1c3BlbmRlZFRpbWU9Yik7aWYoZD5ifHwwPT09YylhLmxhc3RTdXNwZW5kZWRUaW1lPWI7Yjw9YS5sYXN0UGluZ2VkVGltZSYmKGEubGFzdFBpbmdlZFRpbWU9MCk7Yjw9YS5sYXN0RXhwaXJlZFRpbWUmJihhLmxhc3RFeHBpcmVkVGltZT0wKX1cbmZ1bmN0aW9uIHlpKGEsYil7Yj5hLmZpcnN0UGVuZGluZ1RpbWUmJihhLmZpcnN0UGVuZGluZ1RpbWU9Yik7dmFyIGM9YS5maXJzdFN1c3BlbmRlZFRpbWU7MCE9PWMmJihiPj1jP2EuZmlyc3RTdXNwZW5kZWRUaW1lPWEubGFzdFN1c3BlbmRlZFRpbWU9YS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9MDpiPj1hLmxhc3RTdXNwZW5kZWRUaW1lJiYoYS5sYXN0U3VzcGVuZGVkVGltZT1iKzEpLGI+YS5uZXh0S25vd25QZW5kaW5nTGV2ZWwmJihhLm5leHRLbm93blBlbmRpbmdMZXZlbD1iKSl9ZnVuY3Rpb24gQ2ooYSxiKXt2YXIgYz1hLmxhc3RFeHBpcmVkVGltZTtpZigwPT09Y3x8Yz5iKWEubGFzdEV4cGlyZWRUaW1lPWJ9XG5mdW5jdGlvbiBiayhhLGIsYyxkKXt2YXIgZT1iLmN1cnJlbnQsZj1HZygpLGc9RGcuc3VzcGVuc2U7Zj1IZyhmLGUsZyk7YTppZihjKXtjPWMuX3JlYWN0SW50ZXJuYWxGaWJlcjtiOntpZihkYyhjKSE9PWN8fDEhPT1jLnRhZyl0aHJvdyBFcnJvcih1KDE3MCkpO3ZhciBoPWM7ZG97c3dpdGNoKGgudGFnKXtjYXNlIDM6aD1oLnN0YXRlTm9kZS5jb250ZXh0O2JyZWFrIGI7Y2FzZSAxOmlmKEwoaC50eXBlKSl7aD1oLnN0YXRlTm9kZS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dDticmVhayBifX1oPWgucmV0dXJufXdoaWxlKG51bGwhPT1oKTt0aHJvdyBFcnJvcih1KDE3MSkpO31pZigxPT09Yy50YWcpe3ZhciBrPWMudHlwZTtpZihMKGspKXtjPUZmKGMsayxoKTticmVhayBhfX1jPWh9ZWxzZSBjPUFmO251bGw9PT1iLmNvbnRleHQ/Yi5jb250ZXh0PWM6Yi5wZW5kaW5nQ29udGV4dD1jO2I9d2coZixnKTtiLnBheWxvYWQ9e2VsZW1lbnQ6YX07ZD12b2lkIDA9PT1cbmQ/bnVsbDpkO251bGwhPT1kJiYoYi5jYWxsYmFjaz1kKTt4ZyhlLGIpO0lnKGUsZik7cmV0dXJuIGZ9ZnVuY3Rpb24gY2soYSl7YT1hLmN1cnJlbnQ7aWYoIWEuY2hpbGQpcmV0dXJuIG51bGw7c3dpdGNoKGEuY2hpbGQudGFnKXtjYXNlIDU6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlO2RlZmF1bHQ6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlfX1mdW5jdGlvbiBkayhhLGIpe2E9YS5tZW1vaXplZFN0YXRlO251bGwhPT1hJiZudWxsIT09YS5kZWh5ZHJhdGVkJiZhLnJldHJ5VGltZTxiJiYoYS5yZXRyeVRpbWU9Yil9ZnVuY3Rpb24gZWsoYSxiKXtkayhhLGIpOyhhPWEuYWx0ZXJuYXRlKSYmZGsoYSxiKX1cbmZ1bmN0aW9uIGZrKGEsYixjKXtjPW51bGwhPWMmJiEwPT09Yy5oeWRyYXRlO3ZhciBkPW5ldyBhayhhLGIsYyksZT1TaCgzLG51bGwsbnVsbCwyPT09Yj83OjE9PT1iPzM6MCk7ZC5jdXJyZW50PWU7ZS5zdGF0ZU5vZGU9ZDt1ZyhlKTthW09kXT1kLmN1cnJlbnQ7YyYmMCE9PWImJkpjKGEsOT09PWEubm9kZVR5cGU/YTphLm93bmVyRG9jdW1lbnQpO3RoaXMuX2ludGVybmFsUm9vdD1kfWZrLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oYSl7YmsoYSx0aGlzLl9pbnRlcm5hbFJvb3QsbnVsbCxudWxsKX07ZmsucHJvdG90eXBlLnVubW91bnQ9ZnVuY3Rpb24oKXt2YXIgYT10aGlzLl9pbnRlcm5hbFJvb3QsYj1hLmNvbnRhaW5lckluZm87YmsobnVsbCxhLG51bGwsZnVuY3Rpb24oKXtiW09kXT1udWxsfSl9O1xuZnVuY3Rpb24gZ2soYSl7cmV0dXJuISghYXx8MSE9PWEubm9kZVR5cGUmJjkhPT1hLm5vZGVUeXBlJiYxMSE9PWEubm9kZVR5cGUmJig4IT09YS5ub2RlVHlwZXx8XCIgcmVhY3QtbW91bnQtcG9pbnQtdW5zdGFibGUgXCIhPT1hLm5vZGVWYWx1ZSkpfWZ1bmN0aW9uIGhrKGEsYil7Ynx8KGI9YT85PT09YS5ub2RlVHlwZT9hLmRvY3VtZW50RWxlbWVudDphLmZpcnN0Q2hpbGQ6bnVsbCxiPSEoIWJ8fDEhPT1iLm5vZGVUeXBlfHwhYi5oYXNBdHRyaWJ1dGUoXCJkYXRhLXJlYWN0cm9vdFwiKSkpO2lmKCFiKWZvcih2YXIgYztjPWEubGFzdENoaWxkOylhLnJlbW92ZUNoaWxkKGMpO3JldHVybiBuZXcgZmsoYSwwLGI/e2h5ZHJhdGU6ITB9OnZvaWQgMCl9XG5mdW5jdGlvbiBpayhhLGIsYyxkLGUpe3ZhciBmPWMuX3JlYWN0Um9vdENvbnRhaW5lcjtpZihmKXt2YXIgZz1mLl9pbnRlcm5hbFJvb3Q7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBoPWU7ZT1mdW5jdGlvbigpe3ZhciBhPWNrKGcpO2guY2FsbChhKX19YmsoYixnLGEsZSl9ZWxzZXtmPWMuX3JlYWN0Um9vdENvbnRhaW5lcj1oayhjLGQpO2c9Zi5faW50ZXJuYWxSb290O2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgaz1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1jayhnKTtrLmNhbGwoYSl9fU5qKGZ1bmN0aW9uKCl7YmsoYixnLGEsZSl9KX1yZXR1cm4gY2soZyl9ZnVuY3Rpb24gamsoYSxiLGMpe3ZhciBkPTM8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzNdP2FyZ3VtZW50c1szXTpudWxsO3JldHVybnskJHR5cGVvZjokYSxrZXk6bnVsbD09ZD9udWxsOlwiXCIrZCxjaGlsZHJlbjphLGNvbnRhaW5lckluZm86YixpbXBsZW1lbnRhdGlvbjpjfX1cbndjPWZ1bmN0aW9uKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPWhnKEdnKCksMTUwLDEwMCk7SWcoYSxiKTtlayhhLGIpfX07eGM9ZnVuY3Rpb24oYSl7MTM9PT1hLnRhZyYmKElnKGEsMyksZWsoYSwzKSl9O3ljPWZ1bmN0aW9uKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPUdnKCk7Yj1IZyhiLGEsbnVsbCk7SWcoYSxiKTtlayhhLGIpfX07XG56YT1mdW5jdGlvbihhLGIsYyl7c3dpdGNoKGIpe2Nhc2UgXCJpbnB1dFwiOkNiKGEsYyk7Yj1jLm5hbWU7aWYoXCJyYWRpb1wiPT09Yy50eXBlJiZudWxsIT1iKXtmb3IoYz1hO2MucGFyZW50Tm9kZTspYz1jLnBhcmVudE5vZGU7Yz1jLnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbnB1dFtuYW1lPVwiK0pTT04uc3RyaW5naWZ5KFwiXCIrYikrJ11bdHlwZT1cInJhZGlvXCJdJyk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKyl7dmFyIGQ9Y1tiXTtpZihkIT09YSYmZC5mb3JtPT09YS5mb3JtKXt2YXIgZT1RZChkKTtpZighZSl0aHJvdyBFcnJvcih1KDkwKSk7eWIoZCk7Q2IoZCxlKX19fWJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOktiKGEsYyk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9Yy52YWx1ZSxudWxsIT1iJiZIYihhLCEhYy5tdWx0aXBsZSxiLCExKX19O0ZhPU1qO1xuR2E9ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZj1XO1d8PTQ7dHJ5e3JldHVybiBjZyg5OCxhLmJpbmQobnVsbCxiLGMsZCxlKSl9ZmluYWxseXtXPWYsVz09PVYmJmdnKCl9fTtIYT1mdW5jdGlvbigpeyhXJigxfGZqfGdqKSk9PT1WJiYoTGooKSxEaigpKX07SWE9ZnVuY3Rpb24oYSxiKXt2YXIgYz1XO1d8PTI7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7Vz1jLFc9PT1WJiZnZygpfX07ZnVuY3Rpb24ga2soYSxiKXt2YXIgYz0yPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06bnVsbDtpZighZ2soYikpdGhyb3cgRXJyb3IodSgyMDApKTtyZXR1cm4gamsoYSxiLG51bGwsYyl9dmFyIGxrPXtFdmVudHM6W05jLFBkLFFkLHhhLHRhLFhkLGZ1bmN0aW9uKGEpe2pjKGEsV2QpfSxEYSxFYSxpZCxtYyxEaix7Y3VycmVudDohMX1dfTtcbihmdW5jdGlvbihhKXt2YXIgYj1hLmZpbmRGaWJlckJ5SG9zdEluc3RhbmNlO3JldHVybiBZaihuKHt9LGEse292ZXJyaWRlSG9va1N0YXRlOm51bGwsb3ZlcnJpZGVQcm9wczpudWxsLHNldFN1c3BlbnNlSGFuZGxlcjpudWxsLHNjaGVkdWxlVXBkYXRlOm51bGwsY3VycmVudERpc3BhdGNoZXJSZWY6V2EuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixmaW5kSG9zdEluc3RhbmNlQnlGaWJlcjpmdW5jdGlvbihhKXthPWhjKGEpO3JldHVybiBudWxsPT09YT9udWxsOmEuc3RhdGVOb2RlfSxmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTpmdW5jdGlvbihhKXtyZXR1cm4gYj9iKGEpOm51bGx9LGZpbmRIb3N0SW5zdGFuY2VzRm9yUmVmcmVzaDpudWxsLHNjaGVkdWxlUmVmcmVzaDpudWxsLHNjaGVkdWxlUm9vdDpudWxsLHNldFJlZnJlc2hIYW5kbGVyOm51bGwsZ2V0Q3VycmVudEZpYmVyOm51bGx9KSl9KSh7ZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6dGMsYnVuZGxlVHlwZTowLHZlcnNpb246XCIxNi4xNC4wXCIsXG5yZW5kZXJlclBhY2thZ2VOYW1lOlwicmVhY3QtZG9tXCJ9KTtleHBvcnRzLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEPWxrO2V4cG9ydHMuY3JlYXRlUG9ydGFsPWtrO2V4cG9ydHMuZmluZERPTU5vZGU9ZnVuY3Rpb24oYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZigxPT09YS5ub2RlVHlwZSlyZXR1cm4gYTt2YXIgYj1hLl9yZWFjdEludGVybmFsRmliZXI7aWYodm9pZCAwPT09Yil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEucmVuZGVyKXRocm93IEVycm9yKHUoMTg4KSk7dGhyb3cgRXJyb3IodSgyNjgsT2JqZWN0LmtleXMoYSkpKTt9YT1oYyhiKTthPW51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGU7cmV0dXJuIGF9O1xuZXhwb3J0cy5mbHVzaFN5bmM9ZnVuY3Rpb24oYSxiKXtpZigoVyYoZmp8Z2opKSE9PVYpdGhyb3cgRXJyb3IodSgxODcpKTt2YXIgYz1XO1d8PTE7dHJ5e3JldHVybiBjZyg5OSxhLmJpbmQobnVsbCxiKSl9ZmluYWxseXtXPWMsZ2coKX19O2V4cG9ydHMuaHlkcmF0ZT1mdW5jdGlvbihhLGIsYyl7aWYoIWdrKGIpKXRocm93IEVycm9yKHUoMjAwKSk7cmV0dXJuIGlrKG51bGwsYSxiLCEwLGMpfTtleHBvcnRzLnJlbmRlcj1mdW5jdGlvbihhLGIsYyl7aWYoIWdrKGIpKXRocm93IEVycm9yKHUoMjAwKSk7cmV0dXJuIGlrKG51bGwsYSxiLCExLGMpfTtcbmV4cG9ydHMudW5tb3VudENvbXBvbmVudEF0Tm9kZT1mdW5jdGlvbihhKXtpZighZ2soYSkpdGhyb3cgRXJyb3IodSg0MCkpO3JldHVybiBhLl9yZWFjdFJvb3RDb250YWluZXI/KE5qKGZ1bmN0aW9uKCl7aWsobnVsbCxudWxsLGEsITEsZnVuY3Rpb24oKXthLl9yZWFjdFJvb3RDb250YWluZXI9bnVsbDthW09kXT1udWxsfSl9KSwhMCk6ITF9O2V4cG9ydHMudW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXM9TWo7ZXhwb3J0cy51bnN0YWJsZV9jcmVhdGVQb3J0YWw9ZnVuY3Rpb24oYSxiKXtyZXR1cm4ga2soYSxiLDI8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTpudWxsKX07XG5leHBvcnRzLnVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyPWZ1bmN0aW9uKGEsYixjLGQpe2lmKCFnayhjKSl0aHJvdyBFcnJvcih1KDIwMCkpO2lmKG51bGw9PWF8fHZvaWQgMD09PWEuX3JlYWN0SW50ZXJuYWxGaWJlcil0aHJvdyBFcnJvcih1KDM4KSk7cmV0dXJuIGlrKGEsYixjLCExLGQpfTtleHBvcnRzLnZlcnNpb249XCIxNi4xNC4wXCI7XG4iLCIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIGNoZWNrRENFKCkge1xuICAvKiBnbG9iYWwgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fICovXG4gIGlmIChcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fID09PSAndW5kZWZpbmVkJyB8fFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UgIT09ICdmdW5jdGlvbidcbiAgKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gVGhpcyBicmFuY2ggaXMgdW5yZWFjaGFibGUgYmVjYXVzZSB0aGlzIGZ1bmN0aW9uIGlzIG9ubHkgY2FsbGVkXG4gICAgLy8gaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBjb25kaXRpb24gaXMgdHJ1ZSBvbmx5IGluIGRldmVsb3BtZW50LlxuICAgIC8vIFRoZXJlZm9yZSBpZiB0aGUgYnJhbmNoIGlzIHN0aWxsIGhlcmUsIGRlYWQgY29kZSBlbGltaW5hdGlvbiB3YXNuJ3RcbiAgICAvLyBwcm9wZXJseSBhcHBsaWVkLlxuICAgIC8vIERvbid0IGNoYW5nZSB0aGUgbWVzc2FnZS4gUmVhY3QgRGV2VG9vbHMgcmVsaWVzIG9uIGl0LiBBbHNvIG1ha2Ugc3VyZVxuICAgIC8vIHRoaXMgbWVzc2FnZSBkb2Vzbid0IG9jY3VyIGVsc2V3aGVyZSBpbiB0aGlzIGZ1bmN0aW9uLCBvciBpdCB3aWxsIGNhdXNlXG4gICAgLy8gYSBmYWxzZSBwb3NpdGl2ZS5cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ15fXicpO1xuICB9XG4gIHRyeSB7XG4gICAgLy8gVmVyaWZ5IHRoYXQgdGhlIGNvZGUgYWJvdmUgaGFzIGJlZW4gZGVhZCBjb2RlIGVsaW1pbmF0ZWQgKERDRSdkKS5cbiAgICBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UoY2hlY2tEQ0UpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICAvLyBEZXZUb29scyBzaG91bGRuJ3QgY3Jhc2ggUmVhY3QsIG5vIG1hdHRlciB3aGF0LlxuICAgIC8vIFdlIHNob3VsZCBzdGlsbCByZXBvcnQgaW4gY2FzZSB3ZSBicmVhayB0aGlzIGNvZGUuXG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xuICB9XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIC8vIERDRSBjaGVjayBzaG91bGQgaGFwcGVuIGJlZm9yZSBSZWFjdERPTSBidW5kbGUgZXhlY3V0ZXMgc28gdGhhdFxuICAvLyBEZXZUb29scyBjYW4gcmVwb3J0IGJhZCBtaW5pZmljYXRpb24gZHVyaW5nIGluamVjdGlvbi5cbiAgY2hlY2tEQ0UoKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjE0LjBcbiAqIHJlYWN0LnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO3ZhciBsPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLG49XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixwPW4/U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMscT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYscj1uP1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyx0PW4/U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LHU9bj9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsdj1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSx3PW4/U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIik6NjAxMTAseD1uP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMix5PW4/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzLHo9bj9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTo2MDExNSxBPW4/U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIik6XG42MDExNixCPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiBDKGEpe2Zvcih2YXIgYj1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsYz0xO2M8YXJndW1lbnRzLmxlbmd0aDtjKyspYis9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbY10pO3JldHVyblwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0IFwiK2IrXCIgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwifVxudmFyIEQ9e2lzTW91bnRlZDpmdW5jdGlvbigpe3JldHVybiExfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbigpe319LEU9e307ZnVuY3Rpb24gRihhLGIsYyl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1FO3RoaXMudXBkYXRlcj1jfHxEfUYucHJvdG90eXBlLmlzUmVhY3RDb21wb25lbnQ9e307Ri5wcm90b3R5cGUuc2V0U3RhdGU9ZnVuY3Rpb24oYSxiKXtpZihcIm9iamVjdFwiIT09dHlwZW9mIGEmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhJiZudWxsIT1hKXRocm93IEVycm9yKEMoODUpKTt0aGlzLnVwZGF0ZXIuZW5xdWV1ZVNldFN0YXRlKHRoaXMsYSxiLFwic2V0U3RhdGVcIil9O0YucHJvdG90eXBlLmZvcmNlVXBkYXRlPWZ1bmN0aW9uKGEpe3RoaXMudXBkYXRlci5lbnF1ZXVlRm9yY2VVcGRhdGUodGhpcyxhLFwiZm9yY2VVcGRhdGVcIil9O1xuZnVuY3Rpb24gRygpe31HLnByb3RvdHlwZT1GLnByb3RvdHlwZTtmdW5jdGlvbiBIKGEsYixjKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUU7dGhpcy51cGRhdGVyPWN8fER9dmFyIEk9SC5wcm90b3R5cGU9bmV3IEc7SS5jb25zdHJ1Y3Rvcj1IO2woSSxGLnByb3RvdHlwZSk7SS5pc1B1cmVSZWFjdENvbXBvbmVudD0hMDt2YXIgSj17Y3VycmVudDpudWxsfSxLPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksTD17a2V5OiEwLHJlZjohMCxfX3NlbGY6ITAsX19zb3VyY2U6ITB9O1xuZnVuY3Rpb24gTShhLGIsYyl7dmFyIGUsZD17fSxnPW51bGwsaz1udWxsO2lmKG51bGwhPWIpZm9yKGUgaW4gdm9pZCAwIT09Yi5yZWYmJihrPWIucmVmKSx2b2lkIDAhPT1iLmtleSYmKGc9XCJcIitiLmtleSksYilLLmNhbGwoYixlKSYmIUwuaGFzT3duUHJvcGVydHkoZSkmJihkW2VdPWJbZV0pO3ZhciBmPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ZilkLmNoaWxkcmVuPWM7ZWxzZSBpZigxPGYpe2Zvcih2YXIgaD1BcnJheShmKSxtPTA7bTxmO20rKyloW21dPWFyZ3VtZW50c1ttKzJdO2QuY2hpbGRyZW49aH1pZihhJiZhLmRlZmF1bHRQcm9wcylmb3IoZSBpbiBmPWEuZGVmYXVsdFByb3BzLGYpdm9pZCAwPT09ZFtlXSYmKGRbZV09ZltlXSk7cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLGtleTpnLHJlZjprLHByb3BzOmQsX293bmVyOkouY3VycmVudH19XG5mdW5jdGlvbiBOKGEsYil7cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLnR5cGUsa2V5OmIscmVmOmEucmVmLHByb3BzOmEucHJvcHMsX293bmVyOmEuX293bmVyfX1mdW5jdGlvbiBPKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1wfWZ1bmN0aW9uIGVzY2FwZShhKXt2YXIgYj17XCI9XCI6XCI9MFwiLFwiOlwiOlwiPTJcIn07cmV0dXJuXCIkXCIrKFwiXCIrYSkucmVwbGFjZSgvWz06XS9nLGZ1bmN0aW9uKGEpe3JldHVybiBiW2FdfSl9dmFyIFA9L1xcLysvZyxRPVtdO2Z1bmN0aW9uIFIoYSxiLGMsZSl7aWYoUS5sZW5ndGgpe3ZhciBkPVEucG9wKCk7ZC5yZXN1bHQ9YTtkLmtleVByZWZpeD1iO2QuZnVuYz1jO2QuY29udGV4dD1lO2QuY291bnQ9MDtyZXR1cm4gZH1yZXR1cm57cmVzdWx0OmEsa2V5UHJlZml4OmIsZnVuYzpjLGNvbnRleHQ6ZSxjb3VudDowfX1cbmZ1bmN0aW9uIFMoYSl7YS5yZXN1bHQ9bnVsbDthLmtleVByZWZpeD1udWxsO2EuZnVuYz1udWxsO2EuY29udGV4dD1udWxsO2EuY291bnQ9MDsxMD5RLmxlbmd0aCYmUS5wdXNoKGEpfVxuZnVuY3Rpb24gVChhLGIsYyxlKXt2YXIgZD10eXBlb2YgYTtpZihcInVuZGVmaW5lZFwiPT09ZHx8XCJib29sZWFuXCI9PT1kKWE9bnVsbDt2YXIgZz0hMTtpZihudWxsPT09YSlnPSEwO2Vsc2Ugc3dpdGNoKGQpe2Nhc2UgXCJzdHJpbmdcIjpjYXNlIFwibnVtYmVyXCI6Zz0hMDticmVhaztjYXNlIFwib2JqZWN0XCI6c3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgcDpjYXNlIHE6Zz0hMH19aWYoZylyZXR1cm4gYyhlLGEsXCJcIj09PWI/XCIuXCIrVShhLDApOmIpLDE7Zz0wO2I9XCJcIj09PWI/XCIuXCI6YitcIjpcIjtpZihBcnJheS5pc0FycmF5KGEpKWZvcih2YXIgaz0wO2s8YS5sZW5ndGg7aysrKXtkPWFba107dmFyIGY9YitVKGQsayk7Zys9VChkLGYsYyxlKX1lbHNlIGlmKG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGE/Zj1udWxsOihmPUImJmFbQl18fGFbXCJAQGl0ZXJhdG9yXCJdLGY9XCJmdW5jdGlvblwiPT09dHlwZW9mIGY/ZjpudWxsKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZilmb3IoYT1mLmNhbGwoYSksaz1cbjA7IShkPWEubmV4dCgpKS5kb25lOylkPWQudmFsdWUsZj1iK1UoZCxrKyspLGcrPVQoZCxmLGMsZSk7ZWxzZSBpZihcIm9iamVjdFwiPT09ZCl0aHJvdyBjPVwiXCIrYSxFcnJvcihDKDMxLFwiW29iamVjdCBPYmplY3RdXCI9PT1jP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYSkuam9pbihcIiwgXCIpK1wifVwiOmMsXCJcIikpO3JldHVybiBnfWZ1bmN0aW9uIFYoYSxiLGMpe3JldHVybiBudWxsPT1hPzA6VChhLFwiXCIsYixjKX1mdW5jdGlvbiBVKGEsYil7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmbnVsbCE9YS5rZXk/ZXNjYXBlKGEua2V5KTpiLnRvU3RyaW5nKDM2KX1mdW5jdGlvbiBXKGEsYil7YS5mdW5jLmNhbGwoYS5jb250ZXh0LGIsYS5jb3VudCsrKX1cbmZ1bmN0aW9uIGFhKGEsYixjKXt2YXIgZT1hLnJlc3VsdCxkPWEua2V5UHJlZml4O2E9YS5mdW5jLmNhbGwoYS5jb250ZXh0LGIsYS5jb3VudCsrKTtBcnJheS5pc0FycmF5KGEpP1goYSxlLGMsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KTpudWxsIT1hJiYoTyhhKSYmKGE9TihhLGQrKCFhLmtleXx8YiYmYi5rZXk9PT1hLmtleT9cIlwiOihcIlwiK2Eua2V5KS5yZXBsYWNlKFAsXCIkJi9cIikrXCIvXCIpK2MpKSxlLnB1c2goYSkpfWZ1bmN0aW9uIFgoYSxiLGMsZSxkKXt2YXIgZz1cIlwiO251bGwhPWMmJihnPShcIlwiK2MpLnJlcGxhY2UoUCxcIiQmL1wiKStcIi9cIik7Yj1SKGIsZyxlLGQpO1YoYSxhYSxiKTtTKGIpfXZhciBZPXtjdXJyZW50Om51bGx9O2Z1bmN0aW9uIFooKXt2YXIgYT1ZLmN1cnJlbnQ7aWYobnVsbD09PWEpdGhyb3cgRXJyb3IoQygzMjEpKTtyZXR1cm4gYX1cbnZhciBiYT17UmVhY3RDdXJyZW50RGlzcGF0Y2hlcjpZLFJlYWN0Q3VycmVudEJhdGNoQ29uZmlnOntzdXNwZW5zZTpudWxsfSxSZWFjdEN1cnJlbnRPd25lcjpKLElzU29tZVJlbmRlcmVyQWN0aW5nOntjdXJyZW50OiExfSxhc3NpZ246bH07ZXhwb3J0cy5DaGlsZHJlbj17bWFwOmZ1bmN0aW9uKGEsYixjKXtpZihudWxsPT1hKXJldHVybiBhO3ZhciBlPVtdO1goYSxlLG51bGwsYixjKTtyZXR1cm4gZX0sZm9yRWFjaDpmdW5jdGlvbihhLGIsYyl7aWYobnVsbD09YSlyZXR1cm4gYTtiPVIobnVsbCxudWxsLGIsYyk7VihhLFcsYik7UyhiKX0sY291bnQ6ZnVuY3Rpb24oYSl7cmV0dXJuIFYoYSxmdW5jdGlvbigpe3JldHVybiBudWxsfSxudWxsKX0sdG9BcnJheTpmdW5jdGlvbihhKXt2YXIgYj1bXTtYKGEsYixudWxsLGZ1bmN0aW9uKGEpe3JldHVybiBhfSk7cmV0dXJuIGJ9LG9ubHk6ZnVuY3Rpb24oYSl7aWYoIU8oYSkpdGhyb3cgRXJyb3IoQygxNDMpKTtyZXR1cm4gYX19O1xuZXhwb3J0cy5Db21wb25lbnQ9RjtleHBvcnRzLkZyYWdtZW50PXI7ZXhwb3J0cy5Qcm9maWxlcj11O2V4cG9ydHMuUHVyZUNvbXBvbmVudD1IO2V4cG9ydHMuU3RyaWN0TW9kZT10O2V4cG9ydHMuU3VzcGVuc2U9eTtleHBvcnRzLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEPWJhO1xuZXhwb3J0cy5jbG9uZUVsZW1lbnQ9ZnVuY3Rpb24oYSxiLGMpe2lmKG51bGw9PT1hfHx2b2lkIDA9PT1hKXRocm93IEVycm9yKEMoMjY3LGEpKTt2YXIgZT1sKHt9LGEucHJvcHMpLGQ9YS5rZXksZz1hLnJlZixrPWEuX293bmVyO2lmKG51bGwhPWIpe3ZvaWQgMCE9PWIucmVmJiYoZz1iLnJlZixrPUouY3VycmVudCk7dm9pZCAwIT09Yi5rZXkmJihkPVwiXCIrYi5rZXkpO2lmKGEudHlwZSYmYS50eXBlLmRlZmF1bHRQcm9wcyl2YXIgZj1hLnR5cGUuZGVmYXVsdFByb3BzO2ZvcihoIGluIGIpSy5jYWxsKGIsaCkmJiFMLmhhc093blByb3BlcnR5KGgpJiYoZVtoXT12b2lkIDA9PT1iW2hdJiZ2b2lkIDAhPT1mP2ZbaF06YltoXSl9dmFyIGg9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1oKWUuY2hpbGRyZW49YztlbHNlIGlmKDE8aCl7Zj1BcnJheShoKTtmb3IodmFyIG09MDttPGg7bSsrKWZbbV09YXJndW1lbnRzW20rMl07ZS5jaGlsZHJlbj1mfXJldHVybnskJHR5cGVvZjpwLHR5cGU6YS50eXBlLFxua2V5OmQscmVmOmcscHJvcHM6ZSxfb3duZXI6a319O2V4cG9ydHMuY3JlYXRlQ29udGV4dD1mdW5jdGlvbihhLGIpe3ZvaWQgMD09PWImJihiPW51bGwpO2E9eyQkdHlwZW9mOncsX2NhbGN1bGF0ZUNoYW5nZWRCaXRzOmIsX2N1cnJlbnRWYWx1ZTphLF9jdXJyZW50VmFsdWUyOmEsX3RocmVhZENvdW50OjAsUHJvdmlkZXI6bnVsbCxDb25zdW1lcjpudWxsfTthLlByb3ZpZGVyPXskJHR5cGVvZjp2LF9jb250ZXh0OmF9O3JldHVybiBhLkNvbnN1bWVyPWF9O2V4cG9ydHMuY3JlYXRlRWxlbWVudD1NO2V4cG9ydHMuY3JlYXRlRmFjdG9yeT1mdW5jdGlvbihhKXt2YXIgYj1NLmJpbmQobnVsbCxhKTtiLnR5cGU9YTtyZXR1cm4gYn07ZXhwb3J0cy5jcmVhdGVSZWY9ZnVuY3Rpb24oKXtyZXR1cm57Y3VycmVudDpudWxsfX07ZXhwb3J0cy5mb3J3YXJkUmVmPWZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjp4LHJlbmRlcjphfX07ZXhwb3J0cy5pc1ZhbGlkRWxlbWVudD1PO1xuZXhwb3J0cy5sYXp5PWZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjpBLF9jdG9yOmEsX3N0YXR1czotMSxfcmVzdWx0Om51bGx9fTtleHBvcnRzLm1lbW89ZnVuY3Rpb24oYSxiKXtyZXR1cm57JCR0eXBlb2Y6eix0eXBlOmEsY29tcGFyZTp2b2lkIDA9PT1iP251bGw6Yn19O2V4cG9ydHMudXNlQ2FsbGJhY2s9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gWigpLnVzZUNhbGxiYWNrKGEsYil9O2V4cG9ydHMudXNlQ29udGV4dD1mdW5jdGlvbihhLGIpe3JldHVybiBaKCkudXNlQ29udGV4dChhLGIpfTtleHBvcnRzLnVzZURlYnVnVmFsdWU9ZnVuY3Rpb24oKXt9O2V4cG9ydHMudXNlRWZmZWN0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFooKS51c2VFZmZlY3QoYSxiKX07ZXhwb3J0cy51c2VJbXBlcmF0aXZlSGFuZGxlPWZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gWigpLnVzZUltcGVyYXRpdmVIYW5kbGUoYSxiLGMpfTtcbmV4cG9ydHMudXNlTGF5b3V0RWZmZWN0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFooKS51c2VMYXlvdXRFZmZlY3QoYSxiKX07ZXhwb3J0cy51c2VNZW1vPWZ1bmN0aW9uKGEsYil7cmV0dXJuIFooKS51c2VNZW1vKGEsYil9O2V4cG9ydHMudXNlUmVkdWNlcj1mdW5jdGlvbihhLGIsYyl7cmV0dXJuIFooKS51c2VSZWR1Y2VyKGEsYixjKX07ZXhwb3J0cy51c2VSZWY9ZnVuY3Rpb24oYSl7cmV0dXJuIFooKS51c2VSZWYoYSl9O2V4cG9ydHMudXNlU3RhdGU9ZnVuY3Rpb24oYSl7cmV0dXJuIFooKS51c2VTdGF0ZShhKX07ZXhwb3J0cy52ZXJzaW9uPVwiMTYuMTQuMFwiO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjAuMTkuMVxuICogc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO3ZhciBmLGcsaCxrLGw7XG5pZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvd3x8XCJmdW5jdGlvblwiIT09dHlwZW9mIE1lc3NhZ2VDaGFubmVsKXt2YXIgcD1udWxsLHE9bnVsbCx0PWZ1bmN0aW9uKCl7aWYobnVsbCE9PXApdHJ5e3ZhciBhPWV4cG9ydHMudW5zdGFibGVfbm93KCk7cCghMCxhKTtwPW51bGx9Y2F0Y2goYil7dGhyb3cgc2V0VGltZW91dCh0LDApLGI7fX0sdT1EYXRlLm5vdygpO2V4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIERhdGUubm93KCktdX07Zj1mdW5jdGlvbihhKXtudWxsIT09cD9zZXRUaW1lb3V0KGYsMCxhKToocD1hLHNldFRpbWVvdXQodCwwKSl9O2c9ZnVuY3Rpb24oYSxiKXtxPXNldFRpbWVvdXQoYSxiKX07aD1mdW5jdGlvbigpe2NsZWFyVGltZW91dChxKX07az1mdW5jdGlvbigpe3JldHVybiExfTtsPWV4cG9ydHMudW5zdGFibGVfZm9yY2VGcmFtZVJhdGU9ZnVuY3Rpb24oKXt9fWVsc2V7dmFyIHc9d2luZG93LnBlcmZvcm1hbmNlLHg9d2luZG93LkRhdGUsXG55PXdpbmRvdy5zZXRUaW1lb3V0LHo9d2luZG93LmNsZWFyVGltZW91dDtpZihcInVuZGVmaW5lZFwiIT09dHlwZW9mIGNvbnNvbGUpe3ZhciBBPXdpbmRvdy5jYW5jZWxBbmltYXRpb25GcmFtZTtcImZ1bmN0aW9uXCIhPT10eXBlb2Ygd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSYmY29uc29sZS5lcnJvcihcIlRoaXMgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgcmVxdWVzdEFuaW1hdGlvbkZyYW1lLiBNYWtlIHN1cmUgdGhhdCB5b3UgbG9hZCBhIHBvbHlmaWxsIGluIG9sZGVyIGJyb3dzZXJzLiBodHRwczovL2ZiLm1lL3JlYWN0LXBvbHlmaWxsc1wiKTtcImZ1bmN0aW9uXCIhPT10eXBlb2YgQSYmY29uc29sZS5lcnJvcihcIlRoaXMgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgY2FuY2VsQW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vZmIubWUvcmVhY3QtcG9seWZpbGxzXCIpfWlmKFwib2JqZWN0XCI9PT1cbnR5cGVvZiB3JiZcImZ1bmN0aW9uXCI9PT10eXBlb2Ygdy5ub3cpZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gdy5ub3coKX07ZWxzZXt2YXIgQj14Lm5vdygpO2V4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIHgubm93KCktQn19dmFyIEM9ITEsRD1udWxsLEU9LTEsRj01LEc9MDtrPWZ1bmN0aW9uKCl7cmV0dXJuIGV4cG9ydHMudW5zdGFibGVfbm93KCk+PUd9O2w9ZnVuY3Rpb24oKXt9O2V4cG9ydHMudW5zdGFibGVfZm9yY2VGcmFtZVJhdGU9ZnVuY3Rpb24oYSl7MD5hfHwxMjU8YT9jb25zb2xlLmVycm9yKFwiZm9yY2VGcmFtZVJhdGUgdGFrZXMgYSBwb3NpdGl2ZSBpbnQgYmV0d2VlbiAwIGFuZCAxMjUsIGZvcmNpbmcgZnJhbWVyYXRlcyBoaWdoZXIgdGhhbiAxMjUgZnBzIGlzIG5vdCB1bnN1cHBvcnRlZFwiKTpGPTA8YT9NYXRoLmZsb29yKDFFMy9hKTo1fTt2YXIgSD1uZXcgTWVzc2FnZUNoYW5uZWwsST1ILnBvcnQyO0gucG9ydDEub25tZXNzYWdlPVxuZnVuY3Rpb24oKXtpZihudWxsIT09RCl7dmFyIGE9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtHPWErRjt0cnl7RCghMCxhKT9JLnBvc3RNZXNzYWdlKG51bGwpOihDPSExLEQ9bnVsbCl9Y2F0Y2goYil7dGhyb3cgSS5wb3N0TWVzc2FnZShudWxsKSxiO319ZWxzZSBDPSExfTtmPWZ1bmN0aW9uKGEpe0Q9YTtDfHwoQz0hMCxJLnBvc3RNZXNzYWdlKG51bGwpKX07Zz1mdW5jdGlvbihhLGIpe0U9eShmdW5jdGlvbigpe2EoZXhwb3J0cy51bnN0YWJsZV9ub3coKSl9LGIpfTtoPWZ1bmN0aW9uKCl7eihFKTtFPS0xfX1mdW5jdGlvbiBKKGEsYil7dmFyIGM9YS5sZW5ndGg7YS5wdXNoKGIpO2E6Zm9yKDs7KXt2YXIgZD1jLTE+Pj4xLGU9YVtkXTtpZih2b2lkIDAhPT1lJiYwPEsoZSxiKSlhW2RdPWIsYVtjXT1lLGM9ZDtlbHNlIGJyZWFrIGF9fWZ1bmN0aW9uIEwoYSl7YT1hWzBdO3JldHVybiB2b2lkIDA9PT1hP251bGw6YX1cbmZ1bmN0aW9uIE0oYSl7dmFyIGI9YVswXTtpZih2b2lkIDAhPT1iKXt2YXIgYz1hLnBvcCgpO2lmKGMhPT1iKXthWzBdPWM7YTpmb3IodmFyIGQ9MCxlPWEubGVuZ3RoO2Q8ZTspe3ZhciBtPTIqKGQrMSktMSxuPWFbbV0sdj1tKzEscj1hW3ZdO2lmKHZvaWQgMCE9PW4mJjA+SyhuLGMpKXZvaWQgMCE9PXImJjA+SyhyLG4pPyhhW2RdPXIsYVt2XT1jLGQ9dik6KGFbZF09bixhW21dPWMsZD1tKTtlbHNlIGlmKHZvaWQgMCE9PXImJjA+SyhyLGMpKWFbZF09cixhW3ZdPWMsZD12O2Vsc2UgYnJlYWsgYX19cmV0dXJuIGJ9cmV0dXJuIG51bGx9ZnVuY3Rpb24gSyhhLGIpe3ZhciBjPWEuc29ydEluZGV4LWIuc29ydEluZGV4O3JldHVybiAwIT09Yz9jOmEuaWQtYi5pZH12YXIgTj1bXSxPPVtdLFA9MSxRPW51bGwsUj0zLFM9ITEsVD0hMSxVPSExO1xuZnVuY3Rpb24gVihhKXtmb3IodmFyIGI9TChPKTtudWxsIT09Yjspe2lmKG51bGw9PT1iLmNhbGxiYWNrKU0oTyk7ZWxzZSBpZihiLnN0YXJ0VGltZTw9YSlNKE8pLGIuc29ydEluZGV4PWIuZXhwaXJhdGlvblRpbWUsSihOLGIpO2Vsc2UgYnJlYWs7Yj1MKE8pfX1mdW5jdGlvbiBXKGEpe1U9ITE7VihhKTtpZighVClpZihudWxsIT09TChOKSlUPSEwLGYoWCk7ZWxzZXt2YXIgYj1MKE8pO251bGwhPT1iJiZnKFcsYi5zdGFydFRpbWUtYSl9fVxuZnVuY3Rpb24gWChhLGIpe1Q9ITE7VSYmKFU9ITEsaCgpKTtTPSEwO3ZhciBjPVI7dHJ5e1YoYik7Zm9yKFE9TChOKTtudWxsIT09USYmKCEoUS5leHBpcmF0aW9uVGltZT5iKXx8YSYmIWsoKSk7KXt2YXIgZD1RLmNhbGxiYWNrO2lmKG51bGwhPT1kKXtRLmNhbGxiYWNrPW51bGw7Uj1RLnByaW9yaXR5TGV2ZWw7dmFyIGU9ZChRLmV4cGlyYXRpb25UaW1lPD1iKTtiPWV4cG9ydHMudW5zdGFibGVfbm93KCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGU/US5jYWxsYmFjaz1lOlE9PT1MKE4pJiZNKE4pO1YoYil9ZWxzZSBNKE4pO1E9TChOKX1pZihudWxsIT09USl2YXIgbT0hMDtlbHNle3ZhciBuPUwoTyk7bnVsbCE9PW4mJmcoVyxuLnN0YXJ0VGltZS1iKTttPSExfXJldHVybiBtfWZpbmFsbHl7UT1udWxsLFI9YyxTPSExfX1cbmZ1bmN0aW9uIFkoYSl7c3dpdGNoKGEpe2Nhc2UgMTpyZXR1cm4tMTtjYXNlIDI6cmV0dXJuIDI1MDtjYXNlIDU6cmV0dXJuIDEwNzM3NDE4MjM7Y2FzZSA0OnJldHVybiAxRTQ7ZGVmYXVsdDpyZXR1cm4gNUUzfX12YXIgWj1sO2V4cG9ydHMudW5zdGFibGVfSWRsZVByaW9yaXR5PTU7ZXhwb3J0cy51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eT0xO2V4cG9ydHMudW5zdGFibGVfTG93UHJpb3JpdHk9NDtleHBvcnRzLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5PTM7ZXhwb3J0cy51bnN0YWJsZV9Qcm9maWxpbmc9bnVsbDtleHBvcnRzLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5PTI7ZXhwb3J0cy51bnN0YWJsZV9jYW5jZWxDYWxsYmFjaz1mdW5jdGlvbihhKXthLmNhbGxiYWNrPW51bGx9O2V4cG9ydHMudW5zdGFibGVfY29udGludWVFeGVjdXRpb249ZnVuY3Rpb24oKXtUfHxTfHwoVD0hMCxmKFgpKX07XG5leHBvcnRzLnVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsPWZ1bmN0aW9uKCl7cmV0dXJuIFJ9O2V4cG9ydHMudW5zdGFibGVfZ2V0Rmlyc3RDYWxsYmFja05vZGU9ZnVuY3Rpb24oKXtyZXR1cm4gTChOKX07ZXhwb3J0cy51bnN0YWJsZV9uZXh0PWZ1bmN0aW9uKGEpe3N3aXRjaChSKXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzp2YXIgYj0zO2JyZWFrO2RlZmF1bHQ6Yj1SfXZhciBjPVI7Uj1iO3RyeXtyZXR1cm4gYSgpfWZpbmFsbHl7Uj1jfX07ZXhwb3J0cy51bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbj1mdW5jdGlvbigpe307ZXhwb3J0cy51bnN0YWJsZV9yZXF1ZXN0UGFpbnQ9WjtleHBvcnRzLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eT1mdW5jdGlvbihhLGIpe3N3aXRjaChhKXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzpjYXNlIDQ6Y2FzZSA1OmJyZWFrO2RlZmF1bHQ6YT0zfXZhciBjPVI7Uj1hO3RyeXtyZXR1cm4gYigpfWZpbmFsbHl7Uj1jfX07XG5leHBvcnRzLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2s9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPWV4cG9ydHMudW5zdGFibGVfbm93KCk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBjJiZudWxsIT09Yyl7dmFyIGU9Yy5kZWxheTtlPVwibnVtYmVyXCI9PT10eXBlb2YgZSYmMDxlP2QrZTpkO2M9XCJudW1iZXJcIj09PXR5cGVvZiBjLnRpbWVvdXQ/Yy50aW1lb3V0OlkoYSl9ZWxzZSBjPVkoYSksZT1kO2M9ZStjO2E9e2lkOlArKyxjYWxsYmFjazpiLHByaW9yaXR5TGV2ZWw6YSxzdGFydFRpbWU6ZSxleHBpcmF0aW9uVGltZTpjLHNvcnRJbmRleDotMX07ZT5kPyhhLnNvcnRJbmRleD1lLEooTyxhKSxudWxsPT09TChOKSYmYT09PUwoTykmJihVP2goKTpVPSEwLGcoVyxlLWQpKSk6KGEuc29ydEluZGV4PWMsSihOLGEpLFR8fFN8fChUPSEwLGYoWCkpKTtyZXR1cm4gYX07XG5leHBvcnRzLnVuc3RhYmxlX3Nob3VsZFlpZWxkPWZ1bmN0aW9uKCl7dmFyIGE9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtWKGEpO3ZhciBiPUwoTik7cmV0dXJuIGIhPT1RJiZudWxsIT09USYmbnVsbCE9PWImJm51bGwhPT1iLmNhbGxiYWNrJiZiLnN0YXJ0VGltZTw9YSYmYi5leHBpcmF0aW9uVGltZTxRLmV4cGlyYXRpb25UaW1lfHxrKCl9O2V4cG9ydHMudW5zdGFibGVfd3JhcENhbGxiYWNrPWZ1bmN0aW9uKGEpe3ZhciBiPVI7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGM9UjtSPWI7dHJ5e3JldHVybiBhLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1maW5hbGx5e1I9Y319fTtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuZnVuY3Rpb24gaGFzaChzdHIpIHtcbiAgdmFyIGhhc2ggPSA1MzgxLFxuICAgICAgaSAgICA9IHN0ci5sZW5ndGg7XG5cbiAgd2hpbGUoaSkge1xuICAgIGhhc2ggPSAoaGFzaCAqIDMzKSBeIHN0ci5jaGFyQ29kZUF0KC0taSk7XG4gIH1cblxuICAvKiBKYXZhU2NyaXB0IGRvZXMgYml0d2lzZSBvcGVyYXRpb25zIChsaWtlIFhPUiwgYWJvdmUpIG9uIDMyLWJpdCBzaWduZWRcbiAgICogaW50ZWdlcnMuIFNpbmNlIHdlIHdhbnQgdGhlIHJlc3VsdHMgdG8gYmUgYWx3YXlzIHBvc2l0aXZlLCBjb252ZXJ0IHRoZVxuICAgKiBzaWduZWQgaW50IHRvIGFuIHVuc2lnbmVkIGJ5IGRvaW5nIGFuIHVuc2lnbmVkIGJpdHNoaWZ0LiAqL1xuICByZXR1cm4gaGFzaCA+Pj4gMDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBoYXNoO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRPTSA9IFtdO1xuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuICAgIGlmIChpbmRleEJ5SWRlbnRpZmllciAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdXBkYXRlciA9IGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpO1xuICAgICAgb3B0aW9ucy5ieUluZGV4ID0gaTtcbiAgICAgIHN0eWxlc0luRE9NLnNwbGljZShpLCAwLCB7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IHVwZGF0ZXIsXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cbmZ1bmN0aW9uIGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIHVwZGF0ZXI7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcbiAgICAgIGlmIChzdHlsZXNJbkRPTVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5ET01bX2luZGV4XS51cGRhdGVyKCk7XG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG5cbiAgICAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cbiAgY3NzICs9IG9iai5jc3M7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH1cblxuICAvLyBGb3Igb2xkIElFXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIGlmICh0eXBlb2YgZG9jdW1lbnQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoKSB7fSxcbiAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge31cbiAgICB9O1xuICB9XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmcgPSAoZnVuY3Rpb24oKSB7XG5cdGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ29iamVjdCcpIHJldHVybiBnbG9iYWxUaGlzO1xuXHR0cnkge1xuXHRcdHJldHVybiB0aGlzIHx8IG5ldyBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuXHR9IGNhdGNoIChlKSB7XG5cdFx0aWYgKHR5cGVvZiB3aW5kb3cgPT09ICdvYmplY3QnKSByZXR1cm4gd2luZG93O1xuXHR9XG59KSgpOyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJ2YXIgc2NyaXB0VXJsO1xuaWYgKF9fd2VicGFja19yZXF1aXJlX18uZy5pbXBvcnRTY3JpcHRzKSBzY3JpcHRVcmwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcubG9jYXRpb24gKyBcIlwiO1xudmFyIGRvY3VtZW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmRvY3VtZW50O1xuaWYgKCFzY3JpcHRVcmwgJiYgZG9jdW1lbnQpIHtcblx0aWYgKGRvY3VtZW50LmN1cnJlbnRTY3JpcHQpXG5cdFx0c2NyaXB0VXJsID0gZG9jdW1lbnQuY3VycmVudFNjcmlwdC5zcmM7XG5cdGlmICghc2NyaXB0VXJsKSB7XG5cdFx0dmFyIHNjcmlwdHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTtcblx0XHRpZihzY3JpcHRzLmxlbmd0aCkge1xuXHRcdFx0dmFyIGkgPSBzY3JpcHRzLmxlbmd0aCAtIDE7XG5cdFx0XHR3aGlsZSAoaSA+IC0xICYmICFzY3JpcHRVcmwpIHNjcmlwdFVybCA9IHNjcmlwdHNbaS0tXS5zcmM7XG5cdFx0fVxuXHR9XG59XG4vLyBXaGVuIHN1cHBvcnRpbmcgYnJvd3NlcnMgd2hlcmUgYW4gYXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCB5b3UgbXVzdCBzcGVjaWZ5IGFuIG91dHB1dC5wdWJsaWNQYXRoIG1hbnVhbGx5IHZpYSBjb25maWd1cmF0aW9uXG4vLyBvciBwYXNzIGFuIGVtcHR5IHN0cmluZyAoXCJcIikgYW5kIHNldCB0aGUgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gdmFyaWFibGUgZnJvbSB5b3VyIGNvZGUgdG8gdXNlIHlvdXIgb3duIGxvZ2ljLlxuaWYgKCFzY3JpcHRVcmwpIHRocm93IG5ldyBFcnJvcihcIkF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgaW4gdGhpcyBicm93c2VyXCIpO1xuc2NyaXB0VXJsID0gc2NyaXB0VXJsLnJlcGxhY2UoLyMuKiQvLCBcIlwiKS5yZXBsYWNlKC9cXD8uKiQvLCBcIlwiKS5yZXBsYWNlKC9cXC9bXlxcL10rJC8sIFwiL1wiKTtcbl9fd2VicGFja19yZXF1aXJlX18ucCA9IHNjcmlwdFVybDsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm5jID0gdW5kZWZpbmVkOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJpbWFnZXMvY2xvc2UtaWNvbi5wbmdcIjsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcblxuY29uc3QgTm90aWZpY2F0aW9uSXRlbSA9IFJlYWN0Lm1lbW8oKHsgdHlwZSwgaHRtbCwgdmFsdWUsIG1hcmtBc1JlYWQsIGlkIH0pID0+IHtcbiAgY29uc3QgaXRlbVN0eWxlID0ge1xuICAgIGNvbG9yOiB0eXBlID09PSAnZGVmYXVsdCcgPyAnYmx1ZScgOiB0eXBlID09PSAndXJnZW50JyA/ICdyZWQnIDogJ2luaGVyaXQnLFxuICB9O1xuXG4gIGNvbnN0IGhhbmRsZUNsaWNrID0gKCkgPT4ge1xuICAgIGlmIChtYXJrQXNSZWFkICYmIGlkKSB7XG4gICAgICBtYXJrQXNSZWFkKGlkKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAge3R5cGUgJiYgdmFsdWUgPyAoXG4gICAgICAgIDxsaSBzdHlsZT17aXRlbVN0eWxlfSBkYXRhLW5vdGlmaWNhdGlvbi10eXBlPXt0eXBlfSBvbkNsaWNrPXtoYW5kbGVDbGlja30+XG4gICAgICAgICAge3ZhbHVlfVxuICAgICAgICA8L2xpPlxuICAgICAgKSA6IG51bGx9XG4gICAgICB7aHRtbCA/IChcbiAgICAgICAgPGxpXG4gICAgICAgICAgc3R5bGU9e2l0ZW1TdHlsZX1cbiAgICAgICAgICBkYXRhLXVyZ2VudFxuICAgICAgICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt7IF9faHRtbDogaHRtbC5fX2h0bWwgfX1cbiAgICAgICAgICBvbkNsaWNrPXtoYW5kbGVDbGlja31cbiAgICAgICAgPjwvbGk+XG4gICAgICApIDogbnVsbH1cbiAgICA8Lz5cbiAgKTtcbn0pO1xuXG5Ob3RpZmljYXRpb25JdGVtLnByb3BUeXBlcyA9IHtcbiAgdHlwZTogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICBodG1sOiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIF9faHRtbDogUHJvcFR5cGVzLnN0cmluZyxcbiAgfSksXG4gIHZhbHVlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBtYXJrQXNSZWFkOiBQcm9wVHlwZXMuZnVuYyxcbiAgaWQ6IFByb3BUeXBlcy5udW1iZXIsXG59O1xuXG5Ob3RpZmljYXRpb25JdGVtLmRlZmF1bHRQcm9wcyA9IHtcbiAgdHlwZTogJ2RlZmF1bHQnLFxuICBtYXJrQXNSZWFkOiBudWxsLFxuICBpZDogbnVsbCxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IE5vdGlmaWNhdGlvbkl0ZW07XG4iLCJpbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuXG5jb25zdCBOb3RpZmljYXRpb25JdGVtU2hhcGUgPSBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIGlkOiBQcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWQsXG4gICAgaHRtbDogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICAgICAgX19odG1sOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gICAgfSkuaXNSZXF1aXJlZCxcbiAgICB0eXBlOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gICAgdmFsdWU6IFByb3BUeXBlcy5zdHJpbmcsXG5cbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBOb3RpZmljYXRpb25JdGVtU2hhcGU7IiwiaW1wb3J0IHN0cmluZ0hhc2ggZnJvbSAnc3RyaW5nLWhhc2gnO1xuaW1wb3J0IGFzYXAgZnJvbSAnYXNhcCc7XG5cbmZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7XG4gIGlmICh0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIikge1xuICAgIF90eXBlb2YgPSBmdW5jdGlvbiAob2JqKSB7XG4gICAgICByZXR1cm4gdHlwZW9mIG9iajtcbiAgICB9O1xuICB9IGVsc2Uge1xuICAgIF90eXBlb2YgPSBmdW5jdGlvbiAob2JqKSB7XG4gICAgICByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajtcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIF90eXBlb2Yob2JqKTtcbn1cblxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkge1xuICBpZiAoa2V5IGluIG9iaikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwge1xuICAgICAgdmFsdWU6IHZhbHVlLFxuICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgIHdyaXRhYmxlOiB0cnVlXG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgb2JqW2tleV0gPSB2YWx1ZTtcbiAgfVxuXG4gIHJldHVybiBvYmo7XG59XG5cbmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7XG4gIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXSAhPSBudWxsID8gYXJndW1lbnRzW2ldIDoge307XG4gICAgdmFyIG93bktleXMgPSBPYmplY3Qua2V5cyhzb3VyY2UpO1xuXG4gICAgaWYgKHR5cGVvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBvd25LZXlzID0gb3duS2V5cy5jb25jYXQoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2UpLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7XG4gICAgICAgIHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwgc3ltKS5lbnVtZXJhYmxlO1xuICAgICAgfSkpO1xuICAgIH1cblxuICAgIG93bktleXMuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTtcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59XG5cbmZ1bmN0aW9uIF90b0NvbnN1bWFibGVBcnJheShhcnIpIHtcbiAgcmV0dXJuIF9hcnJheVdpdGhvdXRIb2xlcyhhcnIpIHx8IF9pdGVyYWJsZVRvQXJyYXkoYXJyKSB8fCBfbm9uSXRlcmFibGVTcHJlYWQoKTtcbn1cblxuZnVuY3Rpb24gX2FycmF5V2l0aG91dEhvbGVzKGFycikge1xuICBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSB7XG4gICAgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkoYXJyLmxlbmd0aCk7IGkgPCBhcnIubGVuZ3RoOyBpKyspIGFycjJbaV0gPSBhcnJbaV07XG5cbiAgICByZXR1cm4gYXJyMjtcbiAgfVxufVxuXG5mdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5KGl0ZXIpIHtcbiAgaWYgKFN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoaXRlcikgfHwgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGl0ZXIpID09PSBcIltvYmplY3QgQXJndW1lbnRzXVwiKSByZXR1cm4gQXJyYXkuZnJvbShpdGVyKTtcbn1cblxuZnVuY3Rpb24gX25vbkl0ZXJhYmxlU3ByZWFkKCkge1xuICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIHNwcmVhZCBub24taXRlcmFibGUgaW5zdGFuY2VcIik7XG59XG5cbi8qIEBmbG93ICovXG4vKiA6OlxudHlwZSBPYmplY3RNYXAgPSB7IFtpZDpzdHJpbmddOiBhbnkgfTtcbiovXG5cbnZhciBVUFBFUkNBU0VfUkUgPSAvKFtBLVpdKS9nO1xuXG52YXIgVVBQRVJDQVNFX1JFX1RPX0tFQkFCID0gZnVuY3Rpb24gVVBQRVJDQVNFX1JFX1RPX0tFQkFCKG1hdGNoXG4vKiA6IHN0cmluZyAqL1xuKSB7XG4gIHJldHVybiAoXG4gICAgLyogOiBzdHJpbmcgKi9cbiAgICBcIi1cIi5jb25jYXQobWF0Y2gudG9Mb3dlckNhc2UoKSlcbiAgKTtcbn07XG5cbnZhciBrZWJhYmlmeVN0eWxlTmFtZSA9IGZ1bmN0aW9uIGtlYmFiaWZ5U3R5bGVOYW1lKHN0cmluZ1xuLyogOiBzdHJpbmcgKi9cbilcbi8qIDogc3RyaW5nICovXG57XG4gIHZhciByZXN1bHQgPSBzdHJpbmcucmVwbGFjZShVUFBFUkNBU0VfUkUsIFVQUEVSQ0FTRV9SRV9UT19LRUJBQik7XG5cbiAgaWYgKHJlc3VsdFswXSA9PT0gJ20nICYmIHJlc3VsdFsxXSA9PT0gJ3MnICYmIHJlc3VsdFsyXSA9PT0gJy0nKSB7XG4gICAgcmV0dXJuIFwiLVwiLmNvbmNhdChyZXN1bHQpO1xuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn07XG4vKipcbiAqIENTUyBwcm9wZXJ0aWVzIHdoaWNoIGFjY2VwdCBudW1iZXJzIGJ1dCBhcmUgbm90IGluIHVuaXRzIG9mIFwicHhcIi5cbiAqIFRha2VuIGZyb20gUmVhY3QncyBDU1NQcm9wZXJ0eS5qc1xuICovXG5cbnZhciBpc1VuaXRsZXNzTnVtYmVyID0ge1xuICBhbmltYXRpb25JdGVyYXRpb25Db3VudDogdHJ1ZSxcbiAgYm9yZGVySW1hZ2VPdXRzZXQ6IHRydWUsXG4gIGJvcmRlckltYWdlU2xpY2U6IHRydWUsXG4gIGJvcmRlckltYWdlV2lkdGg6IHRydWUsXG4gIGJveEZsZXg6IHRydWUsXG4gIGJveEZsZXhHcm91cDogdHJ1ZSxcbiAgYm94T3JkaW5hbEdyb3VwOiB0cnVlLFxuICBjb2x1bW5Db3VudDogdHJ1ZSxcbiAgZmxleDogdHJ1ZSxcbiAgZmxleEdyb3c6IHRydWUsXG4gIGZsZXhQb3NpdGl2ZTogdHJ1ZSxcbiAgZmxleFNocmluazogdHJ1ZSxcbiAgZmxleE5lZ2F0aXZlOiB0cnVlLFxuICBmbGV4T3JkZXI6IHRydWUsXG4gIGdyaWRSb3c6IHRydWUsXG4gIGdyaWRDb2x1bW46IHRydWUsXG4gIGZvbnRXZWlnaHQ6IHRydWUsXG4gIGxpbmVDbGFtcDogdHJ1ZSxcbiAgbGluZUhlaWdodDogdHJ1ZSxcbiAgb3BhY2l0eTogdHJ1ZSxcbiAgb3JkZXI6IHRydWUsXG4gIG9ycGhhbnM6IHRydWUsXG4gIHRhYlNpemU6IHRydWUsXG4gIHdpZG93czogdHJ1ZSxcbiAgekluZGV4OiB0cnVlLFxuICB6b29tOiB0cnVlLFxuICAvLyBTVkctcmVsYXRlZCBwcm9wZXJ0aWVzXG4gIGZpbGxPcGFjaXR5OiB0cnVlLFxuICBmbG9vZE9wYWNpdHk6IHRydWUsXG4gIHN0b3BPcGFjaXR5OiB0cnVlLFxuICBzdHJva2VEYXNoYXJyYXk6IHRydWUsXG4gIHN0cm9rZURhc2hvZmZzZXQ6IHRydWUsXG4gIHN0cm9rZU1pdGVybGltaXQ6IHRydWUsXG4gIHN0cm9rZU9wYWNpdHk6IHRydWUsXG4gIHN0cm9rZVdpZHRoOiB0cnVlXG59O1xuLyoqXG4gKiBUYWtlbiBmcm9tIFJlYWN0J3MgQ1NTUHJvcGVydHkuanNcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gcHJlZml4IHZlbmRvci1zcGVjaWZpYyBwcmVmaXgsIGVnOiBXZWJraXRcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgc3R5bGUgbmFtZSwgZWc6IHRyYW5zaXRpb25EdXJhdGlvblxuICogQHJldHVybiB7c3RyaW5nfSBzdHlsZSBuYW1lIHByZWZpeGVkIHdpdGggYHByZWZpeGAsIHByb3Blcmx5IGNhbWVsQ2FzZWQsIGVnOlxuICogV2Via2l0VHJhbnNpdGlvbkR1cmF0aW9uXG4gKi9cblxuZnVuY3Rpb24gcHJlZml4S2V5KHByZWZpeCwga2V5KSB7XG4gIHJldHVybiBwcmVmaXggKyBrZXkuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBrZXkuc3Vic3RyaW5nKDEpO1xufVxuLyoqXG4gKiBTdXBwb3J0IHN0eWxlIG5hbWVzIHRoYXQgbWF5IGNvbWUgcGFzc2VkIGluIHByZWZpeGVkIGJ5IGFkZGluZyBwZXJtdXRhdGlvbnNcbiAqIG9mIHZlbmRvciBwcmVmaXhlcy5cbiAqIFRha2VuIGZyb20gUmVhY3QncyBDU1NQcm9wZXJ0eS5qc1xuICovXG5cblxudmFyIHByZWZpeGVzID0gWydXZWJraXQnLCAnbXMnLCAnTW96JywgJ08nXTsgLy8gVXNpbmcgT2JqZWN0LmtleXMgaGVyZSwgb3IgZWxzZSB0aGUgdmFuaWxsYSBmb3ItaW4gbG9vcCBtYWtlcyBJRTggZ28gaW50byBhblxuLy8gaW5maW5pdGUgbG9vcCwgYmVjYXVzZSBpdCBpdGVyYXRlcyBvdmVyIHRoZSBuZXdseSBhZGRlZCBwcm9wcyB0b28uXG4vLyBUYWtlbiBmcm9tIFJlYWN0J3MgQ1NTUHJvcGVydHkuanNcblxuT2JqZWN0LmtleXMoaXNVbml0bGVzc051bWJlcikuZm9yRWFjaChmdW5jdGlvbiAocHJvcCkge1xuICBwcmVmaXhlcy5mb3JFYWNoKGZ1bmN0aW9uIChwcmVmaXgpIHtcbiAgICBpc1VuaXRsZXNzTnVtYmVyW3ByZWZpeEtleShwcmVmaXgsIHByb3ApXSA9IGlzVW5pdGxlc3NOdW1iZXJbcHJvcF07XG4gIH0pO1xufSk7XG52YXIgc3RyaW5naWZ5VmFsdWUgPSBmdW5jdGlvbiBzdHJpbmdpZnlWYWx1ZShrZXlcbi8qIDogc3RyaW5nICovXG4sIHByb3Bcbi8qIDogYW55ICovXG4pXG4vKiA6IHN0cmluZyAqL1xue1xuICBpZiAodHlwZW9mIHByb3AgPT09IFwibnVtYmVyXCIpIHtcbiAgICBpZiAoaXNVbml0bGVzc051bWJlcltrZXldKSB7XG4gICAgICByZXR1cm4gXCJcIiArIHByb3A7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBwcm9wICsgXCJweFwiO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gJycgKyBwcm9wO1xuICB9XG59O1xudmFyIHN0cmluZ2lmeUFuZEltcG9ydGFudGlmeVZhbHVlID0gZnVuY3Rpb24gc3RyaW5naWZ5QW5kSW1wb3J0YW50aWZ5VmFsdWUoa2V5XG4vKiA6IHN0cmluZyAqL1xuLCBwcm9wXG4vKiA6IGFueSAqL1xuKSB7XG4gIHJldHVybiAoXG4gICAgLyogOiBzdHJpbmcgKi9cbiAgICBpbXBvcnRhbnRpZnkoc3RyaW5naWZ5VmFsdWUoa2V5LCBwcm9wKSlcbiAgKTtcbn07IC8vIFR1cm4gYSBzdHJpbmcgaW50byBhIGhhc2ggc3RyaW5nIG9mIGJhc2UtMzYgdmFsdWVzICh1c2luZyBsZXR0ZXJzIGFuZCBudW1iZXJzKVxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXG5cbnZhciBoYXNoU3RyaW5nID0gZnVuY3Rpb24gaGFzaFN0cmluZyhzdHJpbmdcbi8qIDogc3RyaW5nICovXG4sIGtleVxuLyogOiA/c3RyaW5nICovXG4pIHtcbiAgcmV0dXJuIChcbiAgICAvKiBzdHJpbmcgKi9cbiAgICBzdHJpbmdIYXNoKHN0cmluZykudG9TdHJpbmcoMzYpXG4gICk7XG59OyAvLyBIYXNoIGEgamF2YXNjcmlwdCBvYmplY3QgdXNpbmcgSlNPTi5zdHJpbmdpZnkuIFRoaXMgaXMgdmVyeSBmYXN0LCBhYm91dCAzXG4vLyBtaWNyb3NlY29uZHMgb24gbXkgY29tcHV0ZXIgZm9yIGEgc2FtcGxlIG9iamVjdDpcbi8vIGh0dHA6Ly9qc3BlcmYuY29tL3Rlc3QtaGFzaGZudjMyYS1oYXNoLzVcbi8vXG4vLyBOb3RlIHRoYXQgdGhpcyB1c2VzIEpTT04uc3RyaW5naWZ5IHRvIHN0cmluZ2lmeSB0aGUgb2JqZWN0cyBzbyBpbiBvcmRlciBmb3Jcbi8vIHRoaXMgdG8gcHJvZHVjZSBjb25zaXN0ZW50IGhhc2hlcyBicm93c2VycyBuZWVkIHRvIGhhdmUgYSBjb25zaXN0ZW50XG4vLyBvcmRlcmluZyBvZiBvYmplY3RzLiBCZW4gQWxwZXJ0IHNheXMgdGhhdCBGYWNlYm9vayBkZXBlbmRzIG9uIHRoaXMsIHNvIHdlXG4vLyBjYW4gcHJvYmFibHkgZGVwZW5kIG9uIHRoaXMgdG9vLlxuXG52YXIgaGFzaE9iamVjdCA9IGZ1bmN0aW9uIGhhc2hPYmplY3Qob2JqZWN0XG4vKiA6IE9iamVjdE1hcCAqL1xuKSB7XG4gIHJldHVybiAoXG4gICAgLyogOiBzdHJpbmcgKi9cbiAgICBoYXNoU3RyaW5nKEpTT04uc3RyaW5naWZ5KG9iamVjdCkpXG4gICk7XG59OyAvLyBHaXZlbiBhIHNpbmdsZSBzdHlsZSB2YWx1ZSBzdHJpbmcgbGlrZSB0aGUgXCJiXCIgZnJvbSBcImE6IGI7XCIsIGFkZHMgIWltcG9ydGFudFxuLy8gdG8gZ2VuZXJhdGUgXCJiICFpbXBvcnRhbnRcIi5cblxudmFyIGltcG9ydGFudGlmeSA9IGZ1bmN0aW9uIGltcG9ydGFudGlmeShzdHJpbmdcbi8qIDogc3RyaW5nICovXG4pIHtcbiAgcmV0dXJuIChcbiAgICAvKiA6IHN0cmluZyAqL1xuICAgIC8vIEJyYWNrZXQgc3RyaW5nIGNoYXJhY3RlciBhY2Nlc3MgaXMgdmVyeSBmYXN0LCBhbmQgaW4gdGhlIGRlZmF1bHQgY2FzZSB3ZVxuICAgIC8vIG5vcm1hbGx5IGRvbid0IGV4cGVjdCB0aGVyZSB0byBiZSBcIiFpbXBvcnRhbnRcIiBhdCB0aGUgZW5kIG9mIHRoZSBzdHJpbmdcbiAgICAvLyBzbyB3ZSBjYW4gdXNlIHRoaXMgc2ltcGxlIGNoZWNrIHRvIHRha2UgYW4gb3B0aW1pemVkIHBhdGguIElmIHRoZXJlXG4gICAgLy8gaGFwcGVucyB0byBiZSBhIFwiIVwiIGluIHRoaXMgcG9zaXRpb24sIHdlIGZvbGxvdyB1cCB3aXRoIGEgbW9yZSB0aG9yb3VnaFxuICAgIC8vIGNoZWNrLlxuICAgIHN0cmluZ1tzdHJpbmcubGVuZ3RoIC0gMTBdID09PSAnIScgJiYgc3RyaW5nLnNsaWNlKC0xMSkgPT09ICcgIWltcG9ydGFudCcgPyBzdHJpbmcgOiBcIlwiLmNvbmNhdChzdHJpbmcsIFwiICFpbXBvcnRhbnRcIilcbiAgKTtcbn07XG5cbi8qIEBmbG93ICovXG52YXIgTUFQX0VYSVNUUyA9IHR5cGVvZiBNYXAgIT09ICd1bmRlZmluZWQnO1xuXG52YXIgT3JkZXJlZEVsZW1lbnRzID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uICgpIHtcbiAgLyogOjpcbiAgZWxlbWVudHM6IHtbc3RyaW5nXTogYW55fTtcbiAga2V5T3JkZXI6IHN0cmluZ1tdO1xuICAqL1xuICBmdW5jdGlvbiBPcmRlcmVkRWxlbWVudHMoKSB7XG4gICAgdGhpcy5lbGVtZW50cyA9IHt9O1xuICAgIHRoaXMua2V5T3JkZXIgPSBbXTtcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBPcmRlcmVkRWxlbWVudHMucHJvdG90eXBlO1xuXG4gIF9wcm90by5mb3JFYWNoID0gZnVuY3Rpb24gZm9yRWFjaChjYWxsYmFja1xuICAvKiA6IChzdHJpbmcsIGFueSkgPT4gdm9pZCAqL1xuICApIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMua2V5T3JkZXIubGVuZ3RoOyBpKyspIHtcbiAgICAgIC8vICh2YWx1ZSwga2V5KSB0byBtYXRjaCBNYXAncyBBUElcbiAgICAgIGNhbGxiYWNrKHRoaXMuZWxlbWVudHNbdGhpcy5rZXlPcmRlcltpXV0sIHRoaXMua2V5T3JkZXJbaV0pO1xuICAgIH1cbiAgfTtcblxuICBfcHJvdG8uc2V0ID0gZnVuY3Rpb24gc2V0KGtleVxuICAvKiA6IHN0cmluZyAqL1xuICAsIHZhbHVlXG4gIC8qIDogYW55ICovXG4gICwgc2hvdWxkUmVvcmRlclxuICAvKiA6ID9ib29sZWFuICovXG4gICkge1xuICAgIGlmICghdGhpcy5lbGVtZW50cy5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICB0aGlzLmtleU9yZGVyLnB1c2goa2V5KTtcbiAgICB9IGVsc2UgaWYgKHNob3VsZFJlb3JkZXIpIHtcbiAgICAgIHZhciBpbmRleCA9IHRoaXMua2V5T3JkZXIuaW5kZXhPZihrZXkpO1xuICAgICAgdGhpcy5rZXlPcmRlci5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgdGhpcy5rZXlPcmRlci5wdXNoKGtleSk7XG4gICAgfVxuXG4gICAgaWYgKHZhbHVlID09IG51bGwpIHtcbiAgICAgIHRoaXMuZWxlbWVudHNba2V5XSA9IHZhbHVlO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmIChNQVBfRVhJU1RTICYmIHZhbHVlIGluc3RhbmNlb2YgTWFwIHx8IHZhbHVlIGluc3RhbmNlb2YgT3JkZXJlZEVsZW1lbnRzKSB7XG4gICAgICAvLyBXZSBoYXZlIGZvdW5kIGEgbmVzdGVkIE1hcCwgc28gd2UgbmVlZCB0byByZWN1cnNlIHNvIHRoYXQgYWxsXG4gICAgICAvLyBvZiB0aGUgbmVzdGVkIG9iamVjdHMgYW5kIE1hcHMgYXJlIG1lcmdlZCBwcm9wZXJseS5cbiAgICAgIHZhciBuZXN0ZWQgPSB0aGlzLmVsZW1lbnRzLmhhc093blByb3BlcnR5KGtleSkgPyB0aGlzLmVsZW1lbnRzW2tleV0gOiBuZXcgT3JkZXJlZEVsZW1lbnRzKCk7XG4gICAgICB2YWx1ZS5mb3JFYWNoKGZ1bmN0aW9uICh2YWx1ZSwga2V5KSB7XG4gICAgICAgIG5lc3RlZC5zZXQoa2V5LCB2YWx1ZSwgc2hvdWxkUmVvcmRlcik7XG4gICAgICB9KTtcbiAgICAgIHRoaXMuZWxlbWVudHNba2V5XSA9IG5lc3RlZDtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoIUFycmF5LmlzQXJyYXkodmFsdWUpICYmIF90eXBlb2YodmFsdWUpID09PSAnb2JqZWN0Jykge1xuICAgICAgLy8gV2UgaGF2ZSBmb3VuZCBhIG5lc3RlZCBvYmplY3QsIHNvIHdlIG5lZWQgdG8gcmVjdXJzZSBzbyB0aGF0IGFsbFxuICAgICAgLy8gb2YgdGhlIG5lc3RlZCBvYmplY3RzIGFuZCBNYXBzIGFyZSBtZXJnZWQgcHJvcGVybHkuXG4gICAgICB2YXIgX25lc3RlZCA9IHRoaXMuZWxlbWVudHMuaGFzT3duUHJvcGVydHkoa2V5KSA/IHRoaXMuZWxlbWVudHNba2V5XSA6IG5ldyBPcmRlcmVkRWxlbWVudHMoKTtcblxuICAgICAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyh2YWx1ZSk7XG5cbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICBfbmVzdGVkLnNldChrZXlzW2ldLCB2YWx1ZVtrZXlzW2ldXSwgc2hvdWxkUmVvcmRlcik7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuZWxlbWVudHNba2V5XSA9IF9uZXN0ZWQ7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhpcy5lbGVtZW50c1trZXldID0gdmFsdWU7XG4gIH07XG5cbiAgX3Byb3RvLmdldCA9IGZ1bmN0aW9uIGdldChrZXlcbiAgLyogOiBzdHJpbmcgKi9cbiAgKVxuICAvKiA6IGFueSAqL1xuICB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudHNba2V5XTtcbiAgfTtcblxuICBfcHJvdG8uaGFzID0gZnVuY3Rpb24gaGFzKGtleVxuICAvKiA6IHN0cmluZyAqL1xuICApXG4gIC8qIDogYm9vbGVhbiAqL1xuICB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudHMuaGFzT3duUHJvcGVydHkoa2V5KTtcbiAgfTtcblxuICBfcHJvdG8uYWRkU3R5bGVUeXBlID0gZnVuY3Rpb24gYWRkU3R5bGVUeXBlKHN0eWxlVHlwZVxuICAvKiA6IGFueSAqL1xuICApXG4gIC8qIDogdm9pZCAqL1xuICB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIGlmIChNQVBfRVhJU1RTICYmIHN0eWxlVHlwZSBpbnN0YW5jZW9mIE1hcCB8fCBzdHlsZVR5cGUgaW5zdGFuY2VvZiBPcmRlcmVkRWxlbWVudHMpIHtcbiAgICAgIHN0eWxlVHlwZS5mb3JFYWNoKGZ1bmN0aW9uICh2YWx1ZSwga2V5KSB7XG4gICAgICAgIF90aGlzLnNldChrZXksIHZhbHVlLCB0cnVlKTtcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKHN0eWxlVHlwZSk7XG5cbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykge1xuICAgICAgICB0aGlzLnNldChrZXlzW2ldLCBzdHlsZVR5cGVba2V5c1tpXV0sIHRydWUpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICByZXR1cm4gT3JkZXJlZEVsZW1lbnRzO1xufSgpO1xuXG5mdW5jdGlvbiB1bndyYXBFeHBvcnRzICh4KSB7XG5cdHJldHVybiB4ICYmIHguX19lc01vZHVsZSAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoeCwgJ2RlZmF1bHQnKSA/IHguZGVmYXVsdCA6IHg7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUNvbW1vbmpzTW9kdWxlKGZuLCBtb2R1bGUpIHtcblx0cmV0dXJuIG1vZHVsZSA9IHsgZXhwb3J0czoge30gfSwgZm4obW9kdWxlLCBtb2R1bGUuZXhwb3J0cyksIG1vZHVsZS5leHBvcnRzO1xufVxuXG5mdW5jdGlvbiBnZXRDanNFeHBvcnRGcm9tTmFtZXNwYWNlIChuKSB7XG5cdHJldHVybiBuICYmIG4uZGVmYXVsdCB8fCBuO1xufVxuXG52YXIgY2FwaXRhbGl6ZVN0cmluZ18xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gY2FwaXRhbGl6ZVN0cmluZztcbmZ1bmN0aW9uIGNhcGl0YWxpemVTdHJpbmcoc3RyKSB7XG4gIHJldHVybiBzdHIuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBzdHIuc2xpY2UoMSk7XG59XG59KTtcblxudW53cmFwRXhwb3J0cyhjYXBpdGFsaXplU3RyaW5nXzEpO1xuXG52YXIgcHJlZml4UHJvcGVydHlfMSA9IGNyZWF0ZUNvbW1vbmpzTW9kdWxlKGZ1bmN0aW9uIChtb2R1bGUsIGV4cG9ydHMpIHtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHByZWZpeFByb3BlcnR5O1xuXG5cblxudmFyIF9jYXBpdGFsaXplU3RyaW5nMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoY2FwaXRhbGl6ZVN0cmluZ18xKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gcHJlZml4UHJvcGVydHkocHJlZml4UHJvcGVydGllcywgcHJvcGVydHksIHN0eWxlKSB7XG4gIGlmIChwcmVmaXhQcm9wZXJ0aWVzLmhhc093blByb3BlcnR5KHByb3BlcnR5KSkge1xuICAgIHZhciBuZXdTdHlsZSA9IHt9O1xuICAgIHZhciByZXF1aXJlZFByZWZpeGVzID0gcHJlZml4UHJvcGVydGllc1twcm9wZXJ0eV07XG4gICAgdmFyIGNhcGl0YWxpemVkUHJvcGVydHkgPSAoMCwgX2NhcGl0YWxpemVTdHJpbmcyLmRlZmF1bHQpKHByb3BlcnR5KTtcbiAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKHN0eWxlKTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBzdHlsZVByb3BlcnR5ID0ga2V5c1tpXTtcbiAgICAgIGlmIChzdHlsZVByb3BlcnR5ID09PSBwcm9wZXJ0eSkge1xuICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHJlcXVpcmVkUHJlZml4ZXMubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICBuZXdTdHlsZVtyZXF1aXJlZFByZWZpeGVzW2pdICsgY2FwaXRhbGl6ZWRQcm9wZXJ0eV0gPSBzdHlsZVtwcm9wZXJ0eV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIG5ld1N0eWxlW3N0eWxlUHJvcGVydHldID0gc3R5bGVbc3R5bGVQcm9wZXJ0eV07XG4gICAgfVxuICAgIHJldHVybiBuZXdTdHlsZTtcbiAgfVxuICByZXR1cm4gc3R5bGU7XG59XG59KTtcblxudW53cmFwRXhwb3J0cyhwcmVmaXhQcm9wZXJ0eV8xKTtcblxudmFyIHByZWZpeFZhbHVlXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBwcmVmaXhWYWx1ZTtcbmZ1bmN0aW9uIHByZWZpeFZhbHVlKHBsdWdpbnMsIHByb3BlcnR5LCB2YWx1ZSwgc3R5bGUsIG1ldGFEYXRhKSB7XG4gIGZvciAodmFyIGkgPSAwLCBsZW4gPSBwbHVnaW5zLmxlbmd0aDsgaSA8IGxlbjsgKytpKSB7XG4gICAgdmFyIHByb2Nlc3NlZFZhbHVlID0gcGx1Z2luc1tpXShwcm9wZXJ0eSwgdmFsdWUsIHN0eWxlLCBtZXRhRGF0YSk7XG5cbiAgICAvLyB3ZSBjYW4gc3RvcCBwcm9jZXNzaW5nIGlmIGEgdmFsdWUgaXMgcmV0dXJuZWRcbiAgICAvLyBhcyBhbGwgcGx1Z2luIGNyaXRlcmlhIGFyZSB1bmlxdWVcbiAgICBpZiAocHJvY2Vzc2VkVmFsdWUpIHtcbiAgICAgIHJldHVybiBwcm9jZXNzZWRWYWx1ZTtcbiAgICB9XG4gIH1cbn1cbn0pO1xuXG51bndyYXBFeHBvcnRzKHByZWZpeFZhbHVlXzEpO1xuXG52YXIgYWRkTmV3VmFsdWVzT25seV8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gYWRkTmV3VmFsdWVzT25seTtcbmZ1bmN0aW9uIGFkZElmTmV3KGxpc3QsIHZhbHVlKSB7XG4gIGlmIChsaXN0LmluZGV4T2YodmFsdWUpID09PSAtMSkge1xuICAgIGxpc3QucHVzaCh2YWx1ZSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gYWRkTmV3VmFsdWVzT25seShsaXN0LCB2YWx1ZXMpIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWVzKSkge1xuICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSB2YWx1ZXMubGVuZ3RoOyBpIDwgbGVuOyArK2kpIHtcbiAgICAgIGFkZElmTmV3KGxpc3QsIHZhbHVlc1tpXSk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGFkZElmTmV3KGxpc3QsIHZhbHVlcyk7XG4gIH1cbn1cbn0pO1xuXG51bndyYXBFeHBvcnRzKGFkZE5ld1ZhbHVlc09ubHlfMSk7XG5cbnZhciBpc09iamVjdF8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gaXNPYmplY3Q7XG5mdW5jdGlvbiBpc09iamVjdCh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBPYmplY3QgJiYgIUFycmF5LmlzQXJyYXkodmFsdWUpO1xufVxufSk7XG5cbnVud3JhcEV4cG9ydHMoaXNPYmplY3RfMSk7XG5cbnZhciBjcmVhdGVQcmVmaXhlcl8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gY3JlYXRlUHJlZml4ZXI7XG5cblxuXG52YXIgX3ByZWZpeFByb3BlcnR5MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocHJlZml4UHJvcGVydHlfMSk7XG5cblxuXG52YXIgX3ByZWZpeFZhbHVlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocHJlZml4VmFsdWVfMSk7XG5cblxuXG52YXIgX2FkZE5ld1ZhbHVlc09ubHkyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChhZGROZXdWYWx1ZXNPbmx5XzEpO1xuXG5cblxudmFyIF9pc09iamVjdDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KGlzT2JqZWN0XzEpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBjcmVhdGVQcmVmaXhlcihfcmVmKSB7XG4gIHZhciBwcmVmaXhNYXAgPSBfcmVmLnByZWZpeE1hcCxcbiAgICAgIHBsdWdpbnMgPSBfcmVmLnBsdWdpbnM7XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIHByZWZpeChzdHlsZSkge1xuICAgIGZvciAodmFyIHByb3BlcnR5IGluIHN0eWxlKSB7XG4gICAgICB2YXIgdmFsdWUgPSBzdHlsZVtwcm9wZXJ0eV07XG5cbiAgICAgIC8vIGhhbmRsZSBuZXN0ZWQgb2JqZWN0c1xuICAgICAgaWYgKCgwLCBfaXNPYmplY3QyLmRlZmF1bHQpKHZhbHVlKSkge1xuICAgICAgICBzdHlsZVtwcm9wZXJ0eV0gPSBwcmVmaXgodmFsdWUpO1xuICAgICAgICAvLyBoYW5kbGUgYXJyYXkgdmFsdWVzXG4gICAgICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICAgIHZhciBjb21iaW5lZFZhbHVlID0gW107XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IHZhbHVlLmxlbmd0aDsgaSA8IGxlbjsgKytpKSB7XG4gICAgICAgICAgdmFyIHByb2Nlc3NlZFZhbHVlID0gKDAsIF9wcmVmaXhWYWx1ZTIuZGVmYXVsdCkocGx1Z2lucywgcHJvcGVydHksIHZhbHVlW2ldLCBzdHlsZSwgcHJlZml4TWFwKTtcbiAgICAgICAgICAoMCwgX2FkZE5ld1ZhbHVlc09ubHkyLmRlZmF1bHQpKGNvbWJpbmVkVmFsdWUsIHByb2Nlc3NlZFZhbHVlIHx8IHZhbHVlW2ldKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIG9ubHkgbW9kaWZ5IHRoZSB2YWx1ZSBpZiBpdCB3YXMgdG91Y2hlZFxuICAgICAgICAvLyBieSBhbnkgcGx1Z2luIHRvIHByZXZlbnQgdW5uZWNlc3NhcnkgbXV0YXRpb25zXG4gICAgICAgIGlmIChjb21iaW5lZFZhbHVlLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICBzdHlsZVtwcm9wZXJ0eV0gPSBjb21iaW5lZFZhbHVlO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgX3Byb2Nlc3NlZFZhbHVlID0gKDAsIF9wcmVmaXhWYWx1ZTIuZGVmYXVsdCkocGx1Z2lucywgcHJvcGVydHksIHZhbHVlLCBzdHlsZSwgcHJlZml4TWFwKTtcblxuICAgICAgICAvLyBvbmx5IG1vZGlmeSB0aGUgdmFsdWUgaWYgaXQgd2FzIHRvdWNoZWRcbiAgICAgICAgLy8gYnkgYW55IHBsdWdpbiB0byBwcmV2ZW50IHVubmVjZXNzYXJ5IG11dGF0aW9uc1xuICAgICAgICBpZiAoX3Byb2Nlc3NlZFZhbHVlKSB7XG4gICAgICAgICAgc3R5bGVbcHJvcGVydHldID0gX3Byb2Nlc3NlZFZhbHVlO1xuICAgICAgICB9XG5cbiAgICAgICAgc3R5bGUgPSAoMCwgX3ByZWZpeFByb3BlcnR5Mi5kZWZhdWx0KShwcmVmaXhNYXAsIHByb3BlcnR5LCBzdHlsZSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHN0eWxlO1xuICB9O1xufVxufSk7XG5cbnZhciBjcmVhdGVQcmVmaXhlciA9IHVud3JhcEV4cG9ydHMoY3JlYXRlUHJlZml4ZXJfMSk7XG5cbnZhciBiYWNrZ3JvdW5kQ2xpcF8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gYmFja2dyb3VuZENsaXA7XG5cbi8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0NTUy9iYWNrZ3JvdW5kLWNsaXAjQnJvd3Nlcl9jb21wYXRpYmlsaXR5XG5mdW5jdGlvbiBiYWNrZ3JvdW5kQ2xpcChwcm9wZXJ0eSwgdmFsdWUpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgJiYgdmFsdWUgPT09ICd0ZXh0Jykge1xuICAgIHJldHVybiBbJy13ZWJraXQtdGV4dCcsICd0ZXh0J107XG4gIH1cbn1cbn0pO1xuXG52YXIgYmFja2dyb3VuZENsaXAgPSB1bndyYXBFeHBvcnRzKGJhY2tncm91bmRDbGlwXzEpO1xuXG52YXIgaXNQcmVmaXhlZFZhbHVlXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBpc1ByZWZpeGVkVmFsdWU7XG52YXIgcmVnZXggPSAvLXdlYmtpdC18LW1vei18LW1zLS87XG5cbmZ1bmN0aW9uIGlzUHJlZml4ZWRWYWx1ZSh2YWx1ZSkge1xuICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiByZWdleC50ZXN0KHZhbHVlKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xufSk7XG5cbnVud3JhcEV4cG9ydHMoaXNQcmVmaXhlZFZhbHVlXzEpO1xuXG52YXIgY2FsY18xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gY2FsYztcblxuXG5cbnZhciBfaXNQcmVmaXhlZFZhbHVlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoaXNQcmVmaXhlZFZhbHVlXzEpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG52YXIgcHJlZml4ZXMgPSBbJy13ZWJraXQtJywgJy1tb3otJywgJyddO1xuZnVuY3Rpb24gY2FsYyhwcm9wZXJ0eSwgdmFsdWUpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgJiYgISgwLCBfaXNQcmVmaXhlZFZhbHVlMi5kZWZhdWx0KSh2YWx1ZSkgJiYgdmFsdWUuaW5kZXhPZignY2FsYygnKSA+IC0xKSB7XG4gICAgcmV0dXJuIHByZWZpeGVzLm1hcChmdW5jdGlvbiAocHJlZml4KSB7XG4gICAgICByZXR1cm4gdmFsdWUucmVwbGFjZSgvY2FsY1xcKC9nLCBwcmVmaXggKyAnY2FsYygnKTtcbiAgICB9KTtcbiAgfVxufVxufSk7XG5cbnZhciBjYWxjID0gdW53cmFwRXhwb3J0cyhjYWxjXzEpO1xuXG52YXIgY3Jvc3NGYWRlXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBjcm9zc0ZhZGU7XG5cblxuXG52YXIgX2lzUHJlZml4ZWRWYWx1ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KGlzUHJlZml4ZWRWYWx1ZV8xKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLy8gaHR0cDovL2Nhbml1c2UuY29tLyNzZWFyY2g9Y3Jvc3MtZmFkZVxudmFyIHByZWZpeGVzID0gWyctd2Via2l0LScsICcnXTtcbmZ1bmN0aW9uIGNyb3NzRmFkZShwcm9wZXJ0eSwgdmFsdWUpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgJiYgISgwLCBfaXNQcmVmaXhlZFZhbHVlMi5kZWZhdWx0KSh2YWx1ZSkgJiYgdmFsdWUuaW5kZXhPZignY3Jvc3MtZmFkZSgnKSA+IC0xKSB7XG4gICAgcmV0dXJuIHByZWZpeGVzLm1hcChmdW5jdGlvbiAocHJlZml4KSB7XG4gICAgICByZXR1cm4gdmFsdWUucmVwbGFjZSgvY3Jvc3MtZmFkZVxcKC9nLCBwcmVmaXggKyAnY3Jvc3MtZmFkZSgnKTtcbiAgICB9KTtcbiAgfVxufVxufSk7XG5cbnZhciBjcm9zc0ZhZGUgPSB1bndyYXBFeHBvcnRzKGNyb3NzRmFkZV8xKTtcblxudmFyIGN1cnNvcl8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gY3Vyc29yO1xudmFyIHByZWZpeGVzID0gWyctd2Via2l0LScsICctbW96LScsICcnXTtcblxudmFyIHZhbHVlcyA9IHtcbiAgJ3pvb20taW4nOiB0cnVlLFxuICAnem9vbS1vdXQnOiB0cnVlLFxuICBncmFiOiB0cnVlLFxuICBncmFiYmluZzogdHJ1ZVxufTtcblxuZnVuY3Rpb24gY3Vyc29yKHByb3BlcnR5LCB2YWx1ZSkge1xuICBpZiAocHJvcGVydHkgPT09ICdjdXJzb3InICYmIHZhbHVlcy5oYXNPd25Qcm9wZXJ0eSh2YWx1ZSkpIHtcbiAgICByZXR1cm4gcHJlZml4ZXMubWFwKGZ1bmN0aW9uIChwcmVmaXgpIHtcbiAgICAgIHJldHVybiBwcmVmaXggKyB2YWx1ZTtcbiAgICB9KTtcbiAgfVxufVxufSk7XG5cbnZhciBjdXJzb3IgPSB1bndyYXBFeHBvcnRzKGN1cnNvcl8xKTtcblxudmFyIGZpbHRlcl8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gZmlsdGVyO1xuXG5cblxudmFyIF9pc1ByZWZpeGVkVmFsdWUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChpc1ByZWZpeGVkVmFsdWVfMSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIGh0dHA6Ly9jYW5pdXNlLmNvbS8jZmVhdD1jc3MtZmlsdGVyLWZ1bmN0aW9uXG52YXIgcHJlZml4ZXMgPSBbJy13ZWJraXQtJywgJyddO1xuZnVuY3Rpb24gZmlsdGVyKHByb3BlcnR5LCB2YWx1ZSkge1xuICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiAhKDAsIF9pc1ByZWZpeGVkVmFsdWUyLmRlZmF1bHQpKHZhbHVlKSAmJiB2YWx1ZS5pbmRleE9mKCdmaWx0ZXIoJykgPiAtMSkge1xuICAgIHJldHVybiBwcmVmaXhlcy5tYXAoZnVuY3Rpb24gKHByZWZpeCkge1xuICAgICAgcmV0dXJuIHZhbHVlLnJlcGxhY2UoL2ZpbHRlclxcKC9nLCBwcmVmaXggKyAnZmlsdGVyKCcpO1xuICAgIH0pO1xuICB9XG59XG59KTtcblxudmFyIGZpbHRlciA9IHVud3JhcEV4cG9ydHMoZmlsdGVyXzEpO1xuXG52YXIgZmxleF8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gZmxleDtcbnZhciB2YWx1ZXMgPSB7XG4gIGZsZXg6IFsnLXdlYmtpdC1ib3gnLCAnLW1vei1ib3gnLCAnLW1zLWZsZXhib3gnLCAnLXdlYmtpdC1mbGV4JywgJ2ZsZXgnXSxcbiAgJ2lubGluZS1mbGV4JzogWyctd2Via2l0LWlubGluZS1ib3gnLCAnLW1vei1pbmxpbmUtYm94JywgJy1tcy1pbmxpbmUtZmxleGJveCcsICctd2Via2l0LWlubGluZS1mbGV4JywgJ2lubGluZS1mbGV4J11cbn07XG5cbmZ1bmN0aW9uIGZsZXgocHJvcGVydHksIHZhbHVlKSB7XG4gIGlmIChwcm9wZXJ0eSA9PT0gJ2Rpc3BsYXknICYmIHZhbHVlcy5oYXNPd25Qcm9wZXJ0eSh2YWx1ZSkpIHtcbiAgICByZXR1cm4gdmFsdWVzW3ZhbHVlXTtcbiAgfVxufVxufSk7XG5cbnZhciBmbGV4ID0gdW53cmFwRXhwb3J0cyhmbGV4XzEpO1xuXG52YXIgZmxleGJveElFXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBmbGV4Ym94SUU7XG52YXIgYWx0ZXJuYXRpdmVWYWx1ZXMgPSB7XG4gICdzcGFjZS1hcm91bmQnOiAnZGlzdHJpYnV0ZScsXG4gICdzcGFjZS1iZXR3ZWVuJzogJ2p1c3RpZnknLFxuICAnZmxleC1zdGFydCc6ICdzdGFydCcsXG4gICdmbGV4LWVuZCc6ICdlbmQnXG59O1xudmFyIGFsdGVybmF0aXZlUHJvcHMgPSB7XG4gIGFsaWduQ29udGVudDogJ21zRmxleExpbmVQYWNrJyxcbiAgYWxpZ25TZWxmOiAnbXNGbGV4SXRlbUFsaWduJyxcbiAgYWxpZ25JdGVtczogJ21zRmxleEFsaWduJyxcbiAganVzdGlmeUNvbnRlbnQ6ICdtc0ZsZXhQYWNrJyxcbiAgb3JkZXI6ICdtc0ZsZXhPcmRlcicsXG4gIGZsZXhHcm93OiAnbXNGbGV4UG9zaXRpdmUnLFxuICBmbGV4U2hyaW5rOiAnbXNGbGV4TmVnYXRpdmUnLFxuICBmbGV4QmFzaXM6ICdtc0ZsZXhQcmVmZXJyZWRTaXplJ1xuICAvLyBGdWxsIGV4cGFuZGVkIHN5bnRheCBpcyBmbGV4LWdyb3cgfCBmbGV4LXNocmluayB8IGZsZXgtYmFzaXMuXG59O3ZhciBmbGV4U2hvcnRoYW5kTWFwcGluZ3MgPSB7XG4gIGF1dG86ICcxIDEgYXV0bycsXG4gIGluaGVyaXQ6ICdpbmhlcml0JyxcbiAgaW5pdGlhbDogJzAgMSBhdXRvJyxcbiAgbm9uZTogJzAgMCBhdXRvJyxcbiAgdW5zZXQ6ICd1bnNldCdcbn07XG52YXIgaXNVbml0bGVzc051bWJlciA9IC9eXFxkKyhcXC5cXGQrKT8kLztcblxuZnVuY3Rpb24gZmxleGJveElFKHByb3BlcnR5LCB2YWx1ZSwgc3R5bGUpIHtcbiAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChhbHRlcm5hdGl2ZVByb3BzLCBwcm9wZXJ0eSkpIHtcbiAgICBzdHlsZVthbHRlcm5hdGl2ZVByb3BzW3Byb3BlcnR5XV0gPSBhbHRlcm5hdGl2ZVZhbHVlc1t2YWx1ZV0gfHwgdmFsdWU7XG4gIH1cbiAgaWYgKHByb3BlcnR5ID09PSAnZmxleCcpIHtcbiAgICAvLyBGb3IgY2VydGFpbiB2YWx1ZXMgd2UgY2FuIGRvIHN0cmFpZ2h0IG1hcHBpbmdzIGJhc2VkIG9uIHRoZSBzcGVjXG4gICAgLy8gZm9yIHRoZSBleHBhbnNpb25zLlxuICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZmxleFNob3J0aGFuZE1hcHBpbmdzLCB2YWx1ZSkpIHtcbiAgICAgIHN0eWxlLm1zRmxleCA9IGZsZXhTaG9ydGhhbmRNYXBwaW5nc1t2YWx1ZV07XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIC8vIEhlcmUgd2UgaGF2ZSBubyBkaXJlY3QgbWFwcGluZywgc28gd2UgZmF2b3IgbG9va2luZyBmb3IgYVxuICAgIC8vIHVuaXRsZXNzIHBvc2l0aXZlIG51bWJlciBhcyB0aGF0IHdpbGwgYmUgdGhlIG1vc3QgY29tbW9uIHVzZS1jYXNlLlxuICAgIGlmIChpc1VuaXRsZXNzTnVtYmVyLnRlc3QodmFsdWUpKSB7XG4gICAgICBzdHlsZS5tc0ZsZXggPSB2YWx1ZSArICcgMSAwJSc7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gVGhlIG5leHQgdGhpbmcgd2UgY2FuIGxvb2sgZm9yIGlzIGlmIHRoZXJlIGFyZSBtdWx0aXBsZSB2YWx1ZXMuXG4gICAgdmFyIGZsZXhWYWx1ZXMgPSB2YWx1ZS5zcGxpdCgvXFxzLyk7XG4gICAgLy8gSWYgd2Ugb25seSBoYXZlIGEgc2luZ2xlIHZhbHVlIHRoYXQgd2Fzbid0IGEgcG9zaXRpdmUgdW5pdGxlc3NcbiAgICAvLyBvciBhIHByZS1tYXBwZWQgdmFsdWUsIHRoZW4gd2UgY2FuIGFzc3VtZSBpdCBpcyBhIHVuaXQgdmFsdWUuXG4gICAgc3dpdGNoIChmbGV4VmFsdWVzLmxlbmd0aCkge1xuICAgICAgY2FzZSAxOlxuICAgICAgICBzdHlsZS5tc0ZsZXggPSAnMSAxICcgKyB2YWx1ZTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgY2FzZSAyOlxuICAgICAgICAvLyBJZiB3ZSBoYXZlIDIgdW5pdHMsIHRoZW4gd2UgZXhwZWN0IHRoYXQgdGhlIGZpcnN0IHdpbGxcbiAgICAgICAgLy8gYWx3YXlzIGJlIGEgdW5pdGxlc3MgbnVtYmVyIGFuZCByZXByZXNlbnRzIGZsZXgtZ3Jvdy5cbiAgICAgICAgLy8gVGhlIHNlY29uZCB1bml0IHdpbGwgcmVwcmVzZW50IGZsZXgtc2hyaW5rIGZvciBhIHVuaXRsZXNzXG4gICAgICAgIC8vIHZhbHVlLCBvciBmbGV4LWJhc2lzIG90aGVyd2lzZS5cbiAgICAgICAgaWYgKGlzVW5pdGxlc3NOdW1iZXIudGVzdChmbGV4VmFsdWVzWzFdKSkge1xuICAgICAgICAgIHN0eWxlLm1zRmxleCA9IGZsZXhWYWx1ZXNbMF0gKyAnICcgKyBmbGV4VmFsdWVzWzFdICsgJyAwJSc7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc3R5bGUubXNGbGV4ID0gZmxleFZhbHVlc1swXSArICcgMSAnICsgZmxleFZhbHVlc1sxXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm47XG4gICAgICBkZWZhdWx0OlxuICAgICAgICBzdHlsZS5tc0ZsZXggPSB2YWx1ZTtcbiAgICB9XG4gIH1cbn1cbn0pO1xuXG52YXIgZmxleGJveElFID0gdW53cmFwRXhwb3J0cyhmbGV4Ym94SUVfMSk7XG5cbnZhciBmbGV4Ym94T2xkXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBmbGV4Ym94T2xkO1xudmFyIGFsdGVybmF0aXZlVmFsdWVzID0ge1xuICAnc3BhY2UtYXJvdW5kJzogJ2p1c3RpZnknLFxuICAnc3BhY2UtYmV0d2Vlbic6ICdqdXN0aWZ5JyxcbiAgJ2ZsZXgtc3RhcnQnOiAnc3RhcnQnLFxuICAnZmxleC1lbmQnOiAnZW5kJyxcbiAgJ3dyYXAtcmV2ZXJzZSc6ICdtdWx0aXBsZScsXG4gIHdyYXA6ICdtdWx0aXBsZSdcbn07XG5cbnZhciBhbHRlcm5hdGl2ZVByb3BzID0ge1xuICBhbGlnbkl0ZW1zOiAnV2Via2l0Qm94QWxpZ24nLFxuICBqdXN0aWZ5Q29udGVudDogJ1dlYmtpdEJveFBhY2snLFxuICBmbGV4V3JhcDogJ1dlYmtpdEJveExpbmVzJyxcbiAgZmxleEdyb3c6ICdXZWJraXRCb3hGbGV4J1xufTtcblxuZnVuY3Rpb24gZmxleGJveE9sZChwcm9wZXJ0eSwgdmFsdWUsIHN0eWxlKSB7XG4gIGlmIChwcm9wZXJ0eSA9PT0gJ2ZsZXhEaXJlY3Rpb24nICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycpIHtcbiAgICBpZiAodmFsdWUuaW5kZXhPZignY29sdW1uJykgPiAtMSkge1xuICAgICAgc3R5bGUuV2Via2l0Qm94T3JpZW50ID0gJ3ZlcnRpY2FsJztcbiAgICB9IGVsc2Uge1xuICAgICAgc3R5bGUuV2Via2l0Qm94T3JpZW50ID0gJ2hvcml6b250YWwnO1xuICAgIH1cbiAgICBpZiAodmFsdWUuaW5kZXhPZigncmV2ZXJzZScpID4gLTEpIHtcbiAgICAgIHN0eWxlLldlYmtpdEJveERpcmVjdGlvbiA9ICdyZXZlcnNlJztcbiAgICB9IGVsc2Uge1xuICAgICAgc3R5bGUuV2Via2l0Qm94RGlyZWN0aW9uID0gJ25vcm1hbCc7XG4gICAgfVxuICB9XG4gIGlmIChhbHRlcm5hdGl2ZVByb3BzLmhhc093blByb3BlcnR5KHByb3BlcnR5KSkge1xuICAgIHN0eWxlW2FsdGVybmF0aXZlUHJvcHNbcHJvcGVydHldXSA9IGFsdGVybmF0aXZlVmFsdWVzW3ZhbHVlXSB8fCB2YWx1ZTtcbiAgfVxufVxufSk7XG5cbnZhciBmbGV4Ym94T2xkID0gdW53cmFwRXhwb3J0cyhmbGV4Ym94T2xkXzEpO1xuXG52YXIgZ3JhZGllbnRfMSA9IGNyZWF0ZUNvbW1vbmpzTW9kdWxlKGZ1bmN0aW9uIChtb2R1bGUsIGV4cG9ydHMpIHtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGdyYWRpZW50O1xuXG5cblxudmFyIF9pc1ByZWZpeGVkVmFsdWUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChpc1ByZWZpeGVkVmFsdWVfMSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbnZhciBwcmVmaXhlcyA9IFsnLXdlYmtpdC0nLCAnLW1vei0nLCAnJ107XG5cbnZhciB2YWx1ZXMgPSAvbGluZWFyLWdyYWRpZW50fHJhZGlhbC1ncmFkaWVudHxyZXBlYXRpbmctbGluZWFyLWdyYWRpZW50fHJlcGVhdGluZy1yYWRpYWwtZ3JhZGllbnQvZ2k7XG5cbmZ1bmN0aW9uIGdyYWRpZW50KHByb3BlcnR5LCB2YWx1ZSkge1xuICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiAhKDAsIF9pc1ByZWZpeGVkVmFsdWUyLmRlZmF1bHQpKHZhbHVlKSAmJiB2YWx1ZXMudGVzdCh2YWx1ZSkpIHtcbiAgICByZXR1cm4gcHJlZml4ZXMubWFwKGZ1bmN0aW9uIChwcmVmaXgpIHtcbiAgICAgIHJldHVybiB2YWx1ZS5yZXBsYWNlKHZhbHVlcywgZnVuY3Rpb24gKGdyYWQpIHtcbiAgICAgICAgcmV0dXJuIHByZWZpeCArIGdyYWQ7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxufVxufSk7XG5cbnZhciBncmFkaWVudCA9IHVud3JhcEV4cG9ydHMoZ3JhZGllbnRfMSk7XG5cbnZhciBncmlkXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfc2xpY2VkVG9BcnJheSA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gc2xpY2VJdGVyYXRvcihhcnIsIGkpIHsgdmFyIF9hcnIgPSBbXTsgdmFyIF9uID0gdHJ1ZTsgdmFyIF9kID0gZmFsc2U7IHZhciBfZSA9IHVuZGVmaW5lZDsgdHJ5IHsgZm9yICh2YXIgX2kgPSBhcnJbU3ltYm9sLml0ZXJhdG9yXSgpLCBfczsgIShfbiA9IChfcyA9IF9pLm5leHQoKSkuZG9uZSk7IF9uID0gdHJ1ZSkgeyBfYXJyLnB1c2goX3MudmFsdWUpOyBpZiAoaSAmJiBfYXJyLmxlbmd0aCA9PT0gaSkgYnJlYWs7IH0gfSBjYXRjaCAoZXJyKSB7IF9kID0gdHJ1ZTsgX2UgPSBlcnI7IH0gZmluYWxseSB7IHRyeSB7IGlmICghX24gJiYgX2lbXCJyZXR1cm5cIl0pIF9pW1wicmV0dXJuXCJdKCk7IH0gZmluYWxseSB7IGlmIChfZCkgdGhyb3cgX2U7IH0gfSByZXR1cm4gX2FycjsgfSByZXR1cm4gZnVuY3Rpb24gKGFyciwgaSkgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSB7IHJldHVybiBhcnI7IH0gZWxzZSBpZiAoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChhcnIpKSB7IHJldHVybiBzbGljZUl0ZXJhdG9yKGFyciwgaSk7IH0gZWxzZSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlXCIpOyB9IH07IH0oKTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gZ3JpZDtcbmZ1bmN0aW9uIGlzU2ltcGxlUG9zaXRpb25WYWx1ZSh2YWx1ZSkge1xuICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSAnbnVtYmVyJyAmJiAhaXNOYU4odmFsdWUpO1xufVxuXG52YXIgYWxpZ25tZW50VmFsdWVzID0gWydjZW50ZXInLCAnZW5kJywgJ3N0YXJ0JywgJ3N0cmV0Y2gnXTtcblxudmFyIGRpc3BsYXlWYWx1ZXMgPSB7XG4gICdpbmxpbmUtZ3JpZCc6IFsnLW1zLWlubGluZS1ncmlkJywgJ2lubGluZS1ncmlkJ10sXG4gIGdyaWQ6IFsnLW1zLWdyaWQnLCAnZ3JpZCddXG59O1xuXG52YXIgcHJvcGVydHlDb252ZXJ0ZXJzID0ge1xuICBhbGlnblNlbGY6IGZ1bmN0aW9uIGFsaWduU2VsZih2YWx1ZSwgc3R5bGUpIHtcbiAgICBpZiAoYWxpZ25tZW50VmFsdWVzLmluZGV4T2YodmFsdWUpID4gLTEpIHtcbiAgICAgIHN0eWxlLm1zR3JpZFJvd0FsaWduID0gdmFsdWU7XG4gICAgfVxuICB9LFxuXG4gIGdyaWRDb2x1bW46IGZ1bmN0aW9uIGdyaWRDb2x1bW4odmFsdWUsIHN0eWxlKSB7XG4gICAgaWYgKGlzU2ltcGxlUG9zaXRpb25WYWx1ZSh2YWx1ZSkpIHtcbiAgICAgIHN0eWxlLm1zR3JpZENvbHVtbiA9IHZhbHVlO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgX3ZhbHVlJHNwbGl0JG1hcCA9IHZhbHVlLnNwbGl0KCcvJykubWFwKGZ1bmN0aW9uIChwb3NpdGlvbikge1xuICAgICAgICByZXR1cm4gK3Bvc2l0aW9uO1xuICAgICAgfSksXG4gICAgICAgICAgX3ZhbHVlJHNwbGl0JG1hcDIgPSBfc2xpY2VkVG9BcnJheShfdmFsdWUkc3BsaXQkbWFwLCAyKSxcbiAgICAgICAgICBzdGFydCA9IF92YWx1ZSRzcGxpdCRtYXAyWzBdLFxuICAgICAgICAgIGVuZCA9IF92YWx1ZSRzcGxpdCRtYXAyWzFdO1xuXG4gICAgICBwcm9wZXJ0eUNvbnZlcnRlcnMuZ3JpZENvbHVtblN0YXJ0KHN0YXJ0LCBzdHlsZSk7XG4gICAgICBwcm9wZXJ0eUNvbnZlcnRlcnMuZ3JpZENvbHVtbkVuZChlbmQsIHN0eWxlKTtcbiAgICB9XG4gIH0sXG5cbiAgZ3JpZENvbHVtbkVuZDogZnVuY3Rpb24gZ3JpZENvbHVtbkVuZCh2YWx1ZSwgc3R5bGUpIHtcbiAgICB2YXIgbXNHcmlkQ29sdW1uID0gc3R5bGUubXNHcmlkQ29sdW1uO1xuXG4gICAgaWYgKGlzU2ltcGxlUG9zaXRpb25WYWx1ZSh2YWx1ZSkgJiYgaXNTaW1wbGVQb3NpdGlvblZhbHVlKG1zR3JpZENvbHVtbikpIHtcbiAgICAgIHN0eWxlLm1zR3JpZENvbHVtblNwYW4gPSB2YWx1ZSAtIG1zR3JpZENvbHVtbjtcbiAgICB9XG4gIH0sXG5cbiAgZ3JpZENvbHVtblN0YXJ0OiBmdW5jdGlvbiBncmlkQ29sdW1uU3RhcnQodmFsdWUsIHN0eWxlKSB7XG4gICAgaWYgKGlzU2ltcGxlUG9zaXRpb25WYWx1ZSh2YWx1ZSkpIHtcbiAgICAgIHN0eWxlLm1zR3JpZENvbHVtbiA9IHZhbHVlO1xuICAgIH1cbiAgfSxcblxuICBncmlkUm93OiBmdW5jdGlvbiBncmlkUm93KHZhbHVlLCBzdHlsZSkge1xuICAgIGlmIChpc1NpbXBsZVBvc2l0aW9uVmFsdWUodmFsdWUpKSB7XG4gICAgICBzdHlsZS5tc0dyaWRSb3cgPSB2YWx1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIF92YWx1ZSRzcGxpdCRtYXAzID0gdmFsdWUuc3BsaXQoJy8nKS5tYXAoZnVuY3Rpb24gKHBvc2l0aW9uKSB7XG4gICAgICAgIHJldHVybiArcG9zaXRpb247XG4gICAgICB9KSxcbiAgICAgICAgICBfdmFsdWUkc3BsaXQkbWFwNCA9IF9zbGljZWRUb0FycmF5KF92YWx1ZSRzcGxpdCRtYXAzLCAyKSxcbiAgICAgICAgICBzdGFydCA9IF92YWx1ZSRzcGxpdCRtYXA0WzBdLFxuICAgICAgICAgIGVuZCA9IF92YWx1ZSRzcGxpdCRtYXA0WzFdO1xuXG4gICAgICBwcm9wZXJ0eUNvbnZlcnRlcnMuZ3JpZFJvd1N0YXJ0KHN0YXJ0LCBzdHlsZSk7XG4gICAgICBwcm9wZXJ0eUNvbnZlcnRlcnMuZ3JpZFJvd0VuZChlbmQsIHN0eWxlKTtcbiAgICB9XG4gIH0sXG5cbiAgZ3JpZFJvd0VuZDogZnVuY3Rpb24gZ3JpZFJvd0VuZCh2YWx1ZSwgc3R5bGUpIHtcbiAgICB2YXIgbXNHcmlkUm93ID0gc3R5bGUubXNHcmlkUm93O1xuXG4gICAgaWYgKGlzU2ltcGxlUG9zaXRpb25WYWx1ZSh2YWx1ZSkgJiYgaXNTaW1wbGVQb3NpdGlvblZhbHVlKG1zR3JpZFJvdykpIHtcbiAgICAgIHN0eWxlLm1zR3JpZFJvd1NwYW4gPSB2YWx1ZSAtIG1zR3JpZFJvdztcbiAgICB9XG4gIH0sXG5cbiAgZ3JpZFJvd1N0YXJ0OiBmdW5jdGlvbiBncmlkUm93U3RhcnQodmFsdWUsIHN0eWxlKSB7XG4gICAgaWYgKGlzU2ltcGxlUG9zaXRpb25WYWx1ZSh2YWx1ZSkpIHtcbiAgICAgIHN0eWxlLm1zR3JpZFJvdyA9IHZhbHVlO1xuICAgIH1cbiAgfSxcblxuICBncmlkVGVtcGxhdGVDb2x1bW5zOiBmdW5jdGlvbiBncmlkVGVtcGxhdGVDb2x1bW5zKHZhbHVlLCBzdHlsZSkge1xuICAgIHN0eWxlLm1zR3JpZENvbHVtbnMgPSB2YWx1ZTtcbiAgfSxcblxuICBncmlkVGVtcGxhdGVSb3dzOiBmdW5jdGlvbiBncmlkVGVtcGxhdGVSb3dzKHZhbHVlLCBzdHlsZSkge1xuICAgIHN0eWxlLm1zR3JpZFJvd3MgPSB2YWx1ZTtcbiAgfSxcblxuICBqdXN0aWZ5U2VsZjogZnVuY3Rpb24ganVzdGlmeVNlbGYodmFsdWUsIHN0eWxlKSB7XG4gICAgaWYgKGFsaWdubWVudFZhbHVlcy5pbmRleE9mKHZhbHVlKSA+IC0xKSB7XG4gICAgICBzdHlsZS5tc0dyaWRDb2x1bW5BbGlnbiA9IHZhbHVlO1xuICAgIH1cbiAgfVxufTtcblxuZnVuY3Rpb24gZ3JpZChwcm9wZXJ0eSwgdmFsdWUsIHN0eWxlKSB7XG4gIGlmIChwcm9wZXJ0eSA9PT0gJ2Rpc3BsYXknICYmIHZhbHVlIGluIGRpc3BsYXlWYWx1ZXMpIHtcbiAgICByZXR1cm4gZGlzcGxheVZhbHVlc1t2YWx1ZV07XG4gIH1cblxuICBpZiAocHJvcGVydHkgaW4gcHJvcGVydHlDb252ZXJ0ZXJzKSB7XG4gICAgdmFyIHByb3BlcnR5Q29udmVydGVyID0gcHJvcGVydHlDb252ZXJ0ZXJzW3Byb3BlcnR5XTtcbiAgICBwcm9wZXJ0eUNvbnZlcnRlcih2YWx1ZSwgc3R5bGUpO1xuICB9XG59XG59KTtcblxudmFyIGdyaWQgPSB1bndyYXBFeHBvcnRzKGdyaWRfMSk7XG5cbnZhciBpbWFnZVNldF8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gaW1hZ2VTZXQ7XG5cblxuXG52YXIgX2lzUHJlZml4ZWRWYWx1ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KGlzUHJlZml4ZWRWYWx1ZV8xKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLy8gaHR0cDovL2Nhbml1c2UuY29tLyNmZWF0PWNzcy1pbWFnZS1zZXRcbnZhciBwcmVmaXhlcyA9IFsnLXdlYmtpdC0nLCAnJ107XG5mdW5jdGlvbiBpbWFnZVNldChwcm9wZXJ0eSwgdmFsdWUpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgJiYgISgwLCBfaXNQcmVmaXhlZFZhbHVlMi5kZWZhdWx0KSh2YWx1ZSkgJiYgdmFsdWUuaW5kZXhPZignaW1hZ2Utc2V0KCcpID4gLTEpIHtcbiAgICByZXR1cm4gcHJlZml4ZXMubWFwKGZ1bmN0aW9uIChwcmVmaXgpIHtcbiAgICAgIHJldHVybiB2YWx1ZS5yZXBsYWNlKC9pbWFnZS1zZXRcXCgvZywgcHJlZml4ICsgJ2ltYWdlLXNldCgnKTtcbiAgICB9KTtcbiAgfVxufVxufSk7XG5cbnZhciBpbWFnZVNldCA9IHVud3JhcEV4cG9ydHMoaW1hZ2VTZXRfMSk7XG5cbnZhciBsb2dpY2FsXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBsb2dpY2FsO1xudmFyIGFsdGVybmF0aXZlUHJvcHMgPSB7XG4gIG1hcmdpbkJsb2NrU3RhcnQ6IFsnV2Via2l0TWFyZ2luQmVmb3JlJ10sXG4gIG1hcmdpbkJsb2NrRW5kOiBbJ1dlYmtpdE1hcmdpbkFmdGVyJ10sXG4gIG1hcmdpbklubGluZVN0YXJ0OiBbJ1dlYmtpdE1hcmdpblN0YXJ0JywgJ01vek1hcmdpblN0YXJ0J10sXG4gIG1hcmdpbklubGluZUVuZDogWydXZWJraXRNYXJnaW5FbmQnLCAnTW96TWFyZ2luRW5kJ10sXG4gIHBhZGRpbmdCbG9ja1N0YXJ0OiBbJ1dlYmtpdFBhZGRpbmdCZWZvcmUnXSxcbiAgcGFkZGluZ0Jsb2NrRW5kOiBbJ1dlYmtpdFBhZGRpbmdBZnRlciddLFxuICBwYWRkaW5nSW5saW5lU3RhcnQ6IFsnV2Via2l0UGFkZGluZ1N0YXJ0JywgJ01velBhZGRpbmdTdGFydCddLFxuICBwYWRkaW5nSW5saW5lRW5kOiBbJ1dlYmtpdFBhZGRpbmdFbmQnLCAnTW96UGFkZGluZ0VuZCddLFxuICBib3JkZXJCbG9ja1N0YXJ0OiBbJ1dlYmtpdEJvcmRlckJlZm9yZSddLFxuICBib3JkZXJCbG9ja1N0YXJ0Q29sb3I6IFsnV2Via2l0Qm9yZGVyQmVmb3JlQ29sb3InXSxcbiAgYm9yZGVyQmxvY2tTdGFydFN0eWxlOiBbJ1dlYmtpdEJvcmRlckJlZm9yZVN0eWxlJ10sXG4gIGJvcmRlckJsb2NrU3RhcnRXaWR0aDogWydXZWJraXRCb3JkZXJCZWZvcmVXaWR0aCddLFxuICBib3JkZXJCbG9ja0VuZDogWydXZWJraXRCb3JkZXJBZnRlciddLFxuICBib3JkZXJCbG9ja0VuZENvbG9yOiBbJ1dlYmtpdEJvcmRlckFmdGVyQ29sb3InXSxcbiAgYm9yZGVyQmxvY2tFbmRTdHlsZTogWydXZWJraXRCb3JkZXJBZnRlclN0eWxlJ10sXG4gIGJvcmRlckJsb2NrRW5kV2lkdGg6IFsnV2Via2l0Qm9yZGVyQWZ0ZXJXaWR0aCddLFxuICBib3JkZXJJbmxpbmVTdGFydDogWydXZWJraXRCb3JkZXJTdGFydCcsICdNb3pCb3JkZXJTdGFydCddLFxuICBib3JkZXJJbmxpbmVTdGFydENvbG9yOiBbJ1dlYmtpdEJvcmRlclN0YXJ0Q29sb3InLCAnTW96Qm9yZGVyU3RhcnRDb2xvciddLFxuICBib3JkZXJJbmxpbmVTdGFydFN0eWxlOiBbJ1dlYmtpdEJvcmRlclN0YXJ0U3R5bGUnLCAnTW96Qm9yZGVyU3RhcnRTdHlsZSddLFxuICBib3JkZXJJbmxpbmVTdGFydFdpZHRoOiBbJ1dlYmtpdEJvcmRlclN0YXJ0V2lkdGgnLCAnTW96Qm9yZGVyU3RhcnRXaWR0aCddLFxuICBib3JkZXJJbmxpbmVFbmQ6IFsnV2Via2l0Qm9yZGVyRW5kJywgJ01vekJvcmRlckVuZCddLFxuICBib3JkZXJJbmxpbmVFbmRDb2xvcjogWydXZWJraXRCb3JkZXJFbmRDb2xvcicsICdNb3pCb3JkZXJFbmRDb2xvciddLFxuICBib3JkZXJJbmxpbmVFbmRTdHlsZTogWydXZWJraXRCb3JkZXJFbmRTdHlsZScsICdNb3pCb3JkZXJFbmRTdHlsZSddLFxuICBib3JkZXJJbmxpbmVFbmRXaWR0aDogWydXZWJraXRCb3JkZXJFbmRXaWR0aCcsICdNb3pCb3JkZXJFbmRXaWR0aCddXG59O1xuXG5mdW5jdGlvbiBsb2dpY2FsKHByb3BlcnR5LCB2YWx1ZSwgc3R5bGUpIHtcbiAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChhbHRlcm5hdGl2ZVByb3BzLCBwcm9wZXJ0eSkpIHtcbiAgICB2YXIgYWx0ZXJuYXRpdmVQcm9wTGlzdCA9IGFsdGVybmF0aXZlUHJvcHNbcHJvcGVydHldO1xuICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSBhbHRlcm5hdGl2ZVByb3BMaXN0Lmxlbmd0aDsgaSA8IGxlbjsgKytpKSB7XG4gICAgICBzdHlsZVthbHRlcm5hdGl2ZVByb3BMaXN0W2ldXSA9IHZhbHVlO1xuICAgIH1cbiAgfVxufVxufSk7XG5cbnZhciBsb2dpY2FsID0gdW53cmFwRXhwb3J0cyhsb2dpY2FsXzEpO1xuXG52YXIgcG9zaXRpb25fMSA9IGNyZWF0ZUNvbW1vbmpzTW9kdWxlKGZ1bmN0aW9uIChtb2R1bGUsIGV4cG9ydHMpIHtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHBvc2l0aW9uO1xuZnVuY3Rpb24gcG9zaXRpb24ocHJvcGVydHksIHZhbHVlKSB7XG4gIGlmIChwcm9wZXJ0eSA9PT0gJ3Bvc2l0aW9uJyAmJiB2YWx1ZSA9PT0gJ3N0aWNreScpIHtcbiAgICByZXR1cm4gWyctd2Via2l0LXN0aWNreScsICdzdGlja3knXTtcbiAgfVxufVxufSk7XG5cbnZhciBwb3NpdGlvbiA9IHVud3JhcEV4cG9ydHMocG9zaXRpb25fMSk7XG5cbnZhciBzaXppbmdfMSA9IGNyZWF0ZUNvbW1vbmpzTW9kdWxlKGZ1bmN0aW9uIChtb2R1bGUsIGV4cG9ydHMpIHtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHNpemluZztcbnZhciBwcmVmaXhlcyA9IFsnLXdlYmtpdC0nLCAnLW1vei0nLCAnJ107XG5cbnZhciBwcm9wZXJ0aWVzID0ge1xuICBtYXhIZWlnaHQ6IHRydWUsXG4gIG1heFdpZHRoOiB0cnVlLFxuICB3aWR0aDogdHJ1ZSxcbiAgaGVpZ2h0OiB0cnVlLFxuICBjb2x1bW5XaWR0aDogdHJ1ZSxcbiAgbWluV2lkdGg6IHRydWUsXG4gIG1pbkhlaWdodDogdHJ1ZVxufTtcbnZhciB2YWx1ZXMgPSB7XG4gICdtaW4tY29udGVudCc6IHRydWUsXG4gICdtYXgtY29udGVudCc6IHRydWUsXG4gICdmaWxsLWF2YWlsYWJsZSc6IHRydWUsXG4gICdmaXQtY29udGVudCc6IHRydWUsXG4gICdjb250YWluLWZsb2F0cyc6IHRydWVcbn07XG5cbmZ1bmN0aW9uIHNpemluZyhwcm9wZXJ0eSwgdmFsdWUpIHtcbiAgaWYgKHByb3BlcnRpZXMuaGFzT3duUHJvcGVydHkocHJvcGVydHkpICYmIHZhbHVlcy5oYXNPd25Qcm9wZXJ0eSh2YWx1ZSkpIHtcbiAgICByZXR1cm4gcHJlZml4ZXMubWFwKGZ1bmN0aW9uIChwcmVmaXgpIHtcbiAgICAgIHJldHVybiBwcmVmaXggKyB2YWx1ZTtcbiAgICB9KTtcbiAgfVxufVxufSk7XG5cbnZhciBzaXppbmcgPSB1bndyYXBFeHBvcnRzKHNpemluZ18xKTtcblxuLyogZXNsaW50LWRpc2FibGUgbm8tdmFyLCBwcmVmZXItdGVtcGxhdGUgKi9cbnZhciB1cHBlcmNhc2VQYXR0ZXJuID0gL1tBLVpdL2c7XG52YXIgbXNQYXR0ZXJuID0gL15tcy0vO1xudmFyIGNhY2hlID0ge307XG5cbmZ1bmN0aW9uIHRvSHlwaGVuTG93ZXIobWF0Y2gpIHtcbiAgcmV0dXJuICctJyArIG1hdGNoLnRvTG93ZXJDYXNlKClcbn1cblxuZnVuY3Rpb24gaHlwaGVuYXRlU3R5bGVOYW1lKG5hbWUpIHtcbiAgaWYgKGNhY2hlLmhhc093blByb3BlcnR5KG5hbWUpKSB7XG4gICAgcmV0dXJuIGNhY2hlW25hbWVdXG4gIH1cblxuICB2YXIgaE5hbWUgPSBuYW1lLnJlcGxhY2UodXBwZXJjYXNlUGF0dGVybiwgdG9IeXBoZW5Mb3dlcik7XG4gIHJldHVybiAoY2FjaGVbbmFtZV0gPSBtc1BhdHRlcm4udGVzdChoTmFtZSkgPyAnLScgKyBoTmFtZSA6IGhOYW1lKVxufVxuXG52YXIgaHlwaGVuYXRlU3R5bGVOYW1lJDEgPSAvKiNfX1BVUkVfXyovT2JqZWN0LmZyZWV6ZSh7XG4gIGRlZmF1bHQ6IGh5cGhlbmF0ZVN0eWxlTmFtZVxufSk7XG5cbnZhciBfaHlwaGVuYXRlU3R5bGVOYW1lID0gZ2V0Q2pzRXhwb3J0RnJvbU5hbWVzcGFjZShoeXBoZW5hdGVTdHlsZU5hbWUkMSk7XG5cbnZhciBoeXBoZW5hdGVQcm9wZXJ0eV8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gaHlwaGVuYXRlUHJvcGVydHk7XG5cblxuXG52YXIgX2h5cGhlbmF0ZVN0eWxlTmFtZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9oeXBoZW5hdGVTdHlsZU5hbWUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBoeXBoZW5hdGVQcm9wZXJ0eShwcm9wZXJ0eSkge1xuICByZXR1cm4gKDAsIF9oeXBoZW5hdGVTdHlsZU5hbWUyLmRlZmF1bHQpKHByb3BlcnR5KTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xufSk7XG5cbnVud3JhcEV4cG9ydHMoaHlwaGVuYXRlUHJvcGVydHlfMSk7XG5cbnZhciB0cmFuc2l0aW9uXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB0cmFuc2l0aW9uO1xuXG5cblxudmFyIF9oeXBoZW5hdGVQcm9wZXJ0eTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KGh5cGhlbmF0ZVByb3BlcnR5XzEpO1xuXG5cblxudmFyIF9pc1ByZWZpeGVkVmFsdWUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChpc1ByZWZpeGVkVmFsdWVfMSk7XG5cblxuXG52YXIgX2NhcGl0YWxpemVTdHJpbmcyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChjYXBpdGFsaXplU3RyaW5nXzEpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG52YXIgcHJvcGVydGllcyA9IHtcbiAgdHJhbnNpdGlvbjogdHJ1ZSxcbiAgdHJhbnNpdGlvblByb3BlcnR5OiB0cnVlLFxuICBXZWJraXRUcmFuc2l0aW9uOiB0cnVlLFxuICBXZWJraXRUcmFuc2l0aW9uUHJvcGVydHk6IHRydWUsXG4gIE1velRyYW5zaXRpb246IHRydWUsXG4gIE1velRyYW5zaXRpb25Qcm9wZXJ0eTogdHJ1ZVxufTtcblxuXG52YXIgcHJlZml4TWFwcGluZyA9IHtcbiAgV2Via2l0OiAnLXdlYmtpdC0nLFxuICBNb3o6ICctbW96LScsXG4gIG1zOiAnLW1zLSdcbn07XG5cbmZ1bmN0aW9uIHByZWZpeFZhbHVlKHZhbHVlLCBwcm9wZXJ0eVByZWZpeE1hcCkge1xuICBpZiAoKDAsIF9pc1ByZWZpeGVkVmFsdWUyLmRlZmF1bHQpKHZhbHVlKSkge1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxuXG4gIC8vIG9ubHkgc3BsaXQgbXVsdGkgdmFsdWVzLCBub3QgY3ViaWMgYmV6aWVyc1xuICB2YXIgbXVsdGlwbGVWYWx1ZXMgPSB2YWx1ZS5zcGxpdCgvLCg/IVteKCldKig/OlxcKFteKCldKlxcKSk/XFwpKS9nKTtcblxuICBmb3IgKHZhciBpID0gMCwgbGVuID0gbXVsdGlwbGVWYWx1ZXMubGVuZ3RoOyBpIDwgbGVuOyArK2kpIHtcbiAgICB2YXIgc2luZ2xlVmFsdWUgPSBtdWx0aXBsZVZhbHVlc1tpXTtcbiAgICB2YXIgdmFsdWVzID0gW3NpbmdsZVZhbHVlXTtcbiAgICBmb3IgKHZhciBwcm9wZXJ0eSBpbiBwcm9wZXJ0eVByZWZpeE1hcCkge1xuICAgICAgdmFyIGRhc2hDYXNlUHJvcGVydHkgPSAoMCwgX2h5cGhlbmF0ZVByb3BlcnR5Mi5kZWZhdWx0KShwcm9wZXJ0eSk7XG5cbiAgICAgIGlmIChzaW5nbGVWYWx1ZS5pbmRleE9mKGRhc2hDYXNlUHJvcGVydHkpID4gLTEgJiYgZGFzaENhc2VQcm9wZXJ0eSAhPT0gJ29yZGVyJykge1xuICAgICAgICB2YXIgcHJlZml4ZXMgPSBwcm9wZXJ0eVByZWZpeE1hcFtwcm9wZXJ0eV07XG4gICAgICAgIGZvciAodmFyIGogPSAwLCBwTGVuID0gcHJlZml4ZXMubGVuZ3RoOyBqIDwgcExlbjsgKytqKSB7XG4gICAgICAgICAgLy8gam9pbiBhbGwgcHJlZml4ZXMgYW5kIGNyZWF0ZSBhIG5ldyB2YWx1ZVxuICAgICAgICAgIHZhbHVlcy51bnNoaWZ0KHNpbmdsZVZhbHVlLnJlcGxhY2UoZGFzaENhc2VQcm9wZXJ0eSwgcHJlZml4TWFwcGluZ1twcmVmaXhlc1tqXV0gKyBkYXNoQ2FzZVByb3BlcnR5KSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBtdWx0aXBsZVZhbHVlc1tpXSA9IHZhbHVlcy5qb2luKCcsJyk7XG4gIH1cblxuICByZXR1cm4gbXVsdGlwbGVWYWx1ZXMuam9pbignLCcpO1xufVxuXG5mdW5jdGlvbiB0cmFuc2l0aW9uKHByb3BlcnR5LCB2YWx1ZSwgc3R5bGUsIHByb3BlcnR5UHJlZml4TWFwKSB7XG4gIC8vIGFsc28gY2hlY2sgZm9yIGFscmVhZHkgcHJlZml4ZWQgdHJhbnNpdGlvbnNcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgJiYgcHJvcGVydGllcy5oYXNPd25Qcm9wZXJ0eShwcm9wZXJ0eSkpIHtcbiAgICB2YXIgb3V0cHV0VmFsdWUgPSBwcmVmaXhWYWx1ZSh2YWx1ZSwgcHJvcGVydHlQcmVmaXhNYXApO1xuICAgIC8vIGlmIHRoZSBwcm9wZXJ0eSBpcyBhbHJlYWR5IHByZWZpeGVkXG4gICAgdmFyIHdlYmtpdE91dHB1dCA9IG91dHB1dFZhbHVlLnNwbGl0KC8sKD8hW14oKV0qKD86XFwoW14oKV0qXFwpKT9cXCkpL2cpLmZpbHRlcihmdW5jdGlvbiAodmFsKSB7XG4gICAgICByZXR1cm4gIS8tbW96LXwtbXMtLy50ZXN0KHZhbCk7XG4gICAgfSkuam9pbignLCcpO1xuXG4gICAgaWYgKHByb3BlcnR5LmluZGV4T2YoJ1dlYmtpdCcpID4gLTEpIHtcbiAgICAgIHJldHVybiB3ZWJraXRPdXRwdXQ7XG4gICAgfVxuXG4gICAgdmFyIG1vek91dHB1dCA9IG91dHB1dFZhbHVlLnNwbGl0KC8sKD8hW14oKV0qKD86XFwoW14oKV0qXFwpKT9cXCkpL2cpLmZpbHRlcihmdW5jdGlvbiAodmFsKSB7XG4gICAgICByZXR1cm4gIS8td2Via2l0LXwtbXMtLy50ZXN0KHZhbCk7XG4gICAgfSkuam9pbignLCcpO1xuXG4gICAgaWYgKHByb3BlcnR5LmluZGV4T2YoJ01veicpID4gLTEpIHtcbiAgICAgIHJldHVybiBtb3pPdXRwdXQ7XG4gICAgfVxuXG4gICAgc3R5bGVbJ1dlYmtpdCcgKyAoMCwgX2NhcGl0YWxpemVTdHJpbmcyLmRlZmF1bHQpKHByb3BlcnR5KV0gPSB3ZWJraXRPdXRwdXQ7XG4gICAgc3R5bGVbJ01veicgKyAoMCwgX2NhcGl0YWxpemVTdHJpbmcyLmRlZmF1bHQpKHByb3BlcnR5KV0gPSBtb3pPdXRwdXQ7XG4gICAgcmV0dXJuIG91dHB1dFZhbHVlO1xuICB9XG59XG59KTtcblxudmFyIHRyYW5zaXRpb24gPSB1bndyYXBFeHBvcnRzKHRyYW5zaXRpb25fMSk7XG5cbnZhciB3ID0gW1wiV2Via2l0XCJdO1xudmFyIG0gPSBbXCJNb3pcIl07XG52YXIgbXMgPSBbXCJtc1wiXTtcbnZhciB3bSA9IFtcIldlYmtpdFwiLCBcIk1velwiXTtcbnZhciB3bXMgPSBbXCJXZWJraXRcIiwgXCJtc1wiXTtcbnZhciB3bW1zID0gW1wiV2Via2l0XCIsIFwiTW96XCIsIFwibXNcIl07XG52YXIgc3RhdGljRGF0YSA9IHtcbiAgcGx1Z2luczogW2JhY2tncm91bmRDbGlwLCBjYWxjLCBjcm9zc0ZhZGUsIGN1cnNvciwgZmlsdGVyLCBmbGV4LCBmbGV4Ym94SUUsIGZsZXhib3hPbGQsIGdyYWRpZW50LCBncmlkLCBpbWFnZVNldCwgbG9naWNhbCwgcG9zaXRpb24sIHNpemluZywgdHJhbnNpdGlvbl0sXG4gIHByZWZpeE1hcDoge1xuICAgIFwidHJhbnNmb3JtXCI6IHdtcyxcbiAgICBcInRyYW5zZm9ybU9yaWdpblwiOiB3bXMsXG4gICAgXCJ0cmFuc2Zvcm1PcmlnaW5YXCI6IHdtcyxcbiAgICBcInRyYW5zZm9ybU9yaWdpbllcIjogd21zLFxuICAgIFwiYmFja2ZhY2VWaXNpYmlsaXR5XCI6IHcsXG4gICAgXCJwZXJzcGVjdGl2ZVwiOiB3LFxuICAgIFwicGVyc3BlY3RpdmVPcmlnaW5cIjogdyxcbiAgICBcInRyYW5zZm9ybVN0eWxlXCI6IHcsXG4gICAgXCJ0cmFuc2Zvcm1PcmlnaW5aXCI6IHcsXG4gICAgXCJhbmltYXRpb25cIjogdyxcbiAgICBcImFuaW1hdGlvbkRlbGF5XCI6IHcsXG4gICAgXCJhbmltYXRpb25EaXJlY3Rpb25cIjogdyxcbiAgICBcImFuaW1hdGlvbkZpbGxNb2RlXCI6IHcsXG4gICAgXCJhbmltYXRpb25EdXJhdGlvblwiOiB3LFxuICAgIFwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnRcIjogdyxcbiAgICBcImFuaW1hdGlvbk5hbWVcIjogdyxcbiAgICBcImFuaW1hdGlvblBsYXlTdGF0ZVwiOiB3LFxuICAgIFwiYW5pbWF0aW9uVGltaW5nRnVuY3Rpb25cIjogdyxcbiAgICBcImFwcGVhcmFuY2VcIjogd20sXG4gICAgXCJ1c2VyU2VsZWN0XCI6IHdtbXMsXG4gICAgXCJmb250S2VybmluZ1wiOiB3LFxuICAgIFwidGV4dEVtcGhhc2lzUG9zaXRpb25cIjogdyxcbiAgICBcInRleHRFbXBoYXNpc1wiOiB3LFxuICAgIFwidGV4dEVtcGhhc2lzU3R5bGVcIjogdyxcbiAgICBcInRleHRFbXBoYXNpc0NvbG9yXCI6IHcsXG4gICAgXCJib3hEZWNvcmF0aW9uQnJlYWtcIjogdyxcbiAgICBcImNsaXBQYXRoXCI6IHcsXG4gICAgXCJtYXNrSW1hZ2VcIjogdyxcbiAgICBcIm1hc2tNb2RlXCI6IHcsXG4gICAgXCJtYXNrUmVwZWF0XCI6IHcsXG4gICAgXCJtYXNrUG9zaXRpb25cIjogdyxcbiAgICBcIm1hc2tDbGlwXCI6IHcsXG4gICAgXCJtYXNrT3JpZ2luXCI6IHcsXG4gICAgXCJtYXNrU2l6ZVwiOiB3LFxuICAgIFwibWFza0NvbXBvc2l0ZVwiOiB3LFxuICAgIFwibWFza1wiOiB3LFxuICAgIFwibWFza0JvcmRlclNvdXJjZVwiOiB3LFxuICAgIFwibWFza0JvcmRlck1vZGVcIjogdyxcbiAgICBcIm1hc2tCb3JkZXJTbGljZVwiOiB3LFxuICAgIFwibWFza0JvcmRlcldpZHRoXCI6IHcsXG4gICAgXCJtYXNrQm9yZGVyT3V0c2V0XCI6IHcsXG4gICAgXCJtYXNrQm9yZGVyUmVwZWF0XCI6IHcsXG4gICAgXCJtYXNrQm9yZGVyXCI6IHcsXG4gICAgXCJtYXNrVHlwZVwiOiB3LFxuICAgIFwidGV4dERlY29yYXRpb25TdHlsZVwiOiB3bSxcbiAgICBcInRleHREZWNvcmF0aW9uU2tpcFwiOiB3bSxcbiAgICBcInRleHREZWNvcmF0aW9uTGluZVwiOiB3bSxcbiAgICBcInRleHREZWNvcmF0aW9uQ29sb3JcIjogd20sXG4gICAgXCJmaWx0ZXJcIjogdyxcbiAgICBcImZvbnRGZWF0dXJlU2V0dGluZ3NcIjogd20sXG4gICAgXCJicmVha0FmdGVyXCI6IHdtbXMsXG4gICAgXCJicmVha0JlZm9yZVwiOiB3bW1zLFxuICAgIFwiYnJlYWtJbnNpZGVcIjogd21tcyxcbiAgICBcImNvbHVtbkNvdW50XCI6IHdtLFxuICAgIFwiY29sdW1uRmlsbFwiOiB3bSxcbiAgICBcImNvbHVtbkdhcFwiOiB3bSxcbiAgICBcImNvbHVtblJ1bGVcIjogd20sXG4gICAgXCJjb2x1bW5SdWxlQ29sb3JcIjogd20sXG4gICAgXCJjb2x1bW5SdWxlU3R5bGVcIjogd20sXG4gICAgXCJjb2x1bW5SdWxlV2lkdGhcIjogd20sXG4gICAgXCJjb2x1bW5zXCI6IHdtLFxuICAgIFwiY29sdW1uU3BhblwiOiB3bSxcbiAgICBcImNvbHVtbldpZHRoXCI6IHdtLFxuICAgIFwid3JpdGluZ01vZGVcIjogd21zLFxuICAgIFwiZmxleFwiOiB3bXMsXG4gICAgXCJmbGV4QmFzaXNcIjogdyxcbiAgICBcImZsZXhEaXJlY3Rpb25cIjogd21zLFxuICAgIFwiZmxleEdyb3dcIjogdyxcbiAgICBcImZsZXhGbG93XCI6IHdtcyxcbiAgICBcImZsZXhTaHJpbmtcIjogdyxcbiAgICBcImZsZXhXcmFwXCI6IHdtcyxcbiAgICBcImFsaWduQ29udGVudFwiOiB3LFxuICAgIFwiYWxpZ25JdGVtc1wiOiB3LFxuICAgIFwiYWxpZ25TZWxmXCI6IHcsXG4gICAgXCJqdXN0aWZ5Q29udGVudFwiOiB3LFxuICAgIFwib3JkZXJcIjogdyxcbiAgICBcInRyYW5zaXRpb25EZWxheVwiOiB3LFxuICAgIFwidHJhbnNpdGlvbkR1cmF0aW9uXCI6IHcsXG4gICAgXCJ0cmFuc2l0aW9uUHJvcGVydHlcIjogdyxcbiAgICBcInRyYW5zaXRpb25UaW1pbmdGdW5jdGlvblwiOiB3LFxuICAgIFwiYmFja2Ryb3BGaWx0ZXJcIjogdyxcbiAgICBcInNjcm9sbFNuYXBUeXBlXCI6IHdtcyxcbiAgICBcInNjcm9sbFNuYXBQb2ludHNYXCI6IHdtcyxcbiAgICBcInNjcm9sbFNuYXBQb2ludHNZXCI6IHdtcyxcbiAgICBcInNjcm9sbFNuYXBEZXN0aW5hdGlvblwiOiB3bXMsXG4gICAgXCJzY3JvbGxTbmFwQ29vcmRpbmF0ZVwiOiB3bXMsXG4gICAgXCJzaGFwZUltYWdlVGhyZXNob2xkXCI6IHcsXG4gICAgXCJzaGFwZUltYWdlTWFyZ2luXCI6IHcsXG4gICAgXCJzaGFwZUltYWdlT3V0c2lkZVwiOiB3LFxuICAgIFwiaHlwaGVuc1wiOiB3bW1zLFxuICAgIFwiZmxvd0ludG9cIjogd21zLFxuICAgIFwiZmxvd0Zyb21cIjogd21zLFxuICAgIFwicmVnaW9uRnJhZ21lbnRcIjogd21zLFxuICAgIFwidGV4dE9yaWVudGF0aW9uXCI6IHcsXG4gICAgXCJib3hTaXppbmdcIjogbSxcbiAgICBcInRleHRBbGlnbkxhc3RcIjogbSxcbiAgICBcInRhYlNpemVcIjogbSxcbiAgICBcIndyYXBGbG93XCI6IG1zLFxuICAgIFwid3JhcFRocm91Z2hcIjogbXMsXG4gICAgXCJ3cmFwTWFyZ2luXCI6IG1zLFxuICAgIFwidG91Y2hBY3Rpb25cIjogbXMsXG4gICAgXCJ0ZXh0U2l6ZUFkanVzdFwiOiB3bXMsXG4gICAgXCJib3JkZXJJbWFnZVwiOiB3LFxuICAgIFwiYm9yZGVySW1hZ2VPdXRzZXRcIjogdyxcbiAgICBcImJvcmRlckltYWdlUmVwZWF0XCI6IHcsXG4gICAgXCJib3JkZXJJbWFnZVNsaWNlXCI6IHcsXG4gICAgXCJib3JkZXJJbWFnZVNvdXJjZVwiOiB3LFxuICAgIFwiYm9yZGVySW1hZ2VXaWR0aFwiOiB3XG4gIH1cbn07XG5cbnZhciBwcmVmaXhBbGwgPSBjcmVhdGVQcmVmaXhlcihzdGF0aWNEYXRhKTtcbi8qIDo6XG5pbXBvcnQgdHlwZSB7IFNoZWV0RGVmaW5pdGlvbiB9IGZyb20gJy4vaW5kZXguanMnO1xudHlwZSBTdHJpbmdIYW5kbGVycyA9IHsgW2lkOnN0cmluZ106IEZ1bmN0aW9uIH07XG50eXBlIFNlbGVjdG9yQ2FsbGJhY2sgPSAoc2VsZWN0b3I6IHN0cmluZykgPT4gc3RyaW5nW107XG5leHBvcnQgdHlwZSBTZWxlY3RvckhhbmRsZXIgPSAoXG4gICAgc2VsZWN0b3I6IHN0cmluZyxcbiAgICBiYXNlU2VsZWN0b3I6IHN0cmluZyxcbiAgICBjYWxsYmFjazogU2VsZWN0b3JDYWxsYmFja1xuKSA9PiBzdHJpbmdbXSB8IHN0cmluZyB8IG51bGw7XG4qL1xuXG4vKipcbiAqIGBzZWxlY3RvckhhbmRsZXJzYCBhcmUgZnVuY3Rpb25zIHdoaWNoIGhhbmRsZSBzcGVjaWFsIHNlbGVjdG9ycyB3aGljaCBhY3RcbiAqIGRpZmZlcmVudGx5IHRoYW4gbm9ybWFsIHN0eWxlIGRlZmluaXRpb25zLiBUaGVzZSBmdW5jdGlvbnMgbG9vayBhdCB0aGVcbiAqIGN1cnJlbnQgc2VsZWN0b3IgYW5kIGNhbiBnZW5lcmF0ZSBDU1MgZm9yIHRoZSBzdHlsZXMgaW4gdGhlaXIgc3VidHJlZSBieVxuICogY2FsbGluZyB0aGUgY2FsbGJhY2sgd2l0aCBhIG5ldyBzZWxlY3Rvci5cbiAqXG4gKiBGb3IgZXhhbXBsZSwgd2hlbiBnZW5lcmF0aW5nIHN0eWxlcyB3aXRoIGEgYmFzZSBzZWxlY3RvciBvZiAnLmZvbycgYW5kIHRoZVxuICogZm9sbG93aW5nIHN0eWxlcyBvYmplY3Q6XG4gKlxuICogICB7XG4gKiAgICAgJzpudGgtY2hpbGQoMm4pJzoge1xuICogICAgICAgJzpob3Zlcic6IHtcbiAqICAgICAgICAgY29sb3I6ICdyZWQnXG4gKiAgICAgICB9XG4gKiAgICAgfVxuICogICB9XG4gKlxuICogd2hlbiB3ZSByZWFjaCB0aGUgJzpob3Zlcicgc3R5bGUsIHdlIHdvdWxkIGNhbGwgb3VyIHNlbGVjdG9yIGhhbmRsZXJzIGxpa2VcbiAqXG4gKiAgIGhhbmRsZXIoJzpob3ZlcicsICcuZm9vOm50aC1jaGlsZCgybiknLCBjYWxsYmFjaylcbiAqXG4gKiBTaW5jZSBvdXIgYHBzZXVkb1NlbGVjdG9yc2AgaGFuZGxlcyAnOmhvdmVyJyBzdHlsZXMsIHRoYXQgaGFuZGxlciB3b3VsZCBjYWxsXG4gKiB0aGUgY2FsbGJhY2sgbGlrZVxuICpcbiAqICAgY2FsbGJhY2soJy5mb286bnRoLWNoaWxkKDJuKTpob3ZlcicpXG4gKlxuICogdG8gZ2VuZXJhdGUgaXRzIHN1YnRyZWUgYHsgY29sb3I6ICdyZWQnIH1gIHN0eWxlcyB3aXRoIGFcbiAqICcuZm9vOm50aC1jaGlsZCgybik6aG92ZXInIHNlbGVjdG9yLiBUaGUgY2FsbGJhY2sgd291bGQgcmV0dXJuIGFuIGFycmF5IG9mIENTU1xuICogcnVsZXMgbGlrZVxuICpcbiAqICAgWycuZm9vOm50aC1jaGlsZCgybik6aG92ZXJ7Y29sb3I6cmVkICFpbXBvcnRhbnQ7fSddXG4gKlxuICogYW5kIHRoZSBoYW5kbGVyIHdvdWxkIHRoZW4gcmV0dXJuIHRoYXQgcmVzdWx0aW5nIENTUy5cbiAqXG4gKiBgZGVmYXVsdFNlbGVjdG9ySGFuZGxlcnNgIGlzIHRoZSBsaXN0IG9mIGRlZmF1bHQgaGFuZGxlcnMgdXNlZCBpbiBhIGNhbGwgdG9cbiAqIGBnZW5lcmF0ZUNTU2AuXG4gKlxuICogQG5hbWUgU2VsZWN0b3JIYW5kbGVyXG4gKiBAZnVuY3Rpb25cbiAqIEBwYXJhbSB7c3RyaW5nfSBzZWxlY3RvcjogVGhlIGN1cnJlbnRseSBpbnNwZWN0ZWQgc2VsZWN0b3IuICc6aG92ZXInIGluIHRoZVxuICogICAgIGV4YW1wbGUgYWJvdmUuXG4gKiBAcGFyYW0ge3N0cmluZ30gYmFzZVNlbGVjdG9yOiBUaGUgc2VsZWN0b3Igb2YgdGhlIHBhcmVudCBzdHlsZXMuXG4gKiAgICAgJy5mb286bnRoLWNoaWxkKDJuKScgaW4gdGhlIGV4YW1wbGUgYWJvdmUuXG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSBnZW5lcmF0ZVN1YnRyZWVTdHlsZXM6IEEgZnVuY3Rpb24gd2hpY2ggY2FuIGJlIGNhbGxlZCB0b1xuICogICAgIGdlbmVyYXRlIENTUyBmb3IgdGhlIHN1YnRyZWUgb2Ygc3R5bGVzIGNvcnJlc3BvbmRpbmcgdG8gdGhlIHNlbGVjdG9yLlxuICogICAgIEFjY2VwdHMgYSBuZXcgYmFzZVNlbGVjdG9yIHRvIHVzZSBmb3IgZ2VuZXJhdGluZyB0aG9zZSBzdHlsZXMuXG4gKiBAcmV0dXJucyB7c3RyaW5nW10gfCBzdHJpbmcgfCBudWxsfSBUaGUgZ2VuZXJhdGVkIENTUyBmb3IgdGhpcyBzZWxlY3Rvciwgb3JcbiAqICAgICBudWxsIGlmIHdlIGRvbid0IGhhbmRsZSB0aGlzIHNlbGVjdG9yLlxuICovXG5cbnZhciBkZWZhdWx0U2VsZWN0b3JIYW5kbGVyc1xuLyogOiBTZWxlY3RvckhhbmRsZXJbXSAqL1xuPSBbLy8gSGFuZGxlIHBzZXVkby1zZWxlY3RvcnMsIGxpa2UgOmhvdmVyIGFuZCA6bnRoLWNoaWxkKDNuKVxuZnVuY3Rpb24gcHNldWRvU2VsZWN0b3JzKHNlbGVjdG9yLCBiYXNlU2VsZWN0b3IsIGdlbmVyYXRlU3VidHJlZVN0eWxlcykge1xuICBpZiAoc2VsZWN0b3JbMF0gIT09IFwiOlwiKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICByZXR1cm4gZ2VuZXJhdGVTdWJ0cmVlU3R5bGVzKGJhc2VTZWxlY3RvciArIHNlbGVjdG9yKTtcbn0sIC8vIEhhbmRsZSBtZWRpYSBxdWVyaWVzIChvciBmb250LWZhY2VzKVxuZnVuY3Rpb24gbWVkaWFRdWVyaWVzKHNlbGVjdG9yLCBiYXNlU2VsZWN0b3IsIGdlbmVyYXRlU3VidHJlZVN0eWxlcykge1xuICBpZiAoc2VsZWN0b3JbMF0gIT09IFwiQFwiKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH0gLy8gR2VuZXJhdGUgdGhlIHN0eWxlcyBub3JtYWxseSwgYW5kIHRoZW4gd3JhcCB0aGVtIGluIHRoZSBtZWRpYSBxdWVyeS5cblxuXG4gIHZhciBnZW5lcmF0ZWQgPSBnZW5lcmF0ZVN1YnRyZWVTdHlsZXMoYmFzZVNlbGVjdG9yKTtcbiAgcmV0dXJuIFtcIlwiLmNvbmNhdChzZWxlY3RvciwgXCJ7XCIpLmNvbmNhdChnZW5lcmF0ZWQuam9pbignJyksIFwifVwiKV07XG59XTtcbi8qKlxuICogR2VuZXJhdGUgQ1NTIGZvciBhIHNlbGVjdG9yIGFuZCBzb21lIHN0eWxlcy5cbiAqXG4gKiBUaGlzIGZ1bmN0aW9uIGhhbmRsZXMgdGhlIG1lZGlhIHF1ZXJpZXMgYW5kIHBzZXVkbyBzZWxlY3RvcnMgdGhhdCBjYW4gYmUgdXNlZFxuICogaW4gYXBocm9kaXRlIHN0eWxlcy5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gc2VsZWN0b3I6IEEgYmFzZSBDU1Mgc2VsZWN0b3IgZm9yIHRoZSBzdHlsZXMgdG8gYmUgZ2VuZXJhdGVkXG4gKiAgICAgd2l0aC5cbiAqIEBwYXJhbSB7T2JqZWN0fSBzdHlsZVR5cGVzOiBBIGxpc3Qgb2YgcHJvcGVydGllcyBvZiB0aGUgcmV0dXJuIHR5cGUgb2ZcbiAqICAgICBTdHlsZVNoZWV0LmNyZWF0ZSwgZS5nLiBbc3R5bGVzLnJlZCwgc3R5bGVzLmJsdWVdLlxuICogQHBhcmFtIHtBcnJheS48U2VsZWN0b3JIYW5kbGVyPn0gc2VsZWN0b3JIYW5kbGVyczogQSBsaXN0IG9mIHNlbGVjdG9yXG4gKiAgICAgaGFuZGxlcnMgdG8gdXNlIGZvciBoYW5kbGluZyBzcGVjaWFsIHNlbGVjdG9ycy4gU2VlXG4gKiAgICAgYGRlZmF1bHRTZWxlY3RvckhhbmRsZXJzYC5cbiAqIEBwYXJhbSBzdHJpbmdIYW5kbGVyczogU2VlIGBnZW5lcmF0ZUNTU1J1bGVzZXRgXG4gKiBAcGFyYW0gdXNlSW1wb3J0YW50OiBTZWUgYGdlbmVyYXRlQ1NTUnVsZXNldGBcbiAqXG4gKiBUbyBhY3R1YWxseSBnZW5lcmF0ZSB0aGUgQ1NTIHNwZWNpYWwtY29uc3RydWN0LWxlc3Mgc3R5bGVzIGFyZSBwYXNzZWQgdG9cbiAqIGBnZW5lcmF0ZUNTU1J1bGVzZXRgLlxuICpcbiAqIEZvciBpbnN0YW5jZSwgYSBjYWxsIHRvXG4gKlxuICogICAgIGdlbmVyYXRlQ1NTKFwiLmZvb1wiLCBbe1xuICogICAgICAgY29sb3I6IFwicmVkXCIsXG4gKiAgICAgICBcIkBtZWRpYSBzY3JlZW5cIjoge1xuICogICAgICAgICBoZWlnaHQ6IDIwLFxuICogICAgICAgICBcIjpob3ZlclwiOiB7XG4gKiAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBcImJsYWNrXCJcbiAqICAgICAgICAgfVxuICogICAgICAgfSxcbiAqICAgICAgIFwiOmFjdGl2ZVwiOiB7XG4gKiAgICAgICAgIGZvbnRXZWlnaHQ6IFwiYm9sZFwiXG4gKiAgICAgICB9XG4gKiAgICAgfV0sIGRlZmF1bHRTZWxlY3RvckhhbmRsZXJzKTtcbiAqXG4gKiB3aXRoIHRoZSBkZWZhdWx0IGBzZWxlY3RvckhhbmRsZXJzYCB3aWxsIG1ha2UgNSBjYWxscyB0b1xuICogYGdlbmVyYXRlQ1NTUnVsZXNldGA6XG4gKlxuICogICAgIGdlbmVyYXRlQ1NTUnVsZXNldChcIi5mb29cIiwgeyBjb2xvcjogXCJyZWRcIiB9LCAuLi4pXG4gKiAgICAgZ2VuZXJhdGVDU1NSdWxlc2V0KFwiLmZvbzphY3RpdmVcIiwgeyBmb250V2VpZ2h0OiBcImJvbGRcIiB9LCAuLi4pXG4gKiAgICAgLy8gVGhlc2UgMiB3aWxsIGJlIHdyYXBwZWQgaW4gQG1lZGlhIHNjcmVlbiB7fVxuICogICAgIGdlbmVyYXRlQ1NTUnVsZXNldChcIi5mb29cIiwgeyBoZWlnaHQ6IDIwIH0sIC4uLilcbiAqICAgICBnZW5lcmF0ZUNTU1J1bGVzZXQoXCIuZm9vOmhvdmVyXCIsIHsgYmFja2dyb3VuZENvbG9yOiBcImJsYWNrXCIgfSwgLi4uKVxuICovXG5cbnZhciBnZW5lcmF0ZUNTUyA9IGZ1bmN0aW9uIGdlbmVyYXRlQ1NTKHNlbGVjdG9yXG4vKiA6IHN0cmluZyAqL1xuLCBzdHlsZVR5cGVzXG4vKiA6IFNoZWV0RGVmaW5pdGlvbltdICovXG4sIHNlbGVjdG9ySGFuZGxlcnNcbi8qIDogU2VsZWN0b3JIYW5kbGVyW10gKi9cbiwgc3RyaW5nSGFuZGxlcnNcbi8qIDogU3RyaW5nSGFuZGxlcnMgKi9cbiwgdXNlSW1wb3J0YW50XG4vKiA6IGJvb2xlYW4gKi9cbilcbi8qIDogc3RyaW5nW10gKi9cbntcbiAgdmFyIG1lcmdlZCA9IG5ldyBPcmRlcmVkRWxlbWVudHMoKTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlVHlwZXMubGVuZ3RoOyBpKyspIHtcbiAgICBtZXJnZWQuYWRkU3R5bGVUeXBlKHN0eWxlVHlwZXNbaV0pO1xuICB9XG5cbiAgdmFyIHBsYWluRGVjbGFyYXRpb25zID0gbmV3IE9yZGVyZWRFbGVtZW50cygpO1xuICB2YXIgZ2VuZXJhdGVkU3R5bGVzID0gW107IC8vIFRPRE8oZW1pbHkpOiBiZW5jaG1hcmsgdGhpcyB0byBzZWUgaWYgYSBwbGFpbiBmb3IgbG9vcCB3b3VsZCBiZSBmYXN0ZXIuXG5cbiAgbWVyZ2VkLmZvckVhY2goZnVuY3Rpb24gKHZhbCwga2V5KSB7XG4gICAgLy8gRm9yIGVhY2gga2V5LCBzZWUgaWYgb25lIG9mIHRoZSBzZWxlY3RvciBoYW5kbGVycyB3aWxsIGhhbmRsZSB0aGVzZVxuICAgIC8vIHN0eWxlcy5cbiAgICB2YXIgZm91bmRIYW5kbGVyID0gc2VsZWN0b3JIYW5kbGVycy5zb21lKGZ1bmN0aW9uIChoYW5kbGVyKSB7XG4gICAgICB2YXIgcmVzdWx0ID0gaGFuZGxlcihrZXksIHNlbGVjdG9yLCBmdW5jdGlvbiAobmV3U2VsZWN0b3IpIHtcbiAgICAgICAgcmV0dXJuIGdlbmVyYXRlQ1NTKG5ld1NlbGVjdG9yLCBbdmFsXSwgc2VsZWN0b3JIYW5kbGVycywgc3RyaW5nSGFuZGxlcnMsIHVzZUltcG9ydGFudCk7XG4gICAgICB9KTtcblxuICAgICAgaWYgKHJlc3VsdCAhPSBudWxsKSB7XG4gICAgICAgIC8vIElmIHRoZSBoYW5kbGVyIHJldHVybmVkIHNvbWV0aGluZywgYWRkIGl0IHRvIHRoZSBnZW5lcmF0ZWRcbiAgICAgICAgLy8gQ1NTIGFuZCBzdG9wIGxvb2tpbmcgZm9yIGFub3RoZXIgaGFuZGxlci5cbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkocmVzdWx0KSkge1xuICAgICAgICAgIGdlbmVyYXRlZFN0eWxlcy5wdXNoLmFwcGx5KGdlbmVyYXRlZFN0eWxlcywgX3RvQ29uc3VtYWJsZUFycmF5KHJlc3VsdCkpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxuICAgICAgICAgIGNvbnNvbGUud2FybignV0FSTklORzogU2VsZWN0b3IgaGFuZGxlcnMgc2hvdWxkIHJldHVybiBhbiBhcnJheSBvZiBydWxlcy4nICsgJ1JldHVybmluZyBhIHN0cmluZyBjb250YWluaW5nIG11bHRpcGxlIHJ1bGVzIGlzIGRlcHJlY2F0ZWQuJywgaGFuZGxlcik7XG4gICAgICAgICAgZ2VuZXJhdGVkU3R5bGVzLnB1c2goXCJAbWVkaWEgYWxsIHtcIi5jb25jYXQocmVzdWx0LCBcIn1cIikpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgfSk7IC8vIElmIG5vbmUgb2YgdGhlIGhhbmRsZXJzIGhhbmRsZWQgaXQsIGFkZCBpdCB0byB0aGUgbGlzdCBvZiBwbGFpblxuICAgIC8vIHN0eWxlIGRlY2xhcmF0aW9ucy5cblxuICAgIGlmICghZm91bmRIYW5kbGVyKSB7XG4gICAgICBwbGFpbkRlY2xhcmF0aW9ucy5zZXQoa2V5LCB2YWwsIHRydWUpO1xuICAgIH1cbiAgfSk7XG4gIHZhciBnZW5lcmF0ZWRSdWxlc2V0ID0gZ2VuZXJhdGVDU1NSdWxlc2V0KHNlbGVjdG9yLCBwbGFpbkRlY2xhcmF0aW9ucywgc3RyaW5nSGFuZGxlcnMsIHVzZUltcG9ydGFudCwgc2VsZWN0b3JIYW5kbGVycyk7XG5cbiAgaWYgKGdlbmVyYXRlZFJ1bGVzZXQpIHtcbiAgICBnZW5lcmF0ZWRTdHlsZXMudW5zaGlmdChnZW5lcmF0ZWRSdWxlc2V0KTtcbiAgfVxuXG4gIHJldHVybiBnZW5lcmF0ZWRTdHlsZXM7XG59O1xuLyoqXG4gKiBIZWxwZXIgbWV0aG9kIG9mIGdlbmVyYXRlQ1NTUnVsZXNldCB0byBmYWNpbGl0YXRlIGN1c3RvbSBoYW5kbGluZyBvZiBjZXJ0YWluXG4gKiBDU1MgcHJvcGVydGllcy4gVXNlZCBmb3IgZS5nLiBmb250IGZhbWlsaWVzLlxuICpcbiAqIFNlZSBnZW5lcmF0ZUNTU1J1bGVzZXQgZm9yIHVzYWdlIGFuZCBkb2N1bWVudGF0aW9uIG9mIHBhcmFtYXRlciB0eXBlcy5cbiAqL1xuXG52YXIgcnVuU3RyaW5nSGFuZGxlcnMgPSBmdW5jdGlvbiBydW5TdHJpbmdIYW5kbGVycyhkZWNsYXJhdGlvbnNcbi8qIDogT3JkZXJlZEVsZW1lbnRzICovXG4sIHN0cmluZ0hhbmRsZXJzXG4vKiA6IFN0cmluZ0hhbmRsZXJzICovXG4sIHNlbGVjdG9ySGFuZGxlcnNcbi8qIDogU2VsZWN0b3JIYW5kbGVyW10gKi9cbilcbi8qIDogdm9pZCAqL1xue1xuICBpZiAoIXN0cmluZ0hhbmRsZXJzKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIHN0cmluZ0hhbmRsZXJLZXlzID0gT2JqZWN0LmtleXMoc3RyaW5nSGFuZGxlcnMpO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3RyaW5nSGFuZGxlcktleXMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIga2V5ID0gc3RyaW5nSGFuZGxlcktleXNbaV07XG5cbiAgICBpZiAoZGVjbGFyYXRpb25zLmhhcyhrZXkpKSB7XG4gICAgICAvLyBBIGRlY2xhcmF0aW9uIGV4aXN0cyBmb3IgdGhpcyBwYXJ0aWN1bGFyIHN0cmluZyBoYW5kbGVyLCBzbyB3ZVxuICAgICAgLy8gbmVlZCB0byBsZXQgdGhlIHN0cmluZyBoYW5kbGVyIGludGVycHJldCB0aGUgZGVjbGFyYXRpb24gZmlyc3RcbiAgICAgIC8vIGJlZm9yZSBwcm9jZWVkaW5nLlxuICAgICAgLy9cbiAgICAgIC8vIFRPRE8oZW1pbHkpOiBQYXNzIGluIGEgY2FsbGJhY2sgd2hpY2ggZ2VuZXJhdGVzIENTUywgc2ltaWxhciB0b1xuICAgICAgLy8gaG93IG91ciBzZWxlY3RvciBoYW5kbGVycyB3b3JrLCBpbnN0ZWFkIG9mIHBhc3NpbmcgaW5cbiAgICAgIC8vIGBzZWxlY3RvckhhbmRsZXJzYCBhbmQgaGF2ZSB0aGVtIG1ha2UgY2FsbHMgdG8gYGdlbmVyYXRlQ1NTYFxuICAgICAgLy8gdGhlbXNlbHZlcy4gUmlnaHQgbm93LCB0aGlzIGlzIGltcHJhY3RpY2FsIGJlY2F1c2Ugb3VyIHN0cmluZ1xuICAgICAgLy8gaGFuZGxlcnMgYXJlIHZlcnkgc3BlY2lhbGl6ZWQgYW5kIGRvIGNvbXBsZXggdGhpbmdzLlxuICAgICAgZGVjbGFyYXRpb25zLnNldChrZXksIHN0cmluZ0hhbmRsZXJzW2tleV0oZGVjbGFyYXRpb25zLmdldChrZXkpLCBzZWxlY3RvckhhbmRsZXJzKSwgLy8gUHJlc2VydmUgb3JkZXIgaGVyZSwgc2luY2Ugd2UgYXJlIHJlYWxseSByZXBsYWNpbmcgYW5cbiAgICAgIC8vIHVucHJvY2Vzc2VkIHN0eWxlIHdpdGggYSBwcm9jZXNzZWQgc3R5bGUsIG5vdCBvdmVycmlkaW5nIGFuXG4gICAgICAvLyBlYXJsaWVyIHN0eWxlXG4gICAgICBmYWxzZSk7XG4gICAgfVxuICB9XG59O1xuXG52YXIgdHJhbnNmb3JtUnVsZSA9IGZ1bmN0aW9uIHRyYW5zZm9ybVJ1bGUoa2V5XG4vKiA6IHN0cmluZyAqL1xuLCB2YWx1ZVxuLyogOiBzdHJpbmcgKi9cbiwgdHJhbnNmb3JtVmFsdWVcbi8qIDogZnVuY3Rpb24gKi9cbikge1xuICByZXR1cm4gKFxuICAgIC8qIDogc3RyaW5nICovXG4gICAgXCJcIi5jb25jYXQoa2ViYWJpZnlTdHlsZU5hbWUoa2V5KSwgXCI6XCIpLmNvbmNhdCh0cmFuc2Zvcm1WYWx1ZShrZXksIHZhbHVlKSwgXCI7XCIpXG4gICk7XG59O1xuXG52YXIgYXJyYXlUb09iamVjdEtleXNSZWR1Y2VyID0gZnVuY3Rpb24gYXJyYXlUb09iamVjdEtleXNSZWR1Y2VyKGFjYywgdmFsKSB7XG4gIGFjY1t2YWxdID0gdHJ1ZTtcbiAgcmV0dXJuIGFjYztcbn07XG4vKipcbiAqIEdlbmVyYXRlIGEgQ1NTIHJ1bGVzZXQgd2l0aCB0aGUgc2VsZWN0b3IgYW5kIGNvbnRhaW5pbmcgdGhlIGRlY2xhcmF0aW9ucy5cbiAqXG4gKiBUaGlzIGZ1bmN0aW9uIGFzc3VtZXMgdGhhdCB0aGUgZ2l2ZW4gZGVjbGFyYXRpb25zIGRvbid0IGNvbnRhaW4gYW55IHNwZWNpYWxcbiAqIGNoaWxkcmVuIChzdWNoIGFzIG1lZGlhIHF1ZXJpZXMsIHBzZXVkby1zZWxlY3RvcnMsIG9yIGRlc2NlbmRhbnQgc3R5bGVzKS5cbiAqXG4gKiBOb3RlIHRoYXQgdGhpcyBtZXRob2QgZG9lcyBub3QgZGVhbCB3aXRoIG5lc3RpbmcgdXNlZCBmb3IgZS5nLlxuICogcHN1ZWRvLXNlbGVjdG9ycyBvciBtZWRpYSBxdWVyaWVzLiBUaGF0IHJlc3BvbnNpYmlsaXR5IGlzIGxlZnQgdG8gIHRoZVxuICogYGdlbmVyYXRlQ1NTYCBmdW5jdGlvbi5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gc2VsZWN0b3I6IHRoZSBzZWxlY3RvciBhc3NvY2lhdGVkIHdpdGggdGhlIHJ1bGVzZXRcbiAqIEBwYXJhbSB7T2JqZWN0fSBkZWNsYXJhdGlvbnM6IGEgbWFwIGZyb20gY2FtZWxDYXNlZCBDU1MgcHJvcGVydHkgbmFtZSB0byBDU1NcbiAqICAgICBwcm9wZXJ0eSB2YWx1ZS5cbiAqIEBwYXJhbSB7T2JqZWN0LjxzdHJpbmcsIGZ1bmN0aW9uPn0gc3RyaW5nSGFuZGxlcnM6IGEgbWFwIGZyb20gY2FtZWxDYXNlZCBDU1NcbiAqICAgICBwcm9wZXJ0eSBuYW1lIHRvIGEgZnVuY3Rpb24gd2hpY2ggd2lsbCBtYXAgdGhlIGdpdmVuIHZhbHVlIHRvIHRoZSB2YWx1ZVxuICogICAgIHRoYXQgaXMgb3V0cHV0LlxuICogQHBhcmFtIHtib29sfSB1c2VJbXBvcnRhbnQ6IEEgYm9vbGVhbiBzYXlpbmcgd2hldGhlciB0byBhcHBlbmQgXCIhaW1wb3J0YW50XCJcbiAqICAgICB0byBlYWNoIG9mIHRoZSBDU1MgZGVjbGFyYXRpb25zLlxuICogQHJldHVybnMge3N0cmluZ30gQSBzdHJpbmcgb2YgcmF3IENTUy5cbiAqXG4gKiBFeGFtcGxlczpcbiAqXG4gKiAgICBnZW5lcmF0ZUNTU1J1bGVzZXQoXCIuYmxhaFwiLCB7IGNvbG9yOiBcInJlZFwiIH0pXG4gKiAgICAtPiBcIi5ibGFoe2NvbG9yOiByZWQgIWltcG9ydGFudDt9XCJcbiAqICAgIGdlbmVyYXRlQ1NTUnVsZXNldChcIi5ibGFoXCIsIHsgY29sb3I6IFwicmVkXCIgfSwge30sIGZhbHNlKVxuICogICAgLT4gXCIuYmxhaHtjb2xvcjogcmVkfVwiXG4gKiAgICBnZW5lcmF0ZUNTU1J1bGVzZXQoXCIuYmxhaFwiLCB7IGNvbG9yOiBcInJlZFwiIH0sIHtjb2xvcjogYyA9PiBjLnRvVXBwZXJDYXNlfSlcbiAqICAgIC0+IFwiLmJsYWh7Y29sb3I6IFJFRH1cIlxuICogICAgZ2VuZXJhdGVDU1NSdWxlc2V0KFwiLmJsYWg6aG92ZXJcIiwgeyBjb2xvcjogXCJyZWRcIiB9KVxuICogICAgLT4gXCIuYmxhaDpob3Zlcntjb2xvcjogcmVkfVwiXG4gKi9cblxuXG52YXIgZ2VuZXJhdGVDU1NSdWxlc2V0ID0gZnVuY3Rpb24gZ2VuZXJhdGVDU1NSdWxlc2V0KHNlbGVjdG9yXG4vKiA6IHN0cmluZyAqL1xuLCBkZWNsYXJhdGlvbnNcbi8qIDogT3JkZXJlZEVsZW1lbnRzICovXG4sIHN0cmluZ0hhbmRsZXJzXG4vKiA6IFN0cmluZ0hhbmRsZXJzICovXG4sIHVzZUltcG9ydGFudFxuLyogOiBib29sZWFuICovXG4sIHNlbGVjdG9ySGFuZGxlcnNcbi8qIDogU2VsZWN0b3JIYW5kbGVyW10gKi9cbilcbi8qIDogc3RyaW5nICovXG57XG4gIC8vIE11dGF0ZXMgZGVjbGFyYXRpb25zXG4gIHJ1blN0cmluZ0hhbmRsZXJzKGRlY2xhcmF0aW9ucywgc3RyaW5nSGFuZGxlcnMsIHNlbGVjdG9ySGFuZGxlcnMpO1xuICB2YXIgb3JpZ2luYWxFbGVtZW50cyA9IE9iamVjdC5rZXlzKGRlY2xhcmF0aW9ucy5lbGVtZW50cykucmVkdWNlKGFycmF5VG9PYmplY3RLZXlzUmVkdWNlciwgT2JqZWN0LmNyZWF0ZShudWxsKSk7IC8vIE5PVEUoZW1pbHkpOiBUaGlzIG11dGF0ZXMgaGFuZGxlZERlY2xhcmF0aW9ucy5lbGVtZW50cy5cblxuICB2YXIgcHJlZml4ZWRFbGVtZW50cyA9IHByZWZpeEFsbChkZWNsYXJhdGlvbnMuZWxlbWVudHMpO1xuICB2YXIgZWxlbWVudE5hbWVzID0gT2JqZWN0LmtleXMocHJlZml4ZWRFbGVtZW50cyk7XG5cbiAgaWYgKGVsZW1lbnROYW1lcy5sZW5ndGggIT09IGRlY2xhcmF0aW9ucy5rZXlPcmRlci5sZW5ndGgpIHtcbiAgICAvLyBUaGVyZSBhcmUgc29tZSBwcmVmaXhlZCB2YWx1ZXMsIHNvIHdlIG5lZWQgdG8gZmlndXJlIG91dCBob3cgdG8gc29ydFxuICAgIC8vIHRoZW0uXG4gICAgLy9cbiAgICAvLyBMb29wIHRocm91Z2ggcHJlZml4ZWRFbGVtZW50cywgbG9va2luZyBmb3IgYW55dGhpbmcgdGhhdCBpcyBub3QgaW5cbiAgICAvLyBzb3J0T3JkZXIsIHdoaWNoIG1lYW5zIGl0IHdhcyBhZGRlZCBieSBwcmVmaXhBbGwuIFRoaXMgbWVhbnMgdGhhdCB3ZVxuICAgIC8vIG5lZWQgdG8gZmlndXJlIG91dCB3aGVyZSBpdCBzaG91bGQgYXBwZWFyIGluIHRoZSBzb3J0T3JkZXIuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBlbGVtZW50TmFtZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGlmICghb3JpZ2luYWxFbGVtZW50c1tlbGVtZW50TmFtZXNbaV1dKSB7XG4gICAgICAgIC8vIFRoaXMgZWxlbWVudCBpcyBub3QgaW4gdGhlIHNvcnRPcmRlciwgd2hpY2ggbWVhbnMgaXQgaXMgYSBwcmVmaXhlZFxuICAgICAgICAvLyB2YWx1ZSB0aGF0IHdhcyBhZGRlZCBieSBwcmVmaXhBbGwuIExldCdzIHRyeSB0byBmaWd1cmUgb3V0IHdoZXJlIGl0XG4gICAgICAgIC8vIGdvZXMuXG4gICAgICAgIHZhciBvcmlnaW5hbFN0eWxlID0gdm9pZCAwO1xuXG4gICAgICAgIGlmIChlbGVtZW50TmFtZXNbaV1bMF0gPT09ICdXJykge1xuICAgICAgICAgIC8vIFRoaXMgaXMgYSBXZWJraXQtcHJlZml4ZWQgc3R5bGUsIGxpa2UgXCJXZWJraXRUcmFuc2l0aW9uXCIuIExldCdzXG4gICAgICAgICAgLy8gZmluZCBpdHMgb3JpZ2luYWwgc3R5bGUncyBzb3J0IG9yZGVyLlxuICAgICAgICAgIG9yaWdpbmFsU3R5bGUgPSBlbGVtZW50TmFtZXNbaV1bNl0udG9Mb3dlckNhc2UoKSArIGVsZW1lbnROYW1lc1tpXS5zbGljZSg3KTtcbiAgICAgICAgfSBlbHNlIGlmIChlbGVtZW50TmFtZXNbaV1bMV0gPT09ICdvJykge1xuICAgICAgICAgIC8vIFRoaXMgaXMgYSBNb3otcHJlZml4ZWQgc3R5bGUsIGxpa2UgXCJNb3pUcmFuc2l0aW9uXCIuIFdlIGNoZWNrXG4gICAgICAgICAgLy8gdGhlIHNlY29uZCBjaGFyYWN0ZXIgdG8gYXZvaWQgY29sbGlkaW5nIHdpdGggTXMtcHJlZml4ZWRcbiAgICAgICAgICAvLyBzdHlsZXMuIExldCdzIGZpbmQgaXRzIG9yaWdpbmFsIHN0eWxlJ3Mgc29ydCBvcmRlci5cbiAgICAgICAgICBvcmlnaW5hbFN0eWxlID0gZWxlbWVudE5hbWVzW2ldWzNdLnRvTG93ZXJDYXNlKCkgKyBlbGVtZW50TmFtZXNbaV0uc2xpY2UoNCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8gaWYgKGVsZW1lbnROYW1lc1tpXVsxXSA9PT0gJ3MnKSB7XG4gICAgICAgICAgLy8gVGhpcyBpcyBhIE1zLXByZWZpeGVkIHN0eWxlLCBsaWtlIFwiTXNUcmFuc2l0aW9uXCIuXG4gICAgICAgICAgb3JpZ2luYWxTdHlsZSA9IGVsZW1lbnROYW1lc1tpXVsyXS50b0xvd2VyQ2FzZSgpICsgZWxlbWVudE5hbWVzW2ldLnNsaWNlKDMpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKG9yaWdpbmFsU3R5bGUgJiYgb3JpZ2luYWxFbGVtZW50c1tvcmlnaW5hbFN0eWxlXSkge1xuICAgICAgICAgIHZhciBvcmlnaW5hbEluZGV4ID0gZGVjbGFyYXRpb25zLmtleU9yZGVyLmluZGV4T2Yob3JpZ2luYWxTdHlsZSk7XG4gICAgICAgICAgZGVjbGFyYXRpb25zLmtleU9yZGVyLnNwbGljZShvcmlnaW5hbEluZGV4LCAwLCBlbGVtZW50TmFtZXNbaV0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIFdlIGRvbid0IGtub3cgd2hhdCB0aGUgb3JpZ2luYWwgc3R5bGUgd2FzLCBzbyBzb3J0IGl0IHRvXG4gICAgICAgICAgLy8gdG9wLiBUaGlzIGNhbiBoYXBwZW4gZm9yIHN0eWxlcyB0aGF0IGFyZSBhZGRlZCB0aGF0IGRvbid0XG4gICAgICAgICAgLy8gaGF2ZSB0aGUgc2FtZSBiYXNlIG5hbWUgYXMgdGhlIG9yaWdpbmFsIHN0eWxlLlxuICAgICAgICAgIGRlY2xhcmF0aW9ucy5rZXlPcmRlci51bnNoaWZ0KGVsZW1lbnROYW1lc1tpXSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICB2YXIgdHJhbnNmb3JtVmFsdWUgPSB1c2VJbXBvcnRhbnQgPT09IGZhbHNlID8gc3RyaW5naWZ5VmFsdWUgOiBzdHJpbmdpZnlBbmRJbXBvcnRhbnRpZnlWYWx1ZTtcbiAgdmFyIHJ1bGVzID0gW107XG5cbiAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGRlY2xhcmF0aW9ucy5rZXlPcmRlci5sZW5ndGg7IF9pKyspIHtcbiAgICB2YXIga2V5ID0gZGVjbGFyYXRpb25zLmtleU9yZGVyW19pXTtcbiAgICB2YXIgdmFsdWUgPSBwcmVmaXhlZEVsZW1lbnRzW2tleV07XG5cbiAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgIC8vIGlubGluZS1zdHlsZS1wcmVmaXhlciByZXR1cm5zIGFuIGFycmF5IHdoZW4gdGhlcmUgc2hvdWxkIGJlXG4gICAgICAvLyBtdWx0aXBsZSBydWxlcyBmb3IgdGhlIHNhbWUga2V5LiBIZXJlIHdlIGZsYXR0ZW4gdG8gbXVsdGlwbGVcbiAgICAgIC8vIHBhaXJzIHdpdGggdGhlIHNhbWUga2V5LlxuICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCB2YWx1ZS5sZW5ndGg7IGorKykge1xuICAgICAgICBydWxlcy5wdXNoKHRyYW5zZm9ybVJ1bGUoa2V5LCB2YWx1ZVtqXSwgdHJhbnNmb3JtVmFsdWUpKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgcnVsZXMucHVzaCh0cmFuc2Zvcm1SdWxlKGtleSwgdmFsdWUsIHRyYW5zZm9ybVZhbHVlKSk7XG4gICAgfVxuICB9XG5cbiAgaWYgKHJ1bGVzLmxlbmd0aCkge1xuICAgIHJldHVybiBcIlwiLmNvbmNhdChzZWxlY3RvciwgXCJ7XCIpLmNvbmNhdChydWxlcy5qb2luKFwiXCIpLCBcIn1cIik7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIFwiXCI7XG4gIH1cbn07XG5cbi8qIDo6XG5pbXBvcnQgdHlwZSB7IFNoZWV0RGVmaW5pdGlvbiwgU2hlZXREZWZpbml0aW9ucyB9IGZyb20gJy4vaW5kZXguanMnO1xuaW1wb3J0IHR5cGUgeyBNYXliZVNoZWV0RGVmaW5pdGlvbiB9IGZyb20gJy4vZXhwb3J0cy5qcyc7XG5pbXBvcnQgdHlwZSB7IFNlbGVjdG9ySGFuZGxlciB9IGZyb20gJy4vZ2VuZXJhdGUuanMnO1xuKi9cbi8vIFRoZSBjdXJyZW50IDxzdHlsZT4gdGFnIHdlIGFyZSBpbnNlcnRpbmcgaW50bywgb3IgbnVsbCBpZiB3ZSBoYXZlbid0XG4vLyBpbnNlcnRlZCBhbnl0aGluZyB5ZXQuIFdlIGNvdWxkIGZpbmQgdGhpcyBlYWNoIHRpbWUgdXNpbmdcbi8vIGBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwic3R5bGVbZGF0YS1hcGhyb2RpdGVcIl0pYCwgYnV0IGhvbGRpbmcgb250byBpdCBpc1xuLy8gZmFzdGVyLlxuXG52YXIgc3R5bGVUYWdcbi8qIDogP0hUTUxTdHlsZUVsZW1lbnQgKi9cbj0gbnVsbDsgLy8gSW5qZWN0IGEgc2V0IG9mIHJ1bGVzIGludG8gYSA8c3R5bGU+IHRhZyBpbiB0aGUgaGVhZCBvZiB0aGUgZG9jdW1lbnQuIFRoaXNcbi8vIHdpbGwgYXV0b21hdGljYWxseSBjcmVhdGUgYSBzdHlsZSB0YWcgYW5kIHRoZW4gY29udGludWUgdG8gdXNlIGl0IGZvclxuLy8gbXVsdGlwbGUgaW5qZWN0aW9ucy4gSXQgd2lsbCBhbHNvIHVzZSBhIHN0eWxlIHRhZyB3aXRoIHRoZSBgZGF0YS1hcGhyb2RpdGVgXG4vLyB0YWcgb24gaXQgaWYgdGhhdCBleGlzdHMgaW4gdGhlIERPTS4gVGhpcyBjb3VsZCBiZSB1c2VkIGZvciBlLmcuIHJldXNpbmcgdGhlXG4vLyBzYW1lIHN0eWxlIHRhZyB0aGF0IHNlcnZlci1zaWRlIHJlbmRlcmluZyBpbnNlcnRzLlxuXG52YXIgaW5qZWN0U3R5bGVUYWcgPSBmdW5jdGlvbiBpbmplY3RTdHlsZVRhZyhjc3NSdWxlc1xuLyogOiBzdHJpbmdbXSAqL1xuKSB7XG4gIGlmIChzdHlsZVRhZyA9PSBudWxsKSB7XG4gICAgLy8gVHJ5IHRvIGZpbmQgYSBzdHlsZSB0YWcgd2l0aCB0aGUgYGRhdGEtYXBocm9kaXRlYCBhdHRyaWJ1dGUgZmlyc3QuXG4gICAgc3R5bGVUYWcgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwic3R5bGVbZGF0YS1hcGhyb2RpdGVdXCIpXG4gICAgLyogOiBhbnkgKi9cbiAgICA7IC8vIElmIHRoYXQgZG9lc24ndCB3b3JrLCBnZW5lcmF0ZSBhIG5ldyBzdHlsZSB0YWcuXG5cbiAgICBpZiAoc3R5bGVUYWcgPT0gbnVsbCkge1xuICAgICAgLy8gVGFrZW4gZnJvbVxuICAgICAgLy8gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy81MjQ2OTYvaG93LXRvLWNyZWF0ZS1hLXN0eWxlLXRhZy13aXRoLWphdmFzY3JpcHRcbiAgICAgIHZhciBoZWFkID0gZG9jdW1lbnQuaGVhZCB8fCBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnaGVhZCcpWzBdO1xuICAgICAgc3R5bGVUYWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICAgICAgc3R5bGVUYWcudHlwZSA9ICd0ZXh0L2Nzcyc7XG4gICAgICBzdHlsZVRhZy5zZXRBdHRyaWJ1dGUoXCJkYXRhLWFwaHJvZGl0ZVwiLCBcIlwiKTtcbiAgICAgIGhlYWQuYXBwZW5kQ2hpbGQoc3R5bGVUYWcpO1xuICAgIH1cbiAgfSAvLyAkRmxvd0ZpeE1lXG5cblxuICB2YXIgc2hlZXQgPSBzdHlsZVRhZy5zdHlsZVNoZWV0IHx8IHN0eWxlVGFnLnNoZWV0XG4gIC8qIDogYW55ICovXG4gIDtcblxuICBpZiAoc2hlZXQuaW5zZXJ0UnVsZSkge1xuICAgIHZhciBudW1SdWxlcyA9IHNoZWV0LmNzc1J1bGVzLmxlbmd0aDtcbiAgICBjc3NSdWxlcy5mb3JFYWNoKGZ1bmN0aW9uIChydWxlKSB7XG4gICAgICB0cnkge1xuICAgICAgICBzaGVldC5pbnNlcnRSdWxlKHJ1bGUsIG51bVJ1bGVzKTtcbiAgICAgICAgbnVtUnVsZXMgKz0gMTtcbiAgICAgIH0gY2F0Y2ggKGUpIHsvLyBUaGUgc2VsZWN0b3IgZm9yIHRoaXMgcnVsZSB3YXNuJ3QgY29tcGF0aWJsZSB3aXRoIHRoZSBicm93c2VyXG4gICAgICB9XG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgc3R5bGVUYWcuaW5uZXJUZXh0ID0gKHN0eWxlVGFnLmlubmVyVGV4dCB8fCAnJykgKyBjc3NSdWxlcy5qb2luKCcnKTtcbiAgfVxufTsgLy8gQ3VzdG9tIGhhbmRsZXJzIGZvciBzdHJpbmdpZnlpbmcgQ1NTIHZhbHVlcyB0aGF0IGhhdmUgc2lkZSBlZmZlY3RzXG4vLyAoc3VjaCBhcyBmb250RmFtaWx5LCB3aGljaCBjYW4gY2F1c2UgQGZvbnQtZmFjZSBydWxlcyB0byBiZSBpbmplY3RlZClcblxuXG52YXIgc3RyaW5nSGFuZGxlcnMgPSB7XG4gIC8vIFdpdGggZm9udEZhbWlseSB3ZSBsb29rIGZvciBvYmplY3RzIHRoYXQgYXJlIHBhc3NlZCBpbiBhbmQgaW50ZXJwcmV0XG4gIC8vIHRoZW0gYXMgQGZvbnQtZmFjZSBydWxlcyB0aGF0IHdlIG5lZWQgdG8gaW5qZWN0LiBUaGUgdmFsdWUgb2YgZm9udEZhbWlseVxuICAvLyBjYW4gZWl0aGVyIGJlIGEgc3RyaW5nIChhcyBub3JtYWwpLCBhbiBvYmplY3QgKGEgc2luZ2xlIGZvbnQgZmFjZSksIG9yXG4gIC8vIGFuIGFycmF5IG9mIG9iamVjdHMgYW5kIHN0cmluZ3MuXG4gIGZvbnRGYW1pbHk6IGZ1bmN0aW9uIGZvbnRGYW1pbHkodmFsKSB7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkodmFsKSkge1xuICAgICAgdmFyIG5hbWVNYXAgPSB7fTtcbiAgICAgIHZhbC5mb3JFYWNoKGZ1bmN0aW9uICh2KSB7XG4gICAgICAgIG5hbWVNYXBbZm9udEZhbWlseSh2KV0gPSB0cnVlO1xuICAgICAgfSk7XG4gICAgICByZXR1cm4gT2JqZWN0LmtleXMobmFtZU1hcCkuam9pbihcIixcIik7XG4gICAgfSBlbHNlIGlmIChfdHlwZW9mKHZhbCkgPT09IFwib2JqZWN0XCIpIHtcbiAgICAgIGluamVjdFN0eWxlT25jZSh2YWwuc3JjLCBcIkBmb250LWZhY2VcIiwgW3ZhbF0sIGZhbHNlKTtcbiAgICAgIHJldHVybiBcIlxcXCJcIi5jb25jYXQodmFsLmZvbnRGYW1pbHksIFwiXFxcIlwiKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHZhbDtcbiAgICB9XG4gIH0sXG4gIC8vIFdpdGggYW5pbWF0aW9uTmFtZSB3ZSBsb29rIGZvciBhbiBvYmplY3QgdGhhdCBjb250YWlucyBrZXlmcmFtZXMgYW5kXG4gIC8vIGluamVjdCB0aGVtIGFzIGFuIGBAa2V5ZnJhbWVzYCBibG9jaywgcmV0dXJuaW5nIGEgdW5pcXVlbHkgZ2VuZXJhdGVkXG4gIC8vIG5hbWUuIFRoZSBrZXlmcmFtZXMgb2JqZWN0IHNob3VsZCBsb29rIGxpa2VcbiAgLy8gIGFuaW1hdGlvbk5hbWU6IHtcbiAgLy8gICAgZnJvbToge1xuICAvLyAgICAgIGxlZnQ6IDAsXG4gIC8vICAgICAgdG9wOiAwLFxuICAvLyAgICB9LFxuICAvLyAgICAnNTAlJzoge1xuICAvLyAgICAgIGxlZnQ6IDE1LFxuICAvLyAgICAgIHRvcDogNSxcbiAgLy8gICAgfSxcbiAgLy8gICAgdG86IHtcbiAgLy8gICAgICBsZWZ0OiAyMCxcbiAgLy8gICAgICB0b3A6IDIwLFxuICAvLyAgICB9XG4gIC8vICB9XG4gIC8vIFRPRE8oZW1pbHkpOiBgc3RyaW5nSGFuZGxlcnNgIGRvZXNuJ3QgbGV0IHVzIHJlbmFtZSB0aGUga2V5LCBzbyBJIGhhdmVcbiAgLy8gdG8gdXNlIGBhbmltYXRpb25OYW1lYCBoZXJlLiBJbXByb3ZlIHRoYXQgc28gd2UgY2FuIGNhbGwgdGhpc1xuICAvLyBgYW5pbWF0aW9uYCBpbnN0ZWFkIG9mIGBhbmltYXRpb25OYW1lYC5cbiAgYW5pbWF0aW9uTmFtZTogZnVuY3Rpb24gYW5pbWF0aW9uTmFtZSh2YWwsIHNlbGVjdG9ySGFuZGxlcnMpIHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWwpKSB7XG4gICAgICByZXR1cm4gdmFsLm1hcChmdW5jdGlvbiAodikge1xuICAgICAgICByZXR1cm4gYW5pbWF0aW9uTmFtZSh2LCBzZWxlY3RvckhhbmRsZXJzKTtcbiAgICAgIH0pLmpvaW4oXCIsXCIpO1xuICAgIH0gZWxzZSBpZiAoX3R5cGVvZih2YWwpID09PSBcIm9iamVjdFwiKSB7XG4gICAgICAvLyBHZW5lcmF0ZSBhIHVuaXF1ZSBuYW1lIGJhc2VkIG9uIHRoZSBoYXNoIG9mIHRoZSBvYmplY3QuIFdlIGNhbid0XG4gICAgICAvLyBqdXN0IHVzZSB0aGUgaGFzaCBiZWNhdXNlIHRoZSBuYW1lIGNhbid0IHN0YXJ0IHdpdGggYSBudW1iZXIuXG4gICAgICAvLyBUT0RPKGVtaWx5KTogdGhpcyBwcm9iYWJseSBtYWtlcyBkZWJ1Z2dpbmcgaGFyZCwgYWxsb3cgYSBjdXN0b21cbiAgICAgIC8vIG5hbWU/XG4gICAgICB2YXIgbmFtZSA9IFwia2V5ZnJhbWVfXCIuY29uY2F0KGhhc2hPYmplY3QodmFsKSk7IC8vIFNpbmNlIGtleWZyYW1lcyBuZWVkIDMgbGF5ZXJzIG9mIG5lc3RpbmcsIHdlIHVzZSBgZ2VuZXJhdGVDU1NgIHRvXG4gICAgICAvLyBidWlsZCB0aGUgaW5uZXIgbGF5ZXJzIGFuZCB3cmFwIGl0IGluIGBAa2V5ZnJhbWVzYCBvdXJzZWx2ZXMuXG5cbiAgICAgIHZhciBmaW5hbFZhbCA9IFwiQGtleWZyYW1lcyBcIi5jb25jYXQobmFtZSwgXCJ7XCIpOyAvLyBUT0RPIHNlZSBpZiB3ZSBjYW4gZmluZCBhIHdheSB3aGVyZSBjaGVja2luZyBmb3IgT3JkZXJlZEVsZW1lbnRzXG4gICAgICAvLyBoZXJlIGlzIG5vdCBuZWNlc3NhcnkuIEFsdGVybmF0aXZlbHksIHBlcmhhcHMgd2Ugc2hvdWxkIGhhdmUgYVxuICAgICAgLy8gdXRpbGl0eSBtZXRob2QgdGhhdCBjYW4gaXRlcmF0ZSBvdmVyIGVpdGhlciBhIHBsYWluIG9iamVjdCwgYW5cbiAgICAgIC8vIGluc3RhbmNlIG9mIE9yZGVyZWRFbGVtZW50cywgb3IgYSBNYXAsIGFuZCB0aGVuIHVzZSB0aGF0IGhlcmUgYW5kXG4gICAgICAvLyBlbHNld2hlcmUuXG5cbiAgICAgIGlmICh2YWwgaW5zdGFuY2VvZiBPcmRlcmVkRWxlbWVudHMpIHtcbiAgICAgICAgdmFsLmZvckVhY2goZnVuY3Rpb24gKHZhbFZhbCwgdmFsS2V5KSB7XG4gICAgICAgICAgZmluYWxWYWwgKz0gZ2VuZXJhdGVDU1ModmFsS2V5LCBbdmFsVmFsXSwgc2VsZWN0b3JIYW5kbGVycywgc3RyaW5nSGFuZGxlcnMsIGZhbHNlKS5qb2luKCcnKTtcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBPYmplY3Qua2V5cyh2YWwpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgICAgIGZpbmFsVmFsICs9IGdlbmVyYXRlQ1NTKGtleSwgW3ZhbFtrZXldXSwgc2VsZWN0b3JIYW5kbGVycywgc3RyaW5nSGFuZGxlcnMsIGZhbHNlKS5qb2luKCcnKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIGZpbmFsVmFsICs9ICd9JztcbiAgICAgIGluamVjdEdlbmVyYXRlZENTU09uY2UobmFtZSwgW2ZpbmFsVmFsXSk7XG4gICAgICByZXR1cm4gbmFtZTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHZhbDtcbiAgICB9XG4gIH1cbn07IC8vIFRoaXMgaXMgYSBtYXAgZnJvbSBBcGhyb2RpdGUncyBnZW5lcmF0ZWQgY2xhc3MgbmFtZXMgdG8gYHRydWVgIChhY3RpbmcgYXMgYVxuLy8gc2V0IG9mIGNsYXNzIG5hbWVzKVxuXG52YXIgYWxyZWFkeUluamVjdGVkID0ge307IC8vIFRoaXMgaXMgdGhlIGJ1ZmZlciBvZiBzdHlsZXMgd2hpY2ggaGF2ZSBub3QgeWV0IGJlZW4gZmx1c2hlZC5cblxudmFyIGluamVjdGlvbkJ1ZmZlclxuLyogOiBzdHJpbmdbXSAqL1xuPSBbXTsgLy8gQSBmbGFnIHRvIHRlbGwgaWYgd2UgYXJlIGFscmVhZHkgYnVmZmVyaW5nIHN0eWxlcy4gVGhpcyBjb3VsZCBoYXBwZW4gZWl0aGVyXG4vLyBiZWNhdXNlIHdlIHNjaGVkdWxlZCBhIGZsdXNoIGNhbGwgYWxyZWFkeSwgc28gbmV3bHkgYWRkZWQgc3R5bGVzIHdpbGxcbi8vIGFscmVhZHkgYmUgZmx1c2hlZCwgb3IgYmVjYXVzZSB3ZSBhcmUgc3RhdGljYWxseSBidWZmZXJpbmcgb24gdGhlIHNlcnZlci5cblxudmFyIGlzQnVmZmVyaW5nID0gZmFsc2U7XG5cbnZhciBpbmplY3RHZW5lcmF0ZWRDU1NPbmNlID0gZnVuY3Rpb24gaW5qZWN0R2VuZXJhdGVkQ1NTT25jZShrZXksIGdlbmVyYXRlZENTUykge1xuICB2YXIgX2luamVjdGlvbkJ1ZmZlcjtcblxuICBpZiAoYWxyZWFkeUluamVjdGVkW2tleV0pIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAoIWlzQnVmZmVyaW5nKSB7XG4gICAgLy8gV2Ugc2hvdWxkIG5ldmVyIGJlIGF1dG9tYXRpY2FsbHkgYnVmZmVyaW5nIG9uIHRoZSBzZXJ2ZXIgKG9yIGFueVxuICAgIC8vIHBsYWNlIHdpdGhvdXQgYSBkb2N1bWVudCksIHNvIGd1YXJkIGFnYWluc3QgdGhhdC5cbiAgICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgYXV0b21hdGljYWxseSBidWZmZXIgd2l0aG91dCBhIGRvY3VtZW50XCIpO1xuICAgIH0gLy8gSWYgd2UncmUgbm90IGFscmVhZHkgYnVmZmVyaW5nLCBzY2hlZHVsZSBhIGNhbGwgdG8gZmx1c2ggdGhlXG4gICAgLy8gY3VycmVudCBzdHlsZXMuXG5cblxuICAgIGlzQnVmZmVyaW5nID0gdHJ1ZTtcbiAgICBhc2FwKGZsdXNoVG9TdHlsZVRhZyk7XG4gIH1cblxuICAoX2luamVjdGlvbkJ1ZmZlciA9IGluamVjdGlvbkJ1ZmZlcikucHVzaC5hcHBseShfaW5qZWN0aW9uQnVmZmVyLCBfdG9Db25zdW1hYmxlQXJyYXkoZ2VuZXJhdGVkQ1NTKSk7XG5cbiAgYWxyZWFkeUluamVjdGVkW2tleV0gPSB0cnVlO1xufTtcblxudmFyIGluamVjdFN0eWxlT25jZSA9IGZ1bmN0aW9uIGluamVjdFN0eWxlT25jZShrZXlcbi8qIDogc3RyaW5nICovXG4sIHNlbGVjdG9yXG4vKiA6IHN0cmluZyAqL1xuLCBkZWZpbml0aW9uc1xuLyogOiBTaGVldERlZmluaXRpb25bXSAqL1xuLCB1c2VJbXBvcnRhbnRcbi8qIDogYm9vbGVhbiAqL1xuKSB7XG4gIHZhciBzZWxlY3RvckhhbmRsZXJzXG4gIC8qIDogU2VsZWN0b3JIYW5kbGVyW10gKi9cbiAgPSBhcmd1bWVudHMubGVuZ3RoID4gNCAmJiBhcmd1bWVudHNbNF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1s0XSA6IFtdO1xuXG4gIGlmIChhbHJlYWR5SW5qZWN0ZWRba2V5XSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHZhciBnZW5lcmF0ZWQgPSBnZW5lcmF0ZUNTUyhzZWxlY3RvciwgZGVmaW5pdGlvbnMsIHNlbGVjdG9ySGFuZGxlcnMsIHN0cmluZ0hhbmRsZXJzLCB1c2VJbXBvcnRhbnQpO1xuICBpbmplY3RHZW5lcmF0ZWRDU1NPbmNlKGtleSwgZ2VuZXJhdGVkKTtcbn07XG52YXIgcmVzZXQgPSBmdW5jdGlvbiByZXNldCgpIHtcbiAgaW5qZWN0aW9uQnVmZmVyID0gW107XG4gIGFscmVhZHlJbmplY3RlZCA9IHt9O1xuICBpc0J1ZmZlcmluZyA9IGZhbHNlO1xuICBzdHlsZVRhZyA9IG51bGw7XG59O1xudmFyIHJlc2V0SW5qZWN0ZWRTdHlsZSA9IGZ1bmN0aW9uIHJlc2V0SW5qZWN0ZWRTdHlsZShrZXlcbi8qIDogc3RyaW5nICovXG4pIHtcbiAgZGVsZXRlIGFscmVhZHlJbmplY3RlZFtrZXldO1xufTtcbnZhciBnZXRCdWZmZXJlZFN0eWxlcyA9IGZ1bmN0aW9uIGdldEJ1ZmZlcmVkU3R5bGVzKCkge1xuICByZXR1cm4gaW5qZWN0aW9uQnVmZmVyO1xufTtcbnZhciBzdGFydEJ1ZmZlcmluZyA9IGZ1bmN0aW9uIHN0YXJ0QnVmZmVyaW5nKCkge1xuICBpZiAoaXNCdWZmZXJpbmcpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgYnVmZmVyIHdoaWxlIGFscmVhZHkgYnVmZmVyaW5nXCIpO1xuICB9XG5cbiAgaXNCdWZmZXJpbmcgPSB0cnVlO1xufTtcblxudmFyIGZsdXNoVG9BcnJheSA9IGZ1bmN0aW9uIGZsdXNoVG9BcnJheSgpIHtcbiAgaXNCdWZmZXJpbmcgPSBmYWxzZTtcbiAgdmFyIHJldCA9IGluamVjdGlvbkJ1ZmZlcjtcbiAgaW5qZWN0aW9uQnVmZmVyID0gW107XG4gIHJldHVybiByZXQ7XG59O1xuXG52YXIgZmx1c2hUb1N0cmluZyA9IGZ1bmN0aW9uIGZsdXNoVG9TdHJpbmcoKSB7XG4gIHJldHVybiBmbHVzaFRvQXJyYXkoKS5qb2luKCcnKTtcbn07XG52YXIgZmx1c2hUb1N0eWxlVGFnID0gZnVuY3Rpb24gZmx1c2hUb1N0eWxlVGFnKCkge1xuICB2YXIgY3NzUnVsZXMgPSBmbHVzaFRvQXJyYXkoKTtcblxuICBpZiAoY3NzUnVsZXMubGVuZ3RoID4gMCkge1xuICAgIGluamVjdFN0eWxlVGFnKGNzc1J1bGVzKTtcbiAgfVxufTtcbnZhciBnZXRSZW5kZXJlZENsYXNzTmFtZXMgPSBmdW5jdGlvbiBnZXRSZW5kZXJlZENsYXNzTmFtZXMoKVxuLyogOiBzdHJpbmdbXSAqL1xue1xuICByZXR1cm4gT2JqZWN0LmtleXMoYWxyZWFkeUluamVjdGVkKTtcbn07XG52YXIgYWRkUmVuZGVyZWRDbGFzc05hbWVzID0gZnVuY3Rpb24gYWRkUmVuZGVyZWRDbGFzc05hbWVzKGNsYXNzTmFtZXNcbi8qIDogc3RyaW5nW10gKi9cbikge1xuICBjbGFzc05hbWVzLmZvckVhY2goZnVuY3Rpb24gKGNsYXNzTmFtZSkge1xuICAgIGFscmVhZHlJbmplY3RlZFtjbGFzc05hbWVdID0gdHJ1ZTtcbiAgfSk7XG59O1xuXG52YXIgaXNWYWxpZFN0eWxlRGVmaW5pdGlvbiA9IGZ1bmN0aW9uIGlzVmFsaWRTdHlsZURlZmluaXRpb24oZGVmXG4vKiA6IE9iamVjdCAqL1xuKSB7XG4gIHJldHVybiBcIl9kZWZpbml0aW9uXCIgaW4gZGVmICYmIFwiX25hbWVcIiBpbiBkZWYgJiYgXCJfbGVuXCIgaW4gZGVmO1xufTtcblxudmFyIHByb2Nlc3NTdHlsZURlZmluaXRpb25zID0gZnVuY3Rpb24gcHJvY2Vzc1N0eWxlRGVmaW5pdGlvbnMoc3R5bGVEZWZpbml0aW9uc1xuLyogOiBhbnlbXSAqL1xuLCBjbGFzc05hbWVCaXRzXG4vKiA6IHN0cmluZ1tdICovXG4sIGRlZmluaXRpb25CaXRzXG4vKiA6IE9iamVjdFtdICovXG4sIGxlbmd0aFxuLyogOiBudW1iZXIgKi9cbilcbi8qIDogbnVtYmVyICovXG57XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVEZWZpbml0aW9ucy5sZW5ndGg7IGkgKz0gMSkge1xuICAgIC8vIEZpbHRlciBvdXQgZmFsc3kgdmFsdWVzIGZyb20gdGhlIGlucHV0LCB0byBhbGxvdyBmb3JcbiAgICAvLyBgY3NzKGEsIHRlc3QgJiYgYylgXG4gICAgaWYgKHN0eWxlRGVmaW5pdGlvbnNbaV0pIHtcbiAgICAgIGlmIChBcnJheS5pc0FycmF5KHN0eWxlRGVmaW5pdGlvbnNbaV0pKSB7XG4gICAgICAgIC8vIFdlJ3ZlIGVuY291bnRlcmVkIGFuIGFycmF5LCBzbyBsZXQncyByZWN1cnNlXG4gICAgICAgIGxlbmd0aCArPSBwcm9jZXNzU3R5bGVEZWZpbml0aW9ucyhzdHlsZURlZmluaXRpb25zW2ldLCBjbGFzc05hbWVCaXRzLCBkZWZpbml0aW9uQml0cywgbGVuZ3RoKTtcbiAgICAgIH0gZWxzZSBpZiAoaXNWYWxpZFN0eWxlRGVmaW5pdGlvbihzdHlsZURlZmluaXRpb25zW2ldKSkge1xuICAgICAgICBjbGFzc05hbWVCaXRzLnB1c2goc3R5bGVEZWZpbml0aW9uc1tpXS5fbmFtZSk7XG4gICAgICAgIGRlZmluaXRpb25CaXRzLnB1c2goc3R5bGVEZWZpbml0aW9uc1tpXS5fZGVmaW5pdGlvbik7XG4gICAgICAgIGxlbmd0aCArPSBzdHlsZURlZmluaXRpb25zW2ldLl9sZW47XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIFN0eWxlIERlZmluaXRpb246IFN0eWxlcyBzaG91bGQgYmUgZGVmaW5lZCB1c2luZyB0aGUgU3R5bGVTaGVldC5jcmVhdGUgbWV0aG9kLlwiKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gbGVuZ3RoO1xufTtcbi8qKlxuICogSW5qZWN0IHN0eWxlcyBhc3NvY2lhdGVkIHdpdGggdGhlIHBhc3NlZCBzdHlsZSBkZWZpbml0aW9uIG9iamVjdHMsIGFuZCByZXR1cm5cbiAqIGFuIGFzc29jaWF0ZWQgQ1NTIGNsYXNzIG5hbWUuXG4gKlxuICogQHBhcmFtIHtib29sZWFufSB1c2VJbXBvcnRhbnQgSWYgdHJ1ZSwgd2lsbCBhcHBlbmQgIWltcG9ydGFudCB0byBnZW5lcmF0ZWRcbiAqICAgICBDU1Mgb3V0cHV0LiBlLmcuIHtjb2xvcjogcmVkfSAtPiBcImNvbG9yOiByZWQgIWltcG9ydGFudFwiLlxuICogQHBhcmFtIHsoT2JqZWN0fE9iamVjdFtdKVtdfSBzdHlsZURlZmluaXRpb25zIHN0eWxlIGRlZmluaXRpb24gb2JqZWN0cywgb3JcbiAqICAgICBhcmJpdHJhcmlseSBuZXN0ZWQgYXJyYXlzIG9mIHRoZW0sIGFzIHJldHVybmVkIGFzIHByb3BlcnRpZXMgb2YgdGhlXG4gKiAgICAgcmV0dXJuIHZhbHVlIG9mIFN0eWxlU2hlZXQuY3JlYXRlKCkuXG4gKi9cblxuXG52YXIgaW5qZWN0QW5kR2V0Q2xhc3NOYW1lID0gZnVuY3Rpb24gaW5qZWN0QW5kR2V0Q2xhc3NOYW1lKHVzZUltcG9ydGFudFxuLyogOiBib29sZWFuICovXG4sIHN0eWxlRGVmaW5pdGlvbnNcbi8qIDogTWF5YmVTaGVldERlZmluaXRpb25bXSAqL1xuLCBzZWxlY3RvckhhbmRsZXJzXG4vKiA6IFNlbGVjdG9ySGFuZGxlcltdICovXG4pXG4vKiA6IHN0cmluZyAqL1xue1xuICB2YXIgY2xhc3NOYW1lQml0cyA9IFtdO1xuICB2YXIgZGVmaW5pdGlvbkJpdHMgPSBbXTsgLy8gTXV0YXRlcyBjbGFzc05hbWVCaXRzIGFuZCBkZWZpbml0aW9uQml0cyBhbmQgcmV0dXJucyBhIGxlbmd0aCB3aGljaCB3ZVxuICAvLyB3aWxsIGFwcGVuZCB0byB0aGUgaGFzaCB0byBkZWNyZWFzZSB0aGUgY2hhbmNlIG9mIGhhc2ggY29sbGlzaW9ucy5cblxuICB2YXIgbGVuZ3RoID0gcHJvY2Vzc1N0eWxlRGVmaW5pdGlvbnMoc3R5bGVEZWZpbml0aW9ucywgY2xhc3NOYW1lQml0cywgZGVmaW5pdGlvbkJpdHMsIDApOyAvLyBCcmVhayBpZiB0aGVyZSBhcmVuJ3QgYW55IHZhbGlkIHN0eWxlcy5cblxuICBpZiAoY2xhc3NOYW1lQml0cy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gXCJcIjtcbiAgfVxuXG4gIHZhciBjbGFzc05hbWU7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgICBjbGFzc05hbWUgPSBjbGFzc05hbWVCaXRzLmxlbmd0aCA9PT0gMSA/IFwiX1wiLmNvbmNhdChjbGFzc05hbWVCaXRzWzBdKSA6IFwiX1wiLmNvbmNhdChoYXNoU3RyaW5nKGNsYXNzTmFtZUJpdHMuam9pbigpKSkuY29uY2F0KChsZW5ndGggJSAzNikudG9TdHJpbmcoMzYpKTtcbiAgfSBlbHNlIHtcbiAgICBjbGFzc05hbWUgPSBjbGFzc05hbWVCaXRzLmpvaW4oXCItb19PLVwiKTtcbiAgfVxuXG4gIGluamVjdFN0eWxlT25jZShjbGFzc05hbWUsIFwiLlwiLmNvbmNhdChjbGFzc05hbWUpLCBkZWZpbml0aW9uQml0cywgdXNlSW1wb3J0YW50LCBzZWxlY3RvckhhbmRsZXJzKTtcbiAgcmV0dXJuIGNsYXNzTmFtZTtcbn07XG5cbi8qIDo6XG5pbXBvcnQgdHlwZSB7IFNlbGVjdG9ySGFuZGxlciB9IGZyb20gJy4vZ2VuZXJhdGUuanMnO1xuZXhwb3J0IHR5cGUgU2hlZXREZWZpbml0aW9uID0geyBbaWQ6c3RyaW5nXTogYW55IH07XG5leHBvcnQgdHlwZSBTaGVldERlZmluaXRpb25zID0gU2hlZXREZWZpbml0aW9uIHwgU2hlZXREZWZpbml0aW9uW107XG50eXBlIFJlbmRlckZ1bmN0aW9uID0gKCkgPT4gc3RyaW5nO1xudHlwZSBFeHRlbnNpb24gPSB7XG4gICAgc2VsZWN0b3JIYW5kbGVyOiBTZWxlY3RvckhhbmRsZXJcbn07XG5leHBvcnQgdHlwZSBNYXliZVNoZWV0RGVmaW5pdGlvbiA9IFNoZWV0RGVmaW5pdGlvbiB8IGZhbHNlIHwgbnVsbCB8IHZvaWRcbiovXG5cbnZhciB1bm1pbmlmaWVkSGFzaEZuID0gZnVuY3Rpb24gdW5taW5pZmllZEhhc2hGbihzdHJcbi8qIDogc3RyaW5nICovXG4sIGtleVxuLyogOiBzdHJpbmcgKi9cbikge1xuICByZXR1cm4gXCJcIi5jb25jYXQoa2V5LCBcIl9cIikuY29uY2F0KGhhc2hTdHJpbmcoc3RyKSk7XG59OyAvLyBTdHlsZVNoZWV0LmNyZWF0ZSBpcyBpbiBhIGhvdCBwYXRoIHNvIHdlIHdhbnQgdG8ga2VlcCBhcyBtdWNoIGxvZ2ljIG91dCBvZiBpdFxuLy8gYXMgcG9zc2libGUuIFNvLCB3ZSBmaWd1cmUgb3V0IHdoaWNoIGhhc2ggZnVuY3Rpb24gdG8gdXNlIG9uY2UsIGFuZCBvbmx5XG4vLyBzd2l0Y2ggaXQgb3V0IHZpYSBtaW5pZnkoKSBhcyBuZWNlc3NhcnkuXG4vL1xuLy8gVGhpcyBpcyBpbiBhbiBleHBvcnRlZCBmdW5jdGlvbiB0byBtYWtlIGl0IGVhc2llciB0byB0ZXN0LlxuXG5cbnZhciBpbml0aWFsSGFzaEZuID0gZnVuY3Rpb24gaW5pdGlhbEhhc2hGbigpIHtcbiAgcmV0dXJuIHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicgPyBoYXNoU3RyaW5nIDogdW5taW5pZmllZEhhc2hGbjtcbn07XG52YXIgaGFzaEZuID0gaW5pdGlhbEhhc2hGbigpO1xudmFyIFN0eWxlU2hlZXQgPSB7XG4gIGNyZWF0ZTogZnVuY3Rpb24gY3JlYXRlKHNoZWV0RGVmaW5pdGlvblxuICAvKiA6IFNoZWV0RGVmaW5pdGlvbiAqL1xuICApXG4gIC8qIDogT2JqZWN0ICovXG4gIHtcbiAgICB2YXIgbWFwcGVkU2hlZXREZWZpbml0aW9uID0ge307XG4gICAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhzaGVldERlZmluaXRpb24pO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICB2YXIga2V5ID0ga2V5c1tpXTtcbiAgICAgIHZhciB2YWwgPSBzaGVldERlZmluaXRpb25ba2V5XTtcbiAgICAgIHZhciBzdHJpbmdWYWwgPSBKU09OLnN0cmluZ2lmeSh2YWwpO1xuICAgICAgbWFwcGVkU2hlZXREZWZpbml0aW9uW2tleV0gPSB7XG4gICAgICAgIF9sZW46IHN0cmluZ1ZhbC5sZW5ndGgsXG4gICAgICAgIF9uYW1lOiBoYXNoRm4oc3RyaW5nVmFsLCBrZXkpLFxuICAgICAgICBfZGVmaW5pdGlvbjogdmFsXG4gICAgICB9O1xuICAgIH1cblxuICAgIHJldHVybiBtYXBwZWRTaGVldERlZmluaXRpb247XG4gIH0sXG4gIHJlaHlkcmF0ZTogZnVuY3Rpb24gcmVoeWRyYXRlKCkge1xuICAgIHZhciByZW5kZXJlZENsYXNzTmFtZXNcbiAgICAvKiA6IHN0cmluZ1tdICovXG4gICAgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IFtdO1xuICAgIGFkZFJlbmRlcmVkQ2xhc3NOYW1lcyhyZW5kZXJlZENsYXNzTmFtZXMpO1xuICB9XG59O1xuLyoqXG4gKiBVdGlsaXRpZXMgZm9yIHVzaW5nIEFwaHJvZGl0ZSBzZXJ2ZXItc2lkZS5cbiAqXG4gKiBUaGlzIGNhbiBiZSBtaW5pZmllZCBvdXQgaW4gY2xpZW50LW9ubHkgYnVuZGxlcyBieSByZXBsYWNpbmcgYHR5cGVvZiB3aW5kb3dgXG4gKiB3aXRoIGBcIm9iamVjdFwiYCwgZS5nLiB2aWEgV2VicGFjaydzIERlZmluZVBsdWdpbjpcbiAqXG4gKiAgIG5ldyB3ZWJwYWNrLkRlZmluZVBsdWdpbih7XG4gKiAgICAgXCJ0eXBlb2Ygd2luZG93XCI6IEpTT04uc3RyaW5naWZ5KFwib2JqZWN0XCIpXG4gKiAgIH0pXG4gKi9cblxudmFyIFN0eWxlU2hlZXRTZXJ2ZXIgPSB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyA/IG51bGwgOiB7XG4gIHJlbmRlclN0YXRpYzogZnVuY3Rpb24gcmVuZGVyU3RhdGljKHJlbmRlckZ1bmNcbiAgLyogOiBSZW5kZXJGdW5jdGlvbiAqL1xuICApIHtcbiAgICByZXNldCgpO1xuICAgIHN0YXJ0QnVmZmVyaW5nKCk7XG4gICAgdmFyIGh0bWwgPSByZW5kZXJGdW5jKCk7XG4gICAgdmFyIGNzc0NvbnRlbnQgPSBmbHVzaFRvU3RyaW5nKCk7XG4gICAgcmV0dXJuIHtcbiAgICAgIGh0bWw6IGh0bWwsXG4gICAgICBjc3M6IHtcbiAgICAgICAgY29udGVudDogY3NzQ29udGVudCxcbiAgICAgICAgcmVuZGVyZWRDbGFzc05hbWVzOiBnZXRSZW5kZXJlZENsYXNzTmFtZXMoKVxuICAgICAgfVxuICAgIH07XG4gIH1cbn07XG4vKipcbiAqIFV0aWxpdGllcyBmb3IgdXNpbmcgQXBocm9kaXRlIGluIHRlc3RzLlxuICpcbiAqIE5vdCBtZWFudCB0byBiZSB1c2VkIGluIHByb2R1Y3Rpb24uXG4gKi9cblxudmFyIFN0eWxlU2hlZXRUZXN0VXRpbHMgPSBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nID8gbnVsbCA6IHtcbiAgLyoqXG4gICogUHJldmVudCBzdHlsZXMgZnJvbSBiZWluZyBpbmplY3RlZCBpbnRvIHRoZSBET00uXG4gICpcbiAgKiBUaGlzIGlzIHVzZWZ1bCBpbiBzaXR1YXRpb25zIHdoZXJlIHlvdSdkIGxpa2UgdG8gdGVzdCByZW5kZXJpbmcgVUlcbiAgKiBjb21wb25lbnRzIHdoaWNoIHVzZSBBcGhyb2RpdGUgd2l0aG91dCBhbnkgb2YgdGhlIHNpZGUtZWZmZWN0cyBvZlxuICAqIEFwaHJvZGl0ZSBoYXBwZW5pbmcuIFBhcnRpY3VsYXJseSB1c2VmdWwgZm9yIHRlc3RpbmcgdGhlIG91dHB1dCBvZlxuICAqIGNvbXBvbmVudHMgd2hlbiB5b3UgaGF2ZSBubyBET00sIGUuZy4gdGVzdGluZyBpbiBOb2RlIHdpdGhvdXQgYSBmYWtlIERPTS5cbiAgKlxuICAqIFNob3VsZCBiZSBwYWlyZWQgd2l0aCBhIHN1YnNlcXVlbnQgY2FsbCB0b1xuICAqIGNsZWFyQnVmZmVyQW5kUmVzdW1lU3R5bGVJbmplY3Rpb24uXG4gICovXG4gIHN1cHByZXNzU3R5bGVJbmplY3Rpb246IGZ1bmN0aW9uIHN1cHByZXNzU3R5bGVJbmplY3Rpb24oKSB7XG4gICAgcmVzZXQoKTtcbiAgICBzdGFydEJ1ZmZlcmluZygpO1xuICB9LFxuXG4gIC8qKlxuICAqIE9wcG9zaXRlIG1ldGhvZCBvZiBwcmV2ZW50U3R5bGVJbmplY3QuXG4gICovXG4gIGNsZWFyQnVmZmVyQW5kUmVzdW1lU3R5bGVJbmplY3Rpb246IGZ1bmN0aW9uIGNsZWFyQnVmZmVyQW5kUmVzdW1lU3R5bGVJbmplY3Rpb24oKSB7XG4gICAgcmVzZXQoKTtcbiAgfSxcblxuICAvKipcbiAgKiBSZXR1cm5zIGEgc3RyaW5nIG9mIGJ1ZmZlcmVkIHN0eWxlcyB3aGljaCBoYXZlIG5vdCBiZWVuIGZsdXNoZWRcbiAgKlxuICAqIEByZXR1cm5zIHtzdHJpbmd9ICBCdWZmZXIgb2Ygc3R5bGVzIHdoaWNoIGhhdmUgbm90IHlldCBiZWVuIGZsdXNoZWQuXG4gICovXG4gIGdldEJ1ZmZlcmVkU3R5bGVzOiBmdW5jdGlvbiBnZXRCdWZmZXJlZFN0eWxlcyQxKCkge1xuICAgIHJldHVybiBnZXRCdWZmZXJlZFN0eWxlcygpO1xuICB9XG59O1xuLyoqXG4gKiBHZW5lcmF0ZSB0aGUgQXBocm9kaXRlIEFQSSBleHBvcnRzLCB3aXRoIGdpdmVuIGBzZWxlY3RvckhhbmRsZXJzYCBhbmRcbiAqIGB1c2VJbXBvcnRhbnRgIHN0YXRlLlxuICovXG5cbmZ1bmN0aW9uIG1ha2VFeHBvcnRzKHVzZUltcG9ydGFudFxuLyogOiBib29sZWFuICovXG4pIHtcbiAgdmFyIHNlbGVjdG9ySGFuZGxlcnNcbiAgLyogOiBTZWxlY3RvckhhbmRsZXJbXSAqL1xuICA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogZGVmYXVsdFNlbGVjdG9ySGFuZGxlcnM7XG4gIHJldHVybiB7XG4gICAgU3R5bGVTaGVldDogX29iamVjdFNwcmVhZCh7fSwgU3R5bGVTaGVldCwge1xuICAgICAgLyoqXG4gICAgICAgKiBSZXR1cm5zIGEgdmVyc2lvbiBvZiB0aGUgZXhwb3J0cyBvZiBBcGhyb2RpdGUgKGkuZS4gYW4gb2JqZWN0XG4gICAgICAgKiB3aXRoIGBjc3NgIGFuZCBgU3R5bGVTaGVldGAgcHJvcGVydGllcykgd2hpY2ggaGF2ZSBzb21lXG4gICAgICAgKiBleHRlbnNpb25zIGluY2x1ZGVkLlxuICAgICAgICpcbiAgICAgICAqIEBwYXJhbSB7QXJyYXkuPE9iamVjdD59IGV4dGVuc2lvbnM6IEFuIGFycmF5IG9mIGV4dGVuc2lvbnMgdG9cbiAgICAgICAqICAgICBhZGQgdG8gdGhpcyBpbnN0YW5jZSBvZiBBcGhyb2RpdGUuIEVhY2ggb2JqZWN0IHNob3VsZCBoYXZlIGFcbiAgICAgICAqICAgICBzaW5nbGUgcHJvcGVydHkgb24gaXQsIGRlZmluaW5nIHdoaWNoIGtpbmQgb2YgZXh0ZW5zaW9uIHRvXG4gICAgICAgKiAgICAgYWRkLlxuICAgICAgICogQHBhcmFtIHtTZWxlY3RvckhhbmRsZXJ9IFtleHRlbnNpb25zW10uc2VsZWN0b3JIYW5kbGVyXTogQVxuICAgICAgICogICAgIHNlbGVjdG9yIGhhbmRsZXIgZXh0ZW5zaW9uLiBTZWUgYGRlZmF1bHRTZWxlY3RvckhhbmRsZXJzYCBpblxuICAgICAgICogICAgIGdlbmVyYXRlLmpzLlxuICAgICAgICpcbiAgICAgICAqIEByZXR1cm5zIHtPYmplY3R9IEFuIG9iamVjdCBjb250YWluaW5nIHRoZSBleHBvcnRzIG9mIHRoZSBuZXdcbiAgICAgICAqICAgICBpbnN0YW5jZSBvZiBBcGhyb2RpdGUuXG4gICAgICAgKi9cbiAgICAgIGV4dGVuZDogZnVuY3Rpb24gZXh0ZW5kKGV4dGVuc2lvbnNcbiAgICAgIC8qIDogRXh0ZW5zaW9uW10gKi9cbiAgICAgICkge1xuICAgICAgICB2YXIgZXh0ZW5zaW9uU2VsZWN0b3JIYW5kbGVycyA9IGV4dGVuc2lvbnMgLy8gUHVsbCBvdXQgZXh0ZW5zaW9ucyB3aXRoIGEgc2VsZWN0b3JIYW5kbGVyIHByb3BlcnR5XG4gICAgICAgIC5tYXAoZnVuY3Rpb24gKGV4dGVuc2lvbikge1xuICAgICAgICAgIHJldHVybiBleHRlbnNpb24uc2VsZWN0b3JIYW5kbGVyO1xuICAgICAgICB9KSAvLyBSZW1vdmUgbnVsbHMgKGkuZS4gZXh0ZW5zaW9ucyB3aXRob3V0IGEgc2VsZWN0b3JIYW5kbGVyIHByb3BlcnR5KS5cbiAgICAgICAgLmZpbHRlcihmdW5jdGlvbiAoaGFuZGxlcikge1xuICAgICAgICAgIHJldHVybiBoYW5kbGVyO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIG1ha2VFeHBvcnRzKHVzZUltcG9ydGFudCwgc2VsZWN0b3JIYW5kbGVycy5jb25jYXQoZXh0ZW5zaW9uU2VsZWN0b3JIYW5kbGVycykpO1xuICAgICAgfVxuICAgIH0pLFxuICAgIFN0eWxlU2hlZXRTZXJ2ZXI6IFN0eWxlU2hlZXRTZXJ2ZXIsXG4gICAgU3R5bGVTaGVldFRlc3RVdGlsczogU3R5bGVTaGVldFRlc3RVdGlscyxcbiAgICBtaW5pZnk6IGZ1bmN0aW9uIG1pbmlmeShzaG91bGRNaW5pZnlcbiAgICAvKiA6IGJvb2xlYW4gKi9cbiAgICApIHtcbiAgICAgIGhhc2hGbiA9IHNob3VsZE1pbmlmeSA/IGhhc2hTdHJpbmcgOiB1bm1pbmlmaWVkSGFzaEZuO1xuICAgIH0sXG4gICAgY3NzOiBmdW5jdGlvbiBjc3MoKVxuICAgIC8qIDogTWF5YmVTaGVldERlZmluaXRpb25bXSAqL1xuICAgIHtcbiAgICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBzdHlsZURlZmluaXRpb25zID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgICBzdHlsZURlZmluaXRpb25zW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gaW5qZWN0QW5kR2V0Q2xhc3NOYW1lKHVzZUltcG9ydGFudCwgc3R5bGVEZWZpbml0aW9ucywgc2VsZWN0b3JIYW5kbGVycyk7XG4gICAgfSxcbiAgICBmbHVzaFRvU3R5bGVUYWc6IGZsdXNoVG9TdHlsZVRhZyxcbiAgICBpbmplY3RBbmRHZXRDbGFzc05hbWU6IGluamVjdEFuZEdldENsYXNzTmFtZSxcbiAgICBkZWZhdWx0U2VsZWN0b3JIYW5kbGVyczogZGVmYXVsdFNlbGVjdG9ySGFuZGxlcnMsXG4gICAgcmVzZXQ6IHJlc2V0LFxuICAgIHJlc2V0SW5qZWN0ZWRTdHlsZTogcmVzZXRJbmplY3RlZFN0eWxlXG4gIH07XG59XG5cbmV4cG9ydCB7IG1ha2VFeHBvcnRzIGFzIGEgfTtcbiIsImltcG9ydCB7IGEgYXMgbWFrZUV4cG9ydHMgfSBmcm9tICcuL2NodW5rLWZlYmNlNDZiLmpzJztcbmltcG9ydCAnc3RyaW5nLWhhc2gnO1xuaW1wb3J0ICdhc2FwJztcblxudmFyIHVzZUltcG9ydGFudCA9IHRydWU7IC8vIEFkZCAhaW1wb3J0YW50IHRvIGFsbCBzdHlsZSBkZWZpbml0aW9uc1xuXG52YXIgQXBocm9kaXRlID0gbWFrZUV4cG9ydHModXNlSW1wb3J0YW50KTtcbnZhciBTdHlsZVNoZWV0ID0gQXBocm9kaXRlLlN0eWxlU2hlZXQsXG4gICAgU3R5bGVTaGVldFNlcnZlciA9IEFwaHJvZGl0ZS5TdHlsZVNoZWV0U2VydmVyLFxuICAgIFN0eWxlU2hlZXRUZXN0VXRpbHMgPSBBcGhyb2RpdGUuU3R5bGVTaGVldFRlc3RVdGlscyxcbiAgICBjc3MgPSBBcGhyb2RpdGUuY3NzLFxuICAgIG1pbmlmeSA9IEFwaHJvZGl0ZS5taW5pZnksXG4gICAgZmx1c2hUb1N0eWxlVGFnID0gQXBocm9kaXRlLmZsdXNoVG9TdHlsZVRhZyxcbiAgICBpbmplY3RBbmRHZXRDbGFzc05hbWUgPSBBcGhyb2RpdGUuaW5qZWN0QW5kR2V0Q2xhc3NOYW1lLFxuICAgIGRlZmF1bHRTZWxlY3RvckhhbmRsZXJzID0gQXBocm9kaXRlLmRlZmF1bHRTZWxlY3RvckhhbmRsZXJzLFxuICAgIHJlc2V0ID0gQXBocm9kaXRlLnJlc2V0LFxuICAgIHJlc2V0SW5qZWN0ZWRTdHlsZSA9IEFwaHJvZGl0ZS5yZXNldEluamVjdGVkU3R5bGU7XG5cbmV4cG9ydCB7IFN0eWxlU2hlZXQsIFN0eWxlU2hlZXRTZXJ2ZXIsIFN0eWxlU2hlZXRUZXN0VXRpbHMsIGNzcywgbWluaWZ5LCBmbHVzaFRvU3R5bGVUYWcsIGluamVjdEFuZEdldENsYXNzTmFtZSwgZGVmYXVsdFNlbGVjdG9ySGFuZGxlcnMsIHJlc2V0LCByZXNldEluamVjdGVkU3R5bGUgfTtcbiIsImltcG9ydCBSZWFjdCwgeyBQdXJlQ29tcG9uZW50IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgY2xvc2VJY29uIGZyb20gXCIuLi9hc3NldHMvY2xvc2UtaWNvbi5wbmdcIjtcbmltcG9ydCBOb3RpZmljYXRpb25JdGVtIGZyb20gXCIuL05vdGlmaWNhdGlvbkl0ZW1cIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCBOb3RpZmljYXRpb25JdGVtU2hhcGUgZnJvbSBcIi4vTm90aWZpY2F0aW9uSXRlbVNoYXBlXCI7XG5pbXBvcnQgeyBTdHlsZVNoZWV0LCBjc3MgfSBmcm9tIFwiYXBocm9kaXRlXCI7XG5cblxuY2xhc3MgTm90aWZpY2F0aW9ucyBleHRlbmRzIFB1cmVDb21wb25lbnQge1xuICByZW5kZXIoKSB7XG4gICAgY29uc3Qge1xuICAgICAgbGlzdE5vdGlmaWNhdGlvbnMsXG4gICAgICBkaXNwbGF5RHJhd2VyLFxuICAgICAgaGFuZGxlRGlzcGxheURyYXdlcixcbiAgICAgIGhhbmRsZUhpZGVEcmF3ZXIsXG4gICAgICBtYXJrTm90aWZpY2F0aW9uQXNSZWFkLFxuICAgIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxSZWFjdC5GcmFnbWVudD5cbiAgICAgICAge2Rpc3BsYXlEcmF3ZXIgPyAoXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4LWFyZWFcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjc3Moc3R5bGVzLm1lbnVJdGVtKX0+XG4gICAgICAgICAgICAgIDxwIG9uQ2xpY2s9e2hhbmRsZURpc3BsYXlEcmF3ZXJ9PllvdXIgbm90aWZpY2F0aW9uczwvcD5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e2NzcyhzdHlsZXMuTm90aWZpY2F0aW9ucyl9PlxuICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgIGNvbG9yOiBcIiMzYTNhM2FcIixcbiAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ6IFwiYm9sZFwiLFxuICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogXCJub25lXCIsXG4gICAgICAgICAgICAgICAgICBib3JkZXI6IFwibm9uZVwiLFxuICAgICAgICAgICAgICAgICAgZm9udFNpemU6IFwiMTBweFwiLFxuICAgICAgICAgICAgICAgICAgcG9zaXRpb246IFwiYWJzb2x1dGVcIixcbiAgICAgICAgICAgICAgICAgIHJpZ2h0OiBcIjJweFwiLFxuICAgICAgICAgICAgICAgICAgdG9wOiBcIjJweFwiLFxuICAgICAgICAgICAgICAgICAgY3Vyc29yOiBcInBvaW50ZXJcIixcbiAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgIGFyaWEtbGFiZWw9XCJDbG9zZVwiXG4gICAgICAgICAgICAgICAgb25DbGljaz17aGFuZGxlSGlkZURyYXdlcn1cbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDxpbWdcbiAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17Y3NzKHN0eWxlcy5idXR0b25JbWFnZSl9XG4gICAgICAgICAgICAgICAgICBzcmM9e2Nsb3NlSWNvbn1cbiAgICAgICAgICAgICAgICAgIGFsdD1cImNsb3NlSWNvblwiXG4gICAgICAgICAgICAgICAgICB3aWR0aD1cIjEwcHhcIlxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9e2NzcyhzdHlsZXMuTm90aWZpY2F0aW9uc1RleHQpfT5cbiAgICAgICAgICAgICAgICBIZXJlIGlzIHRoZSBsaXN0IG9mIG5vdGlmaWNhdGlvbnNcbiAgICAgICAgICAgICAgPC9wPlxuICAgICAgICAgICAgICA8dWwgY2xhc3NOYW1lPXtjc3Moc3R5bGVzLk5vdGlmaWNhdGlvbnNMaXN0KX0+XG4gICAgICAgICAgICAgICAge2xpc3ROb3RpZmljYXRpb25zICYmIGxpc3ROb3RpZmljYXRpb25zLmxlbmd0aCA+IDAgPyAoXG4gICAgICAgICAgICAgICAgICBsaXN0Tm90aWZpY2F0aW9ucy5tYXAoKHsgaWQsIGh0bWwsIHR5cGUsIHZhbHVlIH0pID0+IChcbiAgICAgICAgICAgICAgICAgICAgPE5vdGlmaWNhdGlvbkl0ZW1cbiAgICAgICAgICAgICAgICAgICAgICBrZXk9e2lkfVxuICAgICAgICAgICAgICAgICAgICAgIHR5cGU9e3R5cGV9XG4gICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e3ZhbHVlfVxuICAgICAgICAgICAgICAgICAgICAgIGh0bWw9e2h0bWx9XG4gICAgICAgICAgICAgICAgICAgICAgbWFya0FzUmVhZD17bWFya05vdGlmaWNhdGlvbkFzUmVhZH1cbiAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICkpXG4gICAgICAgICAgICAgICAgKSA6IChcbiAgICAgICAgICAgICAgICAgIDxOb3RpZmljYXRpb25JdGVtIHZhbHVlPVwiTm8gbmV3IE5vdGlmaWNhdGlvbiBmb3Igbm93XCIgLz5cbiAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICkgOiAoXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9e2NzcyhzdHlsZXMubWVudUl0ZW0pfT5cbiAgICAgICAgICAgIDxwIG9uQ2xpY2s9e2hhbmRsZURpc3BsYXlEcmF3ZXJ9PllvdXIgbm90aWZpY2F0aW9uczwvcD5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKX1cbiAgICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gICAgKTtcbiAgfVxufVxuXG5jb25zdCBib3VuY2VBbmltYXRpb24gPSB7XG4gIFwiMCUsIDIwJSwgNTAlLCA4MCUsIDEwMCVcIjoge1xuICAgIHRyYW5zZm9ybTogXCJ0cmFuc2xhdGVZKDApXCIsXG4gIH0sXG4gIFwiNDAlXCI6IHtcbiAgICB0cmFuc2Zvcm06IFwidHJhbnNsYXRlWSgtNXB4KVwiLFxuICB9LFxuICBcIjYwJVwiOiB7XG4gICAgdHJhbnNmb3JtOiBcInRyYW5zbGF0ZVkoNXB4KVwiLFxuICB9LFxufTtcblxuY29uc3QgZmFkZUluQW5pbWF0aW9uID0ge1xuICBcIjAlXCI6IHtcbiAgICBvcGFjaXR5OiAwLjUsXG4gIH0sXG4gIFwiMTAwJVwiOiB7XG4gICAgb3BhY2l0eTogMSxcbiAgfSxcbn07XG5cbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgTm90aWZpY2F0aW9uczoge1xuICAgIGJvcmRlcjogXCIwLjA2MjVyZW0gZGFzaGVkIHJlZFwiLFxuICAgIHBhZGRpbmc6IFwiMC4zMTI1cmVtXCIsXG4gICAgcG9zaXRpb246IFwiYWJzb2x1dGVcIixcbiAgICB3aWR0aDogXCIyNXJlbVwiLFxuICAgIHJpZ2h0OiBcIjAuOTM3NXJlbVwiLFxuICAgIHRvcDogXCIzLjEyNXJlbVwiLFxuICAgIFwiQG1lZGlhIChtYXgtd2lkdGg6IDkwMHB4KVwiOiB7XG4gICAgICB3aWR0aDogXCI5NSVcIixcbiAgICAgIGhlaWdodDogXCIxMDB2d1wiLFxuICAgICAgYmFja2dyb3VuZENvbG9yOiBcIndoaXRlXCIsXG4gICAgICBib3JkZXI6IFwibm9uZVwiLFxuICAgICAgYm94U2hhZG93OiBcIjBweCAwcHggNHB4IDFweCByZ2JhKDAsIDAsIDAsIC4zKVwiLFxuICAgIH0sXG4gIH0sXG4gIE5vdGlmaWNhdGlvbnNUZXh0OiB7XG4gICAgXCJAbWVkaWEgKG1heC13aWR0aDogOTAwcHgpXCI6IHtcbiAgICAgIGZvbnRTaXplOiBcIjIwcHhcIixcbiAgICB9LFxuICB9LFxuICBOb3RpZmljYXRpb25zTGlzdDoge1xuICAgIFwiQG1lZGlhIChtYXgtd2lkdGg6IDkwMHB4KVwiOiB7XG4gICAgICBsaXN0U3R5bGU6IFwibm9uZVwiLFxuICAgICAgcGFkZGluZzogMCxcbiAgICAgIGJvcmRlckJvdHRvbTogXCIwLjA2MjVyZW0gc29saWQgXCIsXG4gICAgfSxcbiAgfSxcbiAgYnV0dG9uSW1hZ2U6IHtcbiAgICB3aWR0aDogXCIxMHB4XCIsXG4gIH0sXG4gICdbZGF0YS1ub3RpZmljYXRpb24tdHlwZT1cImRlZmF1bHRcIl0nOiB7XG4gICAgY29sb3I6IFwiIzBkMDU2M1wiLFxuICB9LFxuICAnW2RhdGEtbm90aWZpY2F0aW9uLXR5cGU9XCJ1cmdlbnRcIl0nOiB7XG4gICAgY29sb3I6IFwiI2UwMzU0YlwiLFxuICB9LFxuXG4gIFwiW2RhdGEtdXJnZW50XVwiOiB7XG4gICAgY29sb3I6IFwicmVkXCIsXG4gIH0sXG4gIG1lbnVJdGVtOiB7XG4gICAgdGV4dEFsaWduOiBcInJpZ2h0XCIsXG4gICAgLy8gcG9zaXRpb246ICdmaXhlZCcsXG4gICAgYmFja2dyb3VuZENvbG9yOiBcIiNmZmY4ZjhcIixcbiAgICBjdXJzb3I6IFwicG9pbnRlclwiLFxuICAgIHRyYW5zaXRpb246IFwib3BhY2l0eSAwLjNzIGVhc2UtaW4tb3V0XCIsXG4gICAgXCI6aG92ZXJcIjoge1xuICAgICAgYW5pbWF0aW9uTmFtZTogW2JvdW5jZUFuaW1hdGlvbiwgZmFkZUluQW5pbWF0aW9uXSxcbiAgICAgIGFuaW1hdGlvbkR1cmF0aW9uOiBcIjAuNXNcIixcbiAgICAgIGFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiAzLFxuICAgICAgb3BhY2l0eTogMC41LFxuICAgIH0sXG4gICAgXCJAbWVkaWEgKG1heC13aWR0aDogOTAwcHgpXCI6IHtcbiAgICAgIGRpc3BsYXk6IFwibm9uZVwiLFxuICAgIH0sXG4gIH0sXG59KTtcblxuTm90aWZpY2F0aW9ucy5wcm9wVHlwZXMgPSB7XG4gIGRpc3BsYXlEcmF3ZXI6IFByb3BUeXBlcy5ib29sLFxuICBsaXN0Tm90aWZpY2F0aW9uczogUHJvcFR5cGVzLmFycmF5T2YoTm90aWZpY2F0aW9uSXRlbVNoYXBlKSxcbiAgb25DbG9zZURyYXdlcjogUHJvcFR5cGVzLmZ1bmMsXG4gIGhhbmRsZURpc3BsYXlEcmF3ZXI6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIGhhbmRsZUhpZGVEcmF3ZXI6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIG1hcmtOb3RpZmljYXRpb25Bc1JlYWQ6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG59O1xuXG5Ob3RpZmljYXRpb25zLmRlZmF1bHRQcm9wcyA9IHtcbiAgbGlzdE5vdGlmaWNhdGlvbnM6IFtdLFxuICBoYW5kbGVEaXNwbGF5RHJhd2VyOiAoKSA9PiB7fSxcbiAgaGFuZGxlSGlkZURyYXdlcjogKCkgPT4ge30sXG59O1xuXG5leHBvcnQgZGVmYXVsdCBOb3RpZmljYXRpb25zO1xuIiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgU3R5bGVTaGVldCwgY3NzIH0gZnJvbSBcImFwaHJvZGl0ZVwiO1xuXG5cbmNsYXNzIExvZ2luIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgXG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICBlbWFpbDogXCJcIixcbiAgICAgIHBhc3N3b3JkOiBcIlwiLFxuICAgICAgZW5hYmxlU3VibWl0OiBmYWxzZSxcbiAgICB9O1xuXG4gICAgLy8gQmluZGluZyBmdW5jdGlvbnMgZm9yIGJldHRlciBwZXJmb3JtYW5jZVxuICAgIHRoaXMuaGFuZGxlU3VibWl0ID0gdGhpcy5oYW5kbGVTdWJtaXQuYmluZCh0aGlzKTtcbiAgICB0aGlzLmhhbmRsZUNoYW5nZSA9IHRoaXMuaGFuZGxlQ2hhbmdlLmJpbmQodGhpcyk7XG4gICAgdGhpcy5oYW5kbGVDaGFuZ2VFbWFpbCA9IHRoaXMuaGFuZGxlQ2hhbmdlRW1haWwuYmluZCh0aGlzKTtcbiAgICB0aGlzLmhhbmRsZUNoYW5nZVBhc3N3b3JkID0gdGhpcy5oYW5kbGVDaGFuZ2VQYXNzd29yZC5iaW5kKHRoaXMpO1xuICB9XG5cbiAgaGFuZGxlU3VibWl0KGUpIHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgY29uc3QgeyBlbWFpbCwgcGFzc3dvcmQgfSA9IHRoaXMuc3RhdGU7XG4gICAgdGhpcy5wcm9wcy5sb2dJbihlbWFpbCwgcGFzc3dvcmQpO1xuXG4gIH1cblxuICBoYW5kbGVDaGFuZ2UoZSkge1xuICAgIGUucGVyc2lzdCgpO1xuICAgIGNvbnN0IHsgbmFtZSwgdmFsdWUgfSA9IGUudGFyZ2V0O1xuICAgIHRoaXMuc2V0U3RhdGUoKHByZXZTdGF0ZSkgPT4gKHtcbiAgICAgIFtuYW1lXTogdmFsdWUsXG4gICAgICBlbmFibGVTdWJtaXQ6IHByZXZTdGF0ZS5lbWFpbCAhPT0gXCJcIiAmJiBwcmV2U3RhdGUucGFzc3dvcmQgIT09IFwiXCIsXG4gICAgfSkpO1xuICB9XG5cbiAgaGFuZGxlQ2hhbmdlRW1haWwoZSkge1xuICAgIGUucGVyc2lzdCgpO1xuICAgIHRoaXMuaGFuZGxlQ2hhbmdlKGUpO1xuICB9XG5cbiAgaGFuZGxlQ2hhbmdlUGFzc3dvcmQoZSkge1xuICAgIGUucGVyc2lzdCgpO1xuICAgIHRoaXMuaGFuZGxlQ2hhbmdlKGUpO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgZW1haWwsIHBhc3N3b3JkLCBlbmFibGVTdWJtaXQgfSA9IHRoaXMuc3RhdGU7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9e2NzcyhzdHlsZXMuYXBwQm9keSl9PlxuICAgICAgICA8cD5Mb2dpbiB0byBhY2Nlc3MgdGhlIGZ1bGwgZGFzaGJvYXJkPC9wPlxuICAgICAgICA8Zm9ybSBvblN1Ym1pdD17dGhpcy5oYW5kbGVTdWJtaXR9PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjc3Moc3R5bGVzLmFwcExvZ2luKX0+XG4gICAgICAgICAgICA8bGFiZWwgaHRtbEZvcj1cImVtYWlsXCI+RW1haWw6PC9sYWJlbD5cbiAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICB0eXBlPVwiZW1haWxcIlxuICAgICAgICAgICAgICBuYW1lPVwiZW1haWxcIlxuICAgICAgICAgICAgICBpZD1cImVtYWlsXCJcbiAgICAgICAgICAgICAgdmFsdWU9e2VtYWlsfVxuICAgICAgICAgICAgICBvbkNoYW5nZT17dGhpcy5oYW5kbGVDaGFuZ2VFbWFpbH1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8bGFiZWwgaHRtbEZvcj1cInBhc3N3b3JkXCI+UGFzc3dvcmQ6PC9sYWJlbD5cbiAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICB0eXBlPVwicGFzc3dvcmRcIlxuICAgICAgICAgICAgICBuYW1lPVwicGFzc3dvcmRcIlxuICAgICAgICAgICAgICBpZD1cInBhc3N3b3JkXCJcbiAgICAgICAgICAgICAgdmFsdWU9e3Bhc3N3b3JkfVxuICAgICAgICAgICAgICBvbkNoYW5nZT17dGhpcy5oYW5kbGVDaGFuZ2VQYXNzd29yZH1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgdHlwZT1cInN1Ym1pdFwiXG4gICAgICAgICAgICAgIGNsYXNzTmFtZT17Y3NzKHN0eWxlcy5sb2dpbkJ1dHRvbil9XG4gICAgICAgICAgICAgIHZhbHVlPVwiT0tcIlxuICAgICAgICAgICAgICBkaXNhYmxlZD17IWVuYWJsZVN1Ym1pdH1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZm9ybT5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgTG9naW47XG5cbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgYXBwQm9keToge1xuICAgIGZvbnRGYW1pbHk6IFwiUG9wcGlucywgc2Fucy1zZXJpZlwiLFxuICAgIGNvbG9yOiBcIiMwMDAwMDBcIixcbiAgICBvdmVyZmxvdzogXCJub25lXCIsXG4gIH0sXG4gIGFwcExvZ2luOiB7XG4gICAgZGlzcGxheTogXCJmbGV4XCIsXG4gICAgZ2FwOiBcIjEuNSVcIixcbiAgICBtYXJnaW5MZWZ0OiBcIjUlXCIsXG4gICAgXCJAbWVkaWEgKG1heC13aWR0aDogOTAwcHgpXCI6IHtcbiAgICAgIGRpc3BsYXk6IFwiZmxleFwiLFxuICAgICAgZmxleERpcmVjdGlvbjogXCJjb2x1bW5cIixcbiAgICAgIGJvcmRlcjogXCJub25lXCIsXG4gICAgICB3aWR0aDogXCIzNSVcIixcbiAgICB9LFxuICB9LFxuICBsb2dpbkJ1dHRvbjoge1xuICAgIGJhY2tncm91bmRDb2xvcjogXCJ3aGl0ZVwiLFxuICAgIGJvcmRlcjogXCIxcHggc29saWQgIzAwMFwiLFxuICAgIGJvcmRlclJhZGl1czogXCIycHhcIixcbiAgICBib3hTaGFkb3c6IFwiMCAwIDFweCAxcHggIzAwMFwiLFxuICAgIGN1cnNvcjogXCJwb2ludGVyXCIsXG4gICAgdHJhbnNpdGlvbjogXCJhbGwgMC4zcyBlYXNlLWluLW91dFwiLFxuICAgIFwiOmhvdmVyXCI6IHtcbiAgICAgIGJhY2tncm91bmRDb2xvcjogXCIjMDAwXCIsXG4gICAgICBjb2xvcjogXCIjZmZmXCIsXG4gICAgfSxcbiAgICBcIkBtZWRpYSAobWF4LXdpZHRoOiA5MDBweClcIjoge1xuICAgICAgbWFyZ2luVG9wOiBcIjEuNSVcIixcbiAgICAgIHdpZHRoOiBcIjE1JVwiLFxuICAgIH0sXG4gIH0sXG59KTtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL2ltYWdlLXdlYnBhY2stbG9hZGVyL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzNdIS4vRm9vdGVyLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9pbWFnZS13ZWJwYWNrLWxvYWRlci9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1szXSEuL0Zvb3Rlci5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgeyBjcmVhdGVDb250ZXh0IH0gZnJvbSBcInJlYWN0XCI7XG5cbmNvbnN0IHVzZXIgPSB7XG4gICAgZW1haWw6IFwiXCIsXG4gICAgcGFzc3dvcmQ6IFwiXCIsXG4gICAgaXNMb2dnZWRJbjogZmFsc2UsXG4gICAgfTtcblxuY29uc3QgbG9nT3V0ID0gKCkgPT4ge1xuICAgIHVzZXIuaXNMb2dnZWRJbiA9IGZhbHNlO1xufVxuXG5leHBvcnQgY29uc3QgQXBwQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQoe1xuICAgIHVzZXI6IHVzZXIsXG4gICAgbG9nT3V0OiBsb2dPdXQsXG59KTtcblxuZXhwb3J0IHsgdXNlciwgbG9nT3V0IH07IiwiaW1wb3J0IFJlYWN0LCB7dXNlQ29udGV4dH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgXCIuL0Zvb3Rlci5jc3NcIjtcbmltcG9ydCB7IGdldEZ1bGxZZWFyLCBnZXRGb290ZXJDb3B5IH0gZnJvbSBcIi4uL3V0aWxzL3V0aWxzLmpzXCI7XG5pbXBvcnQgeyBBcHBDb250ZXh0IH0gZnJvbSBcIi4uL0FwcC9BcHBDb250ZXh0LmpzXCI7XG5cbmZ1bmN0aW9uIEZvb3RlcigpIHtcbiAgY29uc3QgeyB1c2VyIH0gPSB1c2VDb250ZXh0KEFwcENvbnRleHQpO1xuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwiQXBwLWZvb3RlclwiPlxuICAgICAgPHA+XG4gICAgICAgIENvcHlyaWdodCB7Z2V0RnVsbFllYXIoKX0gLSB7Z2V0Rm9vdGVyQ29weSh0cnVlKX1cbiAgICAgIDwvcD5cblxuICAgICAge3VzZXIuaXNMb2dnZWRJbiAmJiAoXG4gICAgICAgIDxwPlxuICAgICAgICAgIDxhIGhyZWY9XCIvY29udGFjdFwiPkNvbnRhY3QgdXM8L2E+XG4gICAgICAgIDwvcD5cbiAgICAgICl9XG4gICAgPC9kaXY+XG4gICk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IEZvb3RlcjtcbiIsImV4cG9ydCBmdW5jdGlvbiBnZXRGdWxsWWVhcigpIHtcbiAgcmV0dXJuIG5ldyBEYXRlKCkuZ2V0RnVsbFllYXIoKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEZvb3RlckNvcHkoaXNJbmRleCkge1xuICByZXR1cm4gaXNJbmRleCA/IFwiSG9sYmVydG9uIFNjaG9vbCBtYWluIGRhc2hib2FyZFwiIDogXCJIb2xiZXJ0b24gU2Nob29sXCIgO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0TGF0ZXN0Tm90aWZpY2F0aW9uKCkge1xuICByZXR1cm4gXCI8c3Ryb25nPlVyZ2VudCByZXF1aXJlbWVudDwvc3Ryb25nPiAtIGNvbXBsZXRlIGJ5IEVPRFwiO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImltYWdlcy9ob2xiZXJ0b24tbG9nby5qcGdcIjsiLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgbG9nbyBmcm9tIFwiLi4vYXNzZXRzL2hvbGJlcnRvbi1sb2dvLmpwZ1wiO1xuaW1wb3J0IHsgU3R5bGVTaGVldCwgY3NzIH0gZnJvbSBcImFwaHJvZGl0ZVwiO1xuaW1wb3J0IHsgQXBwQ29udGV4dCB9IGZyb20gXCIuLi9BcHAvQXBwQ29udGV4dFwiO1xuXG5jbGFzcyBIZWFkZXIgZXh0ZW5kcyBDb21wb25lbnQge1xuICBzdGF0aWMgY29udGV4dFR5cGUgPSBBcHBDb250ZXh0O1xuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyB1c2VyLCBsb2dPdXQgfSA9IHRoaXMuY29udGV4dDtcblxuICAgIHJldHVybiAoXG4gICAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjc3Moc3R5bGVzLmhlYWRlcil9PlxuICAgICAgICAgIDxpbWcgc3JjPXtsb2dvfSBhbHQ9XCJIb2xiZXJ0b24gbG9nb1wiIC8+XG4gICAgICAgICAgPGgxPlNjaG9vbCBkYXNoYm9hcmQ8L2gxPlxuICAgICAgICA8L2Rpdj5cblxuICAgICAgICB7dXNlci5pc0xvZ2dlZEluICYmIChcbiAgICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9e2NzcyhzdHlsZXMud2VsY29tZU1lc3NhZ2UpfSBpZD1cImxvZ291dFNlY3Rpb25cIj5cbiAgICAgICAgICAgIFdlbGNvbWUgPHN0cm9uZz57dXNlci5lbWFpbH08L3N0cm9uZz5cbiAgICAgICAgICAgIDxlbT5cbiAgICAgICAgICAgICAgPGEgaHJlZj1cIiNcIiBvbkNsaWNrPXtsb2dPdXR9IGNsYXNzTmFtZT17Y3NzKHN0eWxlcy5sb2dvdXRMaW5rKX0+XG4gICAgICAgICAgICAgICAgKGxvZ291dClcbiAgICAgICAgICAgICAgPC9hPlxuICAgICAgICAgICAgPC9lbT5cbiAgICAgICAgICA8L3NlY3Rpb24+XG4gICAgICAgICl9XG4gICAgICA8L1JlYWN0LkZyYWdtZW50PlxuICAgICk7XG4gIH1cbn1cblxuY29uc3Qgc3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGUoe1xuICBoZWFkZXI6IHtcbiAgICBkaXNwbGF5OiBcImZsZXhcIixcbiAgICBmbGV4RGlyZWN0aW9uOiBcInJvd1wiLFxuICAgIGp1c3RpZnlDb250ZW50OiBcImxlZnRcIixcbiAgICBhbGlnbkl0ZW1zOiBcImNlbnRlclwiLFxuICAgIGJhY2tncm91bmRTaXplOiBcImF1dG9cIixcbiAgICBmb250RmFtaWx5OiBcIlBvcHBpbnMsIHNhbnMtc2VyaWZcIixcbiAgICBmb250V2VpZ2h0OiA0MDAsXG4gICAgY29sb3I6IFwiI2RjMzYzMFwiLFxuICAgIGJvcmRlckJvdHRvbTogXCIxLjlweCBzb2xpZCAjZGMzNjMwXCIsXG4gICAgd2lkdGg6IFwiMTAwJVwiLFxuICB9LFxuICB3ZWxjb21lTWVzc2FnZToge1xuICAgIG1hcmdpblRvcDogXCIxcmVtXCIsXG4gICAgbWFyZ2luTGVmdDogXCIxMHB4XCIsXG4gICAgZGlzcGxheTogXCJmbGV4XCIsXG4gICAgZ2FwOiBcIjEwcHhcIixcbiAgfSxcbiAgbG9nb3V0TGluazoge1xuICAgIGZvbnRTdHlsZTogXCJpdGFsaWNcIixcbiAgICBmb250U2l6ZTogXCIwLjhlbVwiLFxuICAgIGNvbG9yOiBcImJsYWNrXCIsXG4gICAgbWFyZ2luUmlnaHQ6IFwiMTBweFwiLFxuICAgIHRleHREZWNvcmF0aW9uOiBcIm5vbmVcIixcbiAgfSxcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBIZWFkZXI7XG4iLCJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBDb3Vyc2VMaXN0Um93KHsgaXNIZWFkZXIsIHRleHRGaXJzdENlbGwsIHRleHRTZWNvbmRDZWxsIH0pIHtcbiAgLy8gRGVmaW5lIGlubGluZSBzdHlsZXNcbiAgY29uc3QgW2lzQ2hlY2tlZCwgc2V0SXNDaGVja2VkXSA9IHVzZVN0YXRlKGZhbHNlKTtcblxuICBjb25zdCByb3dTdHlsZSA9IHtcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IGlzSGVhZGVyID8gJyNkZWI1YjU0NScgOiBpc0NoZWNrZWQgPyAnI2U2ZTRlNCcgOiAnI2Y1ZjVmNWFiJ1xuICB9O1xuXG4gIGNvbnN0IGhhbmRsZUNoYW5nZSA9ICgpID0+IHtcbiAgICBzZXRJc0NoZWNrZWQoIWlzQ2hlY2tlZCk7XG4gIH07XG5cbiAgcmV0dXJuIChcbiAgICA8dHIgc3R5bGU9e3Jvd1N0eWxlfT5cbiAgICAgIHtpc0hlYWRlciA/IChcbiAgICAgICAgdGV4dFNlY29uZENlbGwgPT09IG51bGwgPyAoXG4gICAgICAgICAgPHRoIGNvbFNwYW49ezJ9Pnt0ZXh0Rmlyc3RDZWxsfTwvdGg+XG4gICAgICAgICkgOiAoXG4gICAgICAgICAgPD5cbiAgICAgICAgICAgIDx0aD57dGV4dEZpcnN0Q2VsbH08L3RoPlxuICAgICAgICAgICAgPHRoPnt0ZXh0U2Vjb25kQ2VsbH08L3RoPlxuICAgICAgICAgIDwvPlxuICAgICAgICApXG4gICAgICApIDogKFxuICAgICAgICA8PlxuICAgICAgICAgIDx0ZD5cbiAgICAgICAgICAgIHt0ZXh0Rmlyc3RDZWxsID09PSBudWxsID8gKFxuICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgY2hlY2tlZD17aXNDaGVja2VkfSBvbkNoYW5nZT17aGFuZGxlQ2hhbmdlfSAvPlxuICAgICAgICAgICAgKSA6IChcbiAgICAgICAgICAgICAgdGV4dEZpcnN0Q2VsbFxuICAgICAgICAgICAgKX1cbiAgICAgICAgICA8L3RkPlxuICAgICAgICAgIDx0ZD57dGV4dFNlY29uZENlbGx9PC90ZD5cbiAgICAgICAgPC8+XG4gICAgICApfVxuICAgIDwvdHI+XG4gICk7XG59XG5cbkNvdXJzZUxpc3RSb3cucHJvcFR5cGVzID0ge1xuICBpc0hlYWRlcjogUHJvcFR5cGVzLmJvb2wsXG4gIHRleHRGaXJzdENlbGw6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHRleHRTZWNvbmRDZWxsOiBQcm9wVHlwZXMuc3RyaW5nLFxufTtcblxuQ291cnNlTGlzdFJvdy5kZWZhdWx0UHJvcHMgPSB7XG4gIGlzSGVhZGVyOiBmYWxzZSxcbiAgdGV4dEZpcnN0Q2VsbDogbnVsbCxcbiAgdGV4dFNlY29uZENlbGw6IG51bGwsXG59O1xuIiwiaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcblxuY29uc3QgQ291cnNlU2hhcGUgPSBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIGlkOiBQcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWQsXG4gICAgbmFtZTogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICAgIGNyZWRpdDogUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IENvdXJzZVNoYXBlOyIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBDb3Vyc2VMaXN0Um93IGZyb20gXCIuL0NvdXJzZUxpc3RSb3dcIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCBDb3Vyc2VTaGFwZSBmcm9tIFwiLi9Db3Vyc2VTaGFwZVwiO1xuaW1wb3J0IHsgU3R5bGVTaGVldCwgY3NzIH0gZnJvbSBcImFwaHJvZGl0ZVwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBDb3Vyc2VMaXN0KHsgbGlzdENvdXJzZXMgfSkge1xuICByZXR1cm4gKFxuICAgIDx0YWJsZSBjbGFzc05hbWU9e2NzcyhzdHlsZXMuY291cnNlTGlzdCl9PlxuICAgICAgPHRoZWFkPlxuICAgICAgICA8Q291cnNlTGlzdFJvdyB0ZXh0Rmlyc3RDZWxsPVwiQXZhaWxhYmxlIGNvdXJzZXNcIiBpc0hlYWRlcj17dHJ1ZX0gLz5cbiAgICAgICAgPENvdXJzZUxpc3RSb3dcbiAgICAgICAgICB0ZXh0Rmlyc3RDZWxsPVwiQ291cnNlIG5hbWVcIlxuICAgICAgICAgIHRleHRTZWNvbmRDZWxsPVwiQ3JlZGl0XCJcbiAgICAgICAgICBpc0hlYWRlcj17dHJ1ZX1cbiAgICAgICAgLz5cbiAgICAgIDwvdGhlYWQ+XG4gICAgICA8dGJvZHk+XG4gICAgICAgIHtsaXN0Q291cnNlcy5sZW5ndGggPT09IDAgPyAoXG4gICAgICAgICAgPENvdXJzZUxpc3RSb3dcbiAgICAgICAgICAgIGlzSGVhZGVyPXtmYWxzZX1cbiAgICAgICAgICAgIHRleHRGaXJzdENlbGw9XCJObyBjb3Vyc2UgYXZhaWxhYmxlIHlldFwiXG4gICAgICAgICAgLz5cbiAgICAgICAgKSA6IChcbiAgICAgICAgICBsaXN0Q291cnNlcy5tYXAoKGNvdXJzZSkgPT4gKFxuICAgICAgICAgICAgPENvdXJzZUxpc3RSb3dcbiAgICAgICAgICAgICAga2V5PXtjb3Vyc2UuaWR9XG4gICAgICAgICAgICAgIGlzSGVhZGVyPXtmYWxzZX1cbiAgICAgICAgICAgICAgdGV4dEZpcnN0Q2VsbD17Y291cnNlLm5hbWV9XG4gICAgICAgICAgICAgIHRleHRTZWNvbmRDZWxsPXtjb3Vyc2UuY3JlZGl0LnRvU3RyaW5nKCl9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICkpXG4gICAgICAgICl9XG4gICAgICA8L3Rib2R5PlxuICAgIDwvdGFibGU+XG4gICk7XG59XG5cbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgY291cnNlTGlzdDoge1xuICAgIG1hcmdpblRvcDogXCIxLjI1cmVtXCIsXG4gICAgYm9yZGVyOiBcIjFweCBzb2xpZFwiLFxuICAgIHdpZHRoOiBcIjgwJVwiLFxuICAgIGJvcmRlckNvbG9yOiBcInJnYmEoMCwgMCwgMCwgMC4zMilcIixcbiAgICBib3JkZXJSYWRpdXM6IFwiNXB4XCIsXG4gICAgZm9udEZhbWlseTogXCJQb3BwaW5zXCIsXG4gICAgZm9udFdlaWdodDogNDAwLFxuICAgIGZvbnRTaXplOiBcIjEuMjVyZW1cIixcbiAgICBjb2xvcjogXCIjMDAwMDAwXCIsXG4gIH0sXG4gIHRhYmxlSGVhZGVyOiB7XG4gICAgdGV4dEFsaWduOiBcImNlbnRlclwiLFxuICAgIGJvcmRlcjogXCIxcHggc29saWRcIixcbiAgICBib3JkZXJDb2xvcjogXCJyZ2JhKDAsIDAsIDAsIDAuMzIpXCIsXG4gICAgcGFkZGluZzogXCIwLjVyZW1cIixcbiAgfSxcbiAgdGFibGVIZWFkZXJGaXJzdDoge1xuICAgIHRleHRBbGlnbjogXCJsZWZ0XCIsXG4gICAgYm9yZGVyOiBcIjFweCBzb2xpZFwiLFxuICAgIGJvcmRlclJpZ2h0OiBcIm5vbmVcIixcbiAgICBib3JkZXJDb2xvcjogXCJyZ2JhKDAsIDAsIDAsIDAuMzIpXCIsXG4gIH0sXG4gIHRhYmxlSGVhZGVyU2Vjb25kOiB7XG4gICAgdGV4dEFsaWduOiBcImxlZnRcIixcbiAgICBib3JkZXI6IFwiMXB4IHNvbGlkXCIsXG4gICAgYm9yZGVyTGVmdDogXCJub25lXCIsXG4gICAgYm9yZGVyUmlnaHQ6IFwibm9uZVwiLFxuICAgIGJvcmRlckNvbG9yOiBcInJnYmEoMCwgMCwgMCwgMC4zMilcIixcbiAgfSxcbn0pO1xuXG5Db3Vyc2VMaXN0LnByb3BUeXBlcyA9IHtcbiAgbGlzdENvdXJzZXM6IFByb3BUeXBlcy5hcnJheU9mKENvdXJzZVNoYXBlKSxcbn07XG5cbkNvdXJzZUxpc3QuZGVmYXVsdFByb3BzID0ge1xuICBsaXN0Q291cnNlczogW10sXG59O1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IHsgU3R5bGVTaGVldCwgY3NzIH0gZnJvbSAnYXBocm9kaXRlJztcblxuY29uc3QgQm9keVNlY3Rpb24gPSAoeyB0aXRsZSwgY2hpbGRyZW4gfSkgPT4ge1xuICBjb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gICAgYm9keVNlY3Rpb246IHtcbiAgICAgIG1hcmdpbjogJzQwcHgnLFxuICAgICAgZGlzcGxheTogJ2Jsb2NrJyxcbiAgICB9LFxuICB9KTtcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPXtjc3Moc3R5bGVzLmJvZHlTZWN0aW9uKX0+XG4gICAgICA8aDI+e3RpdGxlfTwvaDI+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5Cb2R5U2VjdGlvbi5wcm9wVHlwZXMgPSB7XG4gIHRpdGxlOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZS5pc1JlcXVpcmVkLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgQm9keVNlY3Rpb247XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBCb2R5U2VjdGlvbiBmcm9tICcuL0JvZHlTZWN0aW9uJztcbmltcG9ydCAnLi9Cb2R5U2VjdGlvbic7XG5cbmNvbnN0IEJvZHlTZWN0aW9uV2l0aE1hcmdpbkJvdHRvbSA9IChwcm9wcykgPT4ge1xuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwiYm9keVNlY3Rpb25XaXRoTWFyZ2luXCI+XG4gICAgICA8Qm9keVNlY3Rpb24gey4uLnByb3BzfSAvPlxuICAgIDwvZGl2PlxuICApO1xufTtcblxuQm9keVNlY3Rpb25XaXRoTWFyZ2luQm90dG9tLnByb3BUeXBlcyA9IHtcbiAgLi4uQm9keVNlY3Rpb24ucHJvcFR5cGVzLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgQm9keVNlY3Rpb25XaXRoTWFyZ2luQm90dG9tO1xuIiwiaW1wb3J0IE5vdGlmaWNhdGlvbnMgZnJvbSBcIi4uL05vdGlmaWNhdGlvbnMvTm90aWZpY2F0aW9uc1wiO1xuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgU3R5bGVTaGVldCwgY3NzIH0gZnJvbSBcImFwaHJvZGl0ZVwiO1xuaW1wb3J0IExvZ2luIGZyb20gXCIuLi9Mb2dpbi9Mb2dpblwiO1xuaW1wb3J0IEZvb3RlciBmcm9tIFwiLi4vRm9vdGVyL0Zvb3RlclwiO1xuaW1wb3J0IEhlYWRlciBmcm9tIFwiLi4vSGVhZGVyL0hlYWRlclwiO1xuaW1wb3J0IENvdXJzZUxpc3QgZnJvbSBcIi4uL0NvdXJzZUxpc3QvQ291cnNlTGlzdFwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IEJvZHlTZWN0aW9uIGZyb20gXCIuLi9Cb2R5U2VjdGlvbi9Cb2R5U2VjdGlvblwiO1xuaW1wb3J0IEJvZHlTZWN0aW9uV2l0aE1hcmdpbkJvdHRvbSBmcm9tIFwiLi4vQm9keVNlY3Rpb24vQm9keVNlY3Rpb25XaXRoTWFyZ2luQm90dG9tXCI7XG5pbXBvcnQgeyBBcHBDb250ZXh0LCB1c2VyIH0gZnJvbSBcIi4vQXBwQ29udGV4dFwiO1xuaW1wb3J0IHsgZ2V0TGF0ZXN0Tm90aWZpY2F0aW9uIH0gZnJvbSBcIi4uL3V0aWxzL3V0aWxzXCI7XG5cbmNsYXNzIEFwcCBleHRlbmRzIENvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICBkaXNwbGF5RHJhd2VyOiBmYWxzZSxcbiAgICAgIHVzZXI6IHVzZXIsXG4gICAgICBsb2dPdXQ6IHRoaXMubG9nT3V0LFxuICAgICAgbGlzdE5vdGlmaWNhdGlvbnM6IFtcbiAgICAgICAgeyBpZDogMSwgdHlwZTogXCJkZWZhdWx0XCIsIHZhbHVlOiBcIk5ldyBjb3Vyc2UgYXZhaWxhYmxlXCIgfSxcbiAgICAgICAgeyBpZDogMiwgdHlwZTogXCJ1cmdlbnRcIiwgdmFsdWU6IFwiTmV3IHJlc3VtZSBhdmFpbGFibGVcIiB9LFxuICAgICAgICB7IGlkOiAzLCB0eXBlOiBcInVyZ2VudFwiLCBodG1sOiB7IF9faHRtbDogZ2V0TGF0ZXN0Tm90aWZpY2F0aW9uKCkgfSB9LFxuICAgICAgXSxcbiAgICB9O1xuICAgIHRoaXMuaGFuZGxlRGlzcGxheURyYXdlciA9IHRoaXMuaGFuZGxlRGlzcGxheURyYXdlci5iaW5kKHRoaXMpO1xuICAgIHRoaXMuaGFuZGxlSGlkZURyYXdlciA9IHRoaXMuaGFuZGxlSGlkZURyYXdlci5iaW5kKHRoaXMpO1xuICAgIHRoaXMubG9nSW4gPSB0aGlzLmxvZ0luLmJpbmQodGhpcyk7XG4gICAgdGhpcy5sb2dPdXQgPSB0aGlzLmxvZ091dC5iaW5kKHRoaXMpO1xuICAgIHRoaXMubWFya05vdGlmaWNhdGlvbkFzUmVhZCA9IHRoaXMubWFya05vdGlmaWNhdGlvbkFzUmVhZC5iaW5kKHRoaXMpO1xuICB9XG5cbiAgaGFuZGxlRGlzcGxheURyYXdlciA9ICgpID0+IHtcbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIGRpc3BsYXlEcmF3ZXI6IHRydWUsXG4gICAgfSk7XG4gIH07XG5cbiAgaGFuZGxlSGlkZURyYXdlciA9ICgpID0+IHtcbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIGRpc3BsYXlEcmF3ZXI6IGZhbHNlLFxuICAgIH0pO1xuICAgIGNvbnNvbGUubG9nKFwiQ2xvc2UgYnV0dG9uIGhhcyBiZWVuIGNsaWNrZWRcIik7XG4gIH07XG5cbiAgbG9nSW4gPSAoZW1haWwsIHBhc3N3b3JkKSA9PiB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICB1c2VyOiB7XG4gICAgICAgIC4uLnRoaXMuc3RhdGUudXNlcixcbiAgICAgICAgZW1haWw6IGVtYWlsLFxuICAgICAgICBwYXNzd29yZDogcGFzc3dvcmQsXG4gICAgICAgIGlzTG9nZ2VkSW46IHRydWUsXG4gICAgICB9LFxuICAgIH0pO1xuICB9O1xuXG4gIGxvZ091dCA9ICgpID0+IHtcbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIHVzZXI6IHtcbiAgICAgICAgLi4udGhpcy5zdGF0ZS51c2VyLFxuICAgICAgICBlbWFpbDogXCJcIixcbiAgICAgICAgcGFzc3dvcmQ6IFwiXCIsXG4gICAgICAgIGlzTG9nZ2VkSW46IGZhbHNlLFxuICAgICAgfSxcbiAgICB9KTtcbiAgfTtcblxuICBtYXJrTm90aWZpY2F0aW9uQXNSZWFkKGlkKSB7XG4gICAgdGhpcy5zZXRTdGF0ZSgocHJldlN0YXRlKSA9PiAoe1xuICAgICAgbGlzdE5vdGlmaWNhdGlvbnM6IHByZXZTdGF0ZS5saXN0Tm90aWZpY2F0aW9ucy5maWx0ZXIoXG4gICAgICAgIChub3RpZmljYXRpb24pID0+IG5vdGlmaWNhdGlvbi5pZCAhPT0gaWRcbiAgICAgICksXG4gICAgfSkpO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIC8vIGNvbnN0IGxpc3RDb3Vyc2VzID0gW1xuICAgIC8vICAge1xuICAgIC8vICAgICBpZDogMSxcbiAgICAvLyAgICAgbmFtZTogXCJFUzZcIixcbiAgICAvLyAgICAgY3JlZGl0OiA2MCxcbiAgICAvLyAgIH0sXG4gICAgLy8gICB7XG4gICAgLy8gICAgIGlkOiAyLFxuICAgIC8vICAgICBuYW1lOiBcIldlYnBhY2tcIixcbiAgICAvLyAgICAgY3JlZGl0OiAyMCxcbiAgICAvLyAgIH0sXG4gICAgLy8gICB7XG4gICAgLy8gICAgIGlkOiAzLFxuICAgIC8vICAgICBuYW1lOiBcIlJlYWN0XCIsXG4gICAgLy8gICAgIGNyZWRpdDogNDAsXG4gICAgLy8gICB9LFxuICAgIC8vIF07XG5cbiAgICBjb25zdCByYW5kb21UZXh0ID1cbiAgICAgIFwiTG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2NpbmcgZWxpdC4gTnVsbGEgZWdldCBuZXF1ZSBvcm5hcmUsIHZlbmVuYXRpcyBlcm9zIG5vbiwgcGxhY2VyYXQgZWxpdC5cIjtcblxuICAgIHJldHVybiAoXG4gICAgICA8QXBwQ29udGV4dC5Qcm92aWRlclxuICAgICAgICB2YWx1ZT17eyB1c2VyOiB0aGlzLnN0YXRlLnVzZXIsIGxvZ091dDogdGhpcy5zdGF0ZS5sb2dPdXQgfX1cbiAgICAgID5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9e2NzcyhzdHlsZXMuYXBwKX0+XG4gICAgICAgICAgPE5vdGlmaWNhdGlvbnNcbiAgICAgICAgICAgIGxpc3ROb3RpZmljYXRpb25zPXt0aGlzLnN0YXRlLmxpc3ROb3RpZmljYXRpb25zfVxuICAgICAgICAgICAgbWFya05vdGlmaWNhdGlvbkFzUmVhZD17dGhpcy5tYXJrTm90aWZpY2F0aW9uQXNSZWFkfVxuICAgICAgICAgICAgZGlzcGxheURyYXdlcj17dGhpcy5zdGF0ZS5kaXNwbGF5RHJhd2VyfVxuICAgICAgICAgICAgaGFuZGxlRGlzcGxheURyYXdlcj17dGhpcy5oYW5kbGVEaXNwbGF5RHJhd2VyfVxuICAgICAgICAgICAgaGFuZGxlSGlkZURyYXdlcj17dGhpcy5oYW5kbGVIaWRlRHJhd2VyfVxuICAgICAgICAgIC8+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9e2NzcyhzdHlsZXMuYXBwSGVhZGVyKX0+XG4gICAgICAgICAgICA8SGVhZGVyIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9e2NzcyhzdHlsZXMuYXBwQm9keSl9PlxuICAgICAgICAgICAge3RoaXMuc3RhdGUudXNlci5pc0xvZ2dlZEluID8gKFxuICAgICAgICAgICAgICA8Qm9keVNlY3Rpb25XaXRoTWFyZ2luQm90dG9tIHRpdGxlPVwiQ291cnNlIGxpc3RcIj5cbiAgICAgICAgICAgICAgICA8Q291cnNlTGlzdCBsaXN0Q291cnNlcz17dGhpcy5saXN0Q291cnNlc30gLz5cbiAgICAgICAgICAgICAgPC9Cb2R5U2VjdGlvbldpdGhNYXJnaW5Cb3R0b20+XG4gICAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICA8Qm9keVNlY3Rpb25XaXRoTWFyZ2luQm90dG9tIHRpdGxlPVwiTG9nIGluIHRvIGNvbnRpbnVlXCI+XG4gICAgICAgICAgICAgICAgPExvZ2luIGxvZ0luPXt0aGlzLmxvZ0lufSAvPlxuICAgICAgICAgICAgICA8L0JvZHlTZWN0aW9uV2l0aE1hcmdpbkJvdHRvbT5cbiAgICAgICAgICAgICl9XG4gICAgICAgICAgICA8Qm9keVNlY3Rpb24gdGl0bGU9XCJOZXdzIGZyb20gdGhlIFNjaG9vbFwiPlxuICAgICAgICAgICAgICA8cD57cmFuZG9tVGV4dH08L3A+XG4gICAgICAgICAgICA8L0JvZHlTZWN0aW9uPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjc3Moc3R5bGVzLmFwcEZvb3Rlcil9PlxuICAgICAgICAgICAgPEZvb3RlciAvPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvQXBwQ29udGV4dC5Qcm92aWRlcj5cbiAgICApO1xuICB9XG59XG5cbi8vIERlZmluZSBzdHlsZXMgdXNpbmcgQXBocm9kaXRlXG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gIGFwcDoge1xuICAgIGRpc3BsYXk6IFwiZmxleFwiLFxuICAgIGZsZXhEaXJlY3Rpb246IFwiY29sdW1uXCIsXG4gICAgbWluSGVpZ2h0OiBcIjEwMHZoXCIsXG4gICAgZm9udEZhbWlseTogXCJQb3BwaW5zLCBzYW5zLXNlcmlmXCIsXG4gICAgbWFyZ2luOiBcIjAuNjI1cmVtXCIsXG4gICAgZmxleDogMSxcbiAgfSxcbiAgYXBwRm9vdGVyOiB7XG4gICAgZm9udEZhbWlseTogXCJQb3BwaW5zLCBzYW5zLXNlcmlmXCIsXG4gICAgZm9udFdlaWdodDogNDAwLFxuICAgIGNvbG9yOiBcIiMwMDAwMDBcIixcbiAgICBib3JkZXJUb3A6IFwiMS45cHggc29saWQgI2RjMzYzMFwiLFxuICAgIGhlaWdodDogXCIyLjVyZW1cIixcbiAgICB3aWR0aDogXCIxMDAlXCIsXG4gICAgZGlzcGxheTogXCJmbGV4XCIsXG4gICAganVzdGlmeUNvbnRlbnQ6IFwiY2VudGVyXCIsXG4gICAgZm9udFN0eWxlOiBcIml0YWxpY1wiLFxuICB9LFxufSk7XG5cbkFwcC5kZWZhdWx0UHJvcHMgPSB7XG4gIGlzTG9nZ2VkSW46IGZhbHNlLFxuICBsb2dPdXQ6ICgpID0+IHtcbiAgICByZXR1cm47XG4gIH0sXG59O1xuXG5BcHAucHJvcFR5cGVzID0ge1xuICBpc0xvZ2dlZEluOiBQcm9wVHlwZXMuYm9vbCxcbiAgbG9nT3V0OiBQcm9wVHlwZXMuZnVuYyxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEFwcDtcbiIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBSZWFjdERPTSBmcm9tIFwicmVhY3QtZG9tXCI7XG5pbXBvcnQgQXBwIGZyb20gXCIuL0FwcC9BcHBcIjtcblxuUmVhY3RET00ucmVuZGVyKFxuICA8UmVhY3QuU3RyaWN0TW9kZT5cbiAgICA8QXBwIC8+LFxuICA8L1JlYWN0LlN0cmljdE1vZGU+LFxuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInJvb3RcIilcbik7Il0sIm5hbWVzIjpbIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwicHVzaCIsIm1vZHVsZSIsImlkIiwicmF3QXNhcCIsImZyZWVUYXNrcyIsInBlbmRpbmdFcnJvcnMiLCJyZXF1ZXN0RXJyb3JUaHJvdyIsIm1ha2VSZXF1ZXN0Q2FsbEZyb21UaW1lciIsImxlbmd0aCIsInNoaWZ0IiwiYXNhcCIsInRhc2siLCJyYXdUYXNrIiwicG9wIiwiUmF3VGFzayIsInRoaXMiLCJleHBvcnRzIiwicHJvdG90eXBlIiwiY2FsbCIsImVycm9yIiwib25lcnJvciIsInF1ZXVlIiwicmVxdWVzdEZsdXNoIiwiaW5kZXgiLCJmbHVzaCIsImN1cnJlbnRJbmRleCIsInNjYW4iLCJuZXdMZW5ndGgiLCJ0b2dnbGUiLCJvYnNlcnZlciIsIm5vZGUiLCJzY29wZSIsImciLCJzZWxmIiwiQnJvd3Nlck11dGF0aW9uT2JzZXJ2ZXIiLCJNdXRhdGlvbk9ic2VydmVyIiwiV2ViS2l0TXV0YXRpb25PYnNlcnZlciIsImNhbGxiYWNrIiwidGltZW91dEhhbmRsZSIsInNldFRpbWVvdXQiLCJoYW5kbGVUaW1lciIsImludGVydmFsSGFuZGxlIiwic2V0SW50ZXJ2YWwiLCJjbGVhclRpbWVvdXQiLCJjbGVhckludGVydmFsIiwiZG9jdW1lbnQiLCJjcmVhdGVUZXh0Tm9kZSIsIm9ic2VydmUiLCJjaGFyYWN0ZXJEYXRhIiwiZGF0YSIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJsaXN0IiwidG9TdHJpbmciLCJtYXAiLCJpdGVtIiwiY29udGVudCIsIm5lZWRMYXllciIsImNvbmNhdCIsImpvaW4iLCJpIiwibW9kdWxlcyIsIm1lZGlhIiwiZGVkdXBlIiwic3VwcG9ydHMiLCJsYXllciIsInVuZGVmaW5lZCIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJrIiwiX2siLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsInNvdXJjZU1hcHBpbmciLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJPYmplY3QiLCJoYXNPd25Qcm9wZXJ0eSIsInByb3BJc0VudW1lcmFibGUiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsImFzc2lnbiIsInRlc3QxIiwiU3RyaW5nIiwiZ2V0T3duUHJvcGVydHlOYW1lcyIsInRlc3QyIiwiZnJvbUNoYXJDb2RlIiwibiIsInRlc3QzIiwic3BsaXQiLCJmb3JFYWNoIiwibGV0dGVyIiwia2V5cyIsImVyciIsInNob3VsZFVzZU5hdGl2ZSIsInRhcmdldCIsInNvdXJjZSIsImZyb20iLCJzeW1ib2xzIiwidG8iLCJ2YWwiLCJUeXBlRXJyb3IiLCJ0b09iamVjdCIsInMiLCJhcmd1bWVudHMiLCJrZXkiLCJSZWFjdFByb3BUeXBlc1NlY3JldCIsImVtcHR5RnVuY3Rpb24iLCJlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0IiwicmVzZXRXYXJuaW5nQ2FjaGUiLCJzaGltIiwicHJvcHMiLCJwcm9wTmFtZSIsImNvbXBvbmVudE5hbWUiLCJsb2NhdGlvbiIsInByb3BGdWxsTmFtZSIsInNlY3JldCIsIkVycm9yIiwibmFtZSIsImdldFNoaW0iLCJpc1JlcXVpcmVkIiwiUmVhY3RQcm9wVHlwZXMiLCJhcnJheSIsImJpZ2ludCIsImJvb2wiLCJmdW5jIiwibnVtYmVyIiwib2JqZWN0Iiwic3RyaW5nIiwic3ltYm9sIiwiYW55IiwiYXJyYXlPZiIsImVsZW1lbnQiLCJlbGVtZW50VHlwZSIsImluc3RhbmNlT2YiLCJvYmplY3RPZiIsIm9uZU9mIiwib25lT2ZUeXBlIiwic2hhcGUiLCJleGFjdCIsImNoZWNrUHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwiYWEiLCJyIiwidSIsImEiLCJiIiwiYyIsImJhIiwiZCIsImUiLCJmIiwiaCIsImwiLCJBcnJheSIsInNsaWNlIiwiYXBwbHkiLCJtIiwib25FcnJvciIsImRhIiwiZWEiLCJmYSIsImhhIiwiaWEiLCJqYSIsImxhIiwibWEiLCJuYSIsIm9hIiwidHlwZSIsImN1cnJlbnRUYXJnZXQiLCJrYSIsInBhIiwicWEiLCJyYSIsImluZGV4T2YiLCJzYSIsImV4dHJhY3RFdmVudHMiLCJldmVudFR5cGVzIiwidGEiLCJwaGFzZWRSZWdpc3RyYXRpb25OYW1lcyIsInVhIiwicmVnaXN0cmF0aW9uTmFtZSIsInZhIiwid2EiLCJkZXBlbmRlbmNpZXMiLCJ4YSIsInlhIiwid2luZG93IiwiY3JlYXRlRWxlbWVudCIsInphIiwiQWEiLCJCYSIsIkNhIiwic3RhdGVOb2RlIiwiRGEiLCJFYSIsIkZhIiwiR2EiLCJIYSIsIklhIiwiSmEiLCJLYSIsIkxhIiwiTWEiLCJOYSIsIk9hIiwiUGEiLCJRYSIsInYiLCJhY2NlcHRzQm9vbGVhbnMiLCJhdHRyaWJ1dGVOYW1lIiwiYXR0cmlidXRlTmFtZXNwYWNlIiwibXVzdFVzZVByb3BlcnR5IiwicHJvcGVydHlOYW1lIiwic2FuaXRpemVVUkwiLCJDIiwidG9Mb3dlckNhc2UiLCJVYSIsIlZhIiwidG9VcHBlckNhc2UiLCJyZXBsYWNlIiwieGxpbmtIcmVmIiwiV2EiLCJfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCIsIlhhIiwiU2EiLCJpc05hTiIsIlRhIiwidGVzdCIsIlJhIiwicmVtb3ZlQXR0cmlidXRlIiwic2V0QXR0cmlidXRlIiwic2V0QXR0cmlidXRlTlMiLCJSZWFjdEN1cnJlbnREaXNwYXRjaGVyIiwiY3VycmVudCIsIlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnIiwic3VzcGVuc2UiLCJZYSIsIkUiLCJTeW1ib2wiLCJmb3IiLCJaYSIsIiRhIiwiYWIiLCJiYiIsImNiIiwiZGIiLCJlYiIsImZiIiwiZ2IiLCJoYiIsImliIiwiamIiLCJrYiIsImxiIiwibWIiLCJpdGVyYXRvciIsIm5iIiwicGIiLCJkaXNwbGF5TmFtZSIsIiQkdHlwZW9mIiwicmVuZGVyIiwiX3N0YXR1cyIsIl9yZXN1bHQiLCJxYiIsInRhZyIsIl9kZWJ1Z093bmVyIiwiX2RlYnVnU291cmNlIiwiZmlsZU5hbWUiLCJsaW5lTnVtYmVyIiwicmV0dXJuIiwicmIiLCJzYiIsIm5vZGVOYW1lIiwieGIiLCJfdmFsdWVUcmFja2VyIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiY29uc3RydWN0b3IiLCJnZXQiLCJzZXQiLCJkZWZpbmVQcm9wZXJ0eSIsImNvbmZpZ3VyYWJsZSIsImVudW1lcmFibGUiLCJnZXRWYWx1ZSIsInNldFZhbHVlIiwic3RvcFRyYWNraW5nIiwidGIiLCJ5YiIsImNoZWNrZWQiLCJ2YWx1ZSIsInpiIiwiZGVmYXVsdENoZWNrZWQiLCJkZWZhdWx0VmFsdWUiLCJfd3JhcHBlclN0YXRlIiwiaW5pdGlhbENoZWNrZWQiLCJBYiIsImluaXRpYWxWYWx1ZSIsImNvbnRyb2xsZWQiLCJCYiIsIkNiIiwiRGIiLCJFYiIsIm93bmVyRG9jdW1lbnQiLCJhY3RpdmVFbGVtZW50IiwiR2IiLCJjaGlsZHJlbiIsIkNoaWxkcmVuIiwiRmIiLCJIYiIsIm9wdGlvbnMiLCJzZWxlY3RlZCIsImRlZmF1bHRTZWxlY3RlZCIsImRpc2FibGVkIiwiSWIiLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsIkpiIiwiaXNBcnJheSIsIktiIiwiTGIiLCJ0ZXh0Q29udGVudCIsIk5iIiwiT2IiLCJQYiIsIlFiIiwibmFtZXNwYWNlVVJJIiwiaW5uZXJIVE1MIiwidmFsdWVPZiIsImZpcnN0Q2hpbGQiLCJyZW1vdmVDaGlsZCIsImFwcGVuZENoaWxkIiwiTVNBcHAiLCJleGVjVW5zYWZlTG9jYWxGdW5jdGlvbiIsIlJiIiwibGFzdENoaWxkIiwibm9kZVR5cGUiLCJub2RlVmFsdWUiLCJTYiIsIlRiIiwiYW5pbWF0aW9uZW5kIiwiYW5pbWF0aW9uaXRlcmF0aW9uIiwiYW5pbWF0aW9uc3RhcnQiLCJ0cmFuc2l0aW9uZW5kIiwiVWIiLCJWYiIsIldiIiwic3R5bGUiLCJhbmltYXRpb24iLCJ0cmFuc2l0aW9uIiwiWGIiLCJZYiIsIlpiIiwiJGIiLCJhYyIsImJjIiwiV2Vha01hcCIsIk1hcCIsImNjIiwiZGMiLCJhbHRlcm5hdGUiLCJlZmZlY3RUYWciLCJlYyIsIm1lbW9pemVkU3RhdGUiLCJkZWh5ZHJhdGVkIiwiZmMiLCJoYyIsImNoaWxkIiwic2libGluZyIsImdjIiwiaWMiLCJqYyIsImtjIiwibGMiLCJfZGlzcGF0Y2hMaXN0ZW5lcnMiLCJfZGlzcGF0Y2hJbnN0YW5jZXMiLCJpc1Byb3BhZ2F0aW9uU3RvcHBlZCIsImlzUGVyc2lzdGVudCIsInJlbGVhc2UiLCJtYyIsIm5jIiwic3JjRWxlbWVudCIsImNvcnJlc3BvbmRpbmdVc2VFbGVtZW50IiwicGFyZW50Tm9kZSIsIm9jIiwicGMiLCJxYyIsInRvcExldmVsVHlwZSIsIm5hdGl2ZUV2ZW50IiwidGFyZ2V0SW5zdCIsImFuY2VzdG9ycyIsInJjIiwiZXZlbnRTeXN0ZW1GbGFncyIsInNjIiwiY29udGFpbmVySW5mbyIsInRjIiwidWMiLCJoYXMiLCJ2YyIsIkYiLCJ3YyIsInhjIiwieWMiLCJ6YyIsIkFjIiwiQmMiLCJDYyIsIkRjIiwiRWMiLCJGYyIsIkdjIiwiSGMiLCJJYyIsIktjIiwiYmxvY2tlZE9uIiwiY29udGFpbmVyIiwiTGMiLCJkZWxldGUiLCJwb2ludGVySWQiLCJNYyIsIk5jIiwiUGMiLCJ1bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHkiLCJwcmlvcml0eSIsImh5ZHJhdGUiLCJRYyIsIlJjIiwiU2MiLCJUYyIsIlVjIiwidW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayIsInVuc3RhYmxlX05vcm1hbFByaW9yaXR5IiwiVmMiLCJXYyIsIlljIiwiWmMiLCIkYyIsImFkIiwiYnViYmxlZCIsImNhcHR1cmVkIiwiZXZlbnRQcmlvcml0eSIsImJkIiwiY2QiLCJkZCIsInVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5IiwiZWQiLCJmZCIsImdkIiwiYmluZCIsImhkIiwiYWRkRXZlbnRMaXN0ZW5lciIsIk9jIiwiamQiLCJhbmltYXRpb25JdGVyYXRpb25Db3VudCIsImJvcmRlckltYWdlT3V0c2V0IiwiYm9yZGVySW1hZ2VTbGljZSIsImJvcmRlckltYWdlV2lkdGgiLCJib3hGbGV4IiwiYm94RmxleEdyb3VwIiwiYm94T3JkaW5hbEdyb3VwIiwiY29sdW1uQ291bnQiLCJjb2x1bW5zIiwiZmxleCIsImZsZXhHcm93IiwiZmxleFBvc2l0aXZlIiwiZmxleFNocmluayIsImZsZXhOZWdhdGl2ZSIsImZsZXhPcmRlciIsImdyaWRBcmVhIiwiZ3JpZFJvdyIsImdyaWRSb3dFbmQiLCJncmlkUm93U3BhbiIsImdyaWRSb3dTdGFydCIsImdyaWRDb2x1bW4iLCJncmlkQ29sdW1uRW5kIiwiZ3JpZENvbHVtblNwYW4iLCJncmlkQ29sdW1uU3RhcnQiLCJmb250V2VpZ2h0IiwibGluZUNsYW1wIiwibGluZUhlaWdodCIsIm9wYWNpdHkiLCJvcmRlciIsIm9ycGhhbnMiLCJ0YWJTaXplIiwid2lkb3dzIiwiekluZGV4Iiwiem9vbSIsImZpbGxPcGFjaXR5IiwiZmxvb2RPcGFjaXR5Iiwic3RvcE9wYWNpdHkiLCJzdHJva2VEYXNoYXJyYXkiLCJzdHJva2VEYXNob2Zmc2V0Iiwic3Ryb2tlTWl0ZXJsaW1pdCIsInN0cm9rZU9wYWNpdHkiLCJzdHJva2VXaWR0aCIsImtkIiwibGQiLCJ0cmltIiwibWQiLCJzZXRQcm9wZXJ0eSIsImNoYXJBdCIsInN1YnN0cmluZyIsIm5kIiwibWVudWl0ZW0iLCJhcmVhIiwiYmFzZSIsImJyIiwiY29sIiwiZW1iZWQiLCJociIsImltZyIsImlucHV0Iiwia2V5Z2VuIiwibGluayIsIm1ldGEiLCJwYXJhbSIsInRyYWNrIiwid2JyIiwib2QiLCJwZCIsImlzIiwicWQiLCJyZCIsInNkIiwidGQiLCJib2R5IiwidWQiLCJ2ZCIsIm9mZnNldCIsIm5leHRTaWJsaW5nIiwid2QiLCJjb250YWlucyIsImNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIiwieGQiLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnRXaW5kb3ciLCJocmVmIiwieWQiLCJjb250ZW50RWRpdGFibGUiLCJ6ZCIsIkFkIiwiQmQiLCJDZCIsIkRkIiwiRWQiLCJGZCIsImF1dG9Gb2N1cyIsIkdkIiwiX19odG1sIiwiSGQiLCJJZCIsIkpkIiwiS2QiLCJwcmV2aW91c1NpYmxpbmciLCJMZCIsIk1hdGgiLCJyYW5kb20iLCJNZCIsIk5kIiwiT2QiLCJQZCIsIlFkIiwiUmQiLCJTZCIsIlRkIiwiZGlzcGF0Y2hDb25maWciLCJVZCIsIl90YXJnZXRJbnN0IiwiVmQiLCJXZCIsIlhkIiwiWWQiLCJaZCIsIiRkIiwiYWUiLCJiZSIsImNlIiwiRyIsIkludGVyZmFjZSIsImlzRGVmYXVsdFByZXZlbnRlZCIsImRlZmF1bHRQcmV2ZW50ZWQiLCJyZXR1cm5WYWx1ZSIsImVlIiwiZXZlbnRQb29sIiwiZmUiLCJkZXN0cnVjdG9yIiwiZGUiLCJnZXRQb29sZWQiLCJwcmV2ZW50RGVmYXVsdCIsInN0b3BQcm9wYWdhdGlvbiIsImNhbmNlbEJ1YmJsZSIsInBlcnNpc3QiLCJldmVudFBoYXNlIiwiYnViYmxlcyIsImNhbmNlbGFibGUiLCJ0aW1lU3RhbXAiLCJEYXRlIiwibm93IiwiaXNUcnVzdGVkIiwiZXh0ZW5kIiwiZ2UiLCJoZSIsImllIiwiamUiLCJrZSIsImRvY3VtZW50TW9kZSIsImxlIiwibWUiLCJuZSIsIm9lIiwiYmVmb3JlSW5wdXQiLCJjb21wb3NpdGlvbkVuZCIsImNvbXBvc2l0aW9uU3RhcnQiLCJjb21wb3NpdGlvblVwZGF0ZSIsInBlIiwicWUiLCJrZXlDb2RlIiwicmUiLCJkZXRhaWwiLCJzZSIsInZlIiwibG9jYWxlIiwid2hpY2giLCJ0ZSIsImN0cmxLZXkiLCJhbHRLZXkiLCJtZXRhS2V5IiwiY2hhciIsInVlIiwid2UiLCJjb2xvciIsImRhdGUiLCJkYXRldGltZSIsImVtYWlsIiwibW9udGgiLCJwYXNzd29yZCIsInJhbmdlIiwic2VhcmNoIiwidGVsIiwidGV4dCIsInRpbWUiLCJ1cmwiLCJ3ZWVrIiwieGUiLCJ5ZSIsImNoYW5nZSIsInplIiwiQWUiLCJCZSIsIkNlIiwiRGUiLCJFZSIsIkZlIiwiR2UiLCJkZXRhY2hFdmVudCIsIkhlIiwiSWUiLCJhdHRhY2hFdmVudCIsIkplIiwiS2UiLCJMZSIsIk1lIiwiX2lzSW5wdXRFdmVudFN1cHBvcnRlZCIsIk5lIiwidmlldyIsIk9lIiwiQWx0IiwiQ29udHJvbCIsIk1ldGEiLCJTaGlmdCIsIlBlIiwiZ2V0TW9kaWZpZXJTdGF0ZSIsIlFlIiwiUmUiLCJTZSIsIlRlIiwiVWUiLCJWZSIsInNjcmVlblgiLCJzY3JlZW5ZIiwiY2xpZW50WCIsImNsaWVudFkiLCJwYWdlWCIsInBhZ2VZIiwic2hpZnRLZXkiLCJidXR0b24iLCJidXR0b25zIiwicmVsYXRlZFRhcmdldCIsImZyb21FbGVtZW50IiwidG9FbGVtZW50IiwibW92ZW1lbnRYIiwibW92ZW1lbnRZIiwiV2UiLCJ3aWR0aCIsImhlaWdodCIsInByZXNzdXJlIiwidGFuZ2VudGlhbFByZXNzdXJlIiwidGlsdFgiLCJ0aWx0WSIsInR3aXN0IiwicG9pbnRlclR5cGUiLCJpc1ByaW1hcnkiLCJYZSIsIm1vdXNlRW50ZXIiLCJtb3VzZUxlYXZlIiwicG9pbnRlckVudGVyIiwicG9pbnRlckxlYXZlIiwiWWUiLCJkZWZhdWx0VmlldyIsInBhcmVudFdpbmRvdyIsInAiLCIkZSIsImFmIiwiYmYiLCJjZiIsImRmIiwic2VsZWN0IiwiZWYiLCJmZiIsImdmIiwiaGYiLCJqZiIsInN0YXJ0Iiwic2VsZWN0aW9uU3RhcnQiLCJlbmQiLCJzZWxlY3Rpb25FbmQiLCJhbmNob3JOb2RlIiwiZ2V0U2VsZWN0aW9uIiwiYW5jaG9yT2Zmc2V0IiwiZm9jdXNOb2RlIiwiZm9jdXNPZmZzZXQiLCJrZiIsIm9uU2VsZWN0IiwibGYiLCJhbmltYXRpb25OYW1lIiwiZWxhcHNlZFRpbWUiLCJwc2V1ZG9FbGVtZW50IiwibWYiLCJjbGlwYm9hcmREYXRhIiwibmYiLCJvZiIsImNoYXJDb2RlIiwicGYiLCJFc2MiLCJTcGFjZWJhciIsIkxlZnQiLCJVcCIsIlJpZ2h0IiwiRG93biIsIkRlbCIsIldpbiIsIk1lbnUiLCJBcHBzIiwiU2Nyb2xsIiwiTW96UHJpbnRhYmxlS2V5IiwicWYiLCJyZiIsInJlcGVhdCIsInNmIiwiZGF0YVRyYW5zZmVyIiwidGYiLCJ0b3VjaGVzIiwidGFyZ2V0VG91Y2hlcyIsImNoYW5nZWRUb3VjaGVzIiwidWYiLCJ2ZiIsImRlbHRhWCIsIndoZWVsRGVsdGFYIiwiZGVsdGFZIiwid2hlZWxEZWx0YVkiLCJ3aGVlbERlbHRhIiwiZGVsdGFaIiwiZGVsdGFNb2RlIiwid2YiLCJTaW1wbGVFdmVudFBsdWdpbiIsIkVudGVyTGVhdmVFdmVudFBsdWdpbiIsIkNoYW5nZUV2ZW50UGx1Z2luIiwiU2VsZWN0RXZlbnRQbHVnaW4iLCJCZWZvcmVJbnB1dEV2ZW50UGx1Z2luIiwieWYiLCJ6ZiIsIkgiLCJJIiwiQWYiLCJKIiwiSyIsIkJmIiwiQ2YiLCJjb250ZXh0VHlwZXMiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0IiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQiLCJMIiwiY2hpbGRDb250ZXh0VHlwZXMiLCJEZiIsIkVmIiwiRmYiLCJnZXRDaGlsZENvbnRleHQiLCJHZiIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0IiwiSGYiLCJJZiIsIkpmIiwiS2YiLCJ1bnN0YWJsZV9jYW5jZWxDYWxsYmFjayIsIkxmIiwidW5zdGFibGVfcmVxdWVzdFBhaW50IiwiTWYiLCJ1bnN0YWJsZV9ub3ciLCJOZiIsInVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsIiwiT2YiLCJ1bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSIsIlBmIiwiUWYiLCJSZiIsInVuc3RhYmxlX0xvd1ByaW9yaXR5IiwiU2YiLCJ1bnN0YWJsZV9JZGxlUHJpb3JpdHkiLCJUZiIsIlVmIiwidW5zdGFibGVfc2hvdWxkWWllbGQiLCJWZiIsIldmIiwiWGYiLCJZZiIsIlpmIiwiJGYiLCJhZyIsImJnIiwiY2ciLCJkZyIsImVnIiwiZmciLCJnZyIsImhnIiwiaWciLCJkZWZhdWx0UHJvcHMiLCJqZyIsImtnIiwibGciLCJtZyIsIm5nIiwib2ciLCJfY29udGV4dCIsIl9jdXJyZW50VmFsdWUiLCJwZyIsImNoaWxkRXhwaXJhdGlvblRpbWUiLCJxZyIsImZpcnN0Q29udGV4dCIsImV4cGlyYXRpb25UaW1lIiwicmciLCJzZyIsImNvbnRleHQiLCJvYnNlcnZlZEJpdHMiLCJuZXh0IiwicmVzcG9uZGVycyIsInRnIiwidWciLCJ1cGRhdGVRdWV1ZSIsImJhc2VTdGF0ZSIsImJhc2VRdWV1ZSIsInNoYXJlZCIsInBlbmRpbmciLCJlZmZlY3RzIiwidmciLCJ3ZyIsInN1c3BlbnNlQ29uZmlnIiwicGF5bG9hZCIsInhnIiwieWciLCJ6ZyIsIngiLCJ6IiwiY2EiLCJBZyIsIkQiLCJ0IiwiQmciLCJDZyIsIkRnIiwiRWciLCJDb21wb25lbnQiLCJyZWZzIiwiRmciLCJKZyIsImlzTW91bnRlZCIsIl9yZWFjdEludGVybmFsRmliZXIiLCJlbnF1ZXVlU2V0U3RhdGUiLCJHZyIsIkhnIiwiSWciLCJlbnF1ZXVlUmVwbGFjZVN0YXRlIiwiZW5xdWV1ZUZvcmNlVXBkYXRlIiwiS2ciLCJzaG91bGRDb21wb25lbnRVcGRhdGUiLCJpc1B1cmVSZWFjdENvbXBvbmVudCIsIkxnIiwiY29udGV4dFR5cGUiLCJzdGF0ZSIsInVwZGF0ZXIiLCJNZyIsImNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJVTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIk5nIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzIiwiZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUiLCJVTlNBRkVfY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50RGlkTW91bnQiLCJPZyIsIlBnIiwicmVmIiwiX293bmVyIiwiX3N0cmluZ1JlZiIsIlFnIiwiUmciLCJsYXN0RWZmZWN0IiwibmV4dEVmZmVjdCIsImZpcnN0RWZmZWN0IiwiU2ciLCJUZyIsIm1vZGUiLCJVZyIsImltcGxlbWVudGF0aW9uIiwiVmciLCJXZyIsInkiLCJBIiwicSIsImRvbmUiLCJYZyIsIllnIiwiWmciLCIkZyIsImFoIiwiYmgiLCJjaCIsImRoIiwiZG9jdW1lbnRFbGVtZW50IiwidGFnTmFtZSIsImVoIiwiZmgiLCJnaCIsIk0iLCJoaCIsIm1lbW9pemVkUHJvcHMiLCJyZXZlYWxPcmRlciIsImloIiwicmVzcG9uZGVyIiwiamgiLCJraCIsImxoIiwiTiIsIk8iLCJQIiwibWgiLCJRIiwibmgiLCJvaCIsInBoIiwicWgiLCJyaCIsInNoIiwidGgiLCJ1aCIsInZoIiwid2giLCJsYXN0UmVuZGVyZWRSZWR1Y2VyIiwiYWN0aW9uIiwiZWFnZXJSZWR1Y2VyIiwiZWFnZXJTdGF0ZSIsImxhc3RSZW5kZXJlZFN0YXRlIiwiZGlzcGF0Y2giLCJ4aCIsInloIiwiemgiLCJBaCIsImNyZWF0ZSIsImRlc3Ryb3kiLCJkZXBzIiwiQmgiLCJDaCIsIkRoIiwiRWgiLCJGaCIsIkdoIiwiSGgiLCJJaCIsIkpoIiwiS2giLCJMaCIsIk1oIiwiTmgiLCJyZWFkQ29udGV4dCIsInVzZUNhbGxiYWNrIiwidXNlQ29udGV4dCIsInVzZUVmZmVjdCIsInVzZUltcGVyYXRpdmVIYW5kbGUiLCJ1c2VMYXlvdXRFZmZlY3QiLCJ1c2VNZW1vIiwidXNlUmVkdWNlciIsInVzZVJlZiIsInVzZVN0YXRlIiwidXNlRGVidWdWYWx1ZSIsInVzZVJlc3BvbmRlciIsInVzZURlZmVycmVkVmFsdWUiLCJ1c2VUcmFuc2l0aW9uIiwiT2giLCJQaCIsIlFoIiwiUmgiLCJTaCIsIlRoIiwicGVuZGluZ1Byb3BzIiwiVWgiLCJWaCIsIldoIiwiWGgiLCJZaCIsIlJlYWN0Q3VycmVudE93bmVyIiwiUiIsIlpoIiwiJGgiLCJhaSIsImJpIiwiY29tcGFyZSIsImNpIiwiZGkiLCJlaSIsImZpIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50RGlkVXBkYXRlIiwiZ2kiLCJnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3IiLCJoaSIsInBlbmRpbmdDb250ZXh0IiwibmkiLCJvaSIsInBpIiwicWkiLCJpaSIsInJldHJ5VGltZSIsImppIiwiZmFsbGJhY2siLCJ1bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFjayIsImtpIiwibGkiLCJpc0JhY2t3YXJkcyIsInJlbmRlcmluZyIsInJlbmRlcmluZ1N0YXJ0VGltZSIsImxhc3QiLCJ0YWlsIiwidGFpbEV4cGlyYXRpb24iLCJ0YWlsTW9kZSIsIm1pIiwicmkiLCJzaSIsIndhc011bHRpcGxlIiwibXVsdGlwbGUiLCJvbkNsaWNrIiwib25jbGljayIsInNpemUiLCJjcmVhdGVFbGVtZW50TlMiLCJTIiwidGkiLCJ1aSIsInZpIiwid2kiLCJUIiwieGkiLCJVIiwieWkiLCJ6aSIsIkFpIiwic3RhY2siLCJCaSIsIldlYWtTZXQiLCJTZXQiLCJDaSIsImNvbnNvbGUiLCJGaSIsIkVpIiwiR2kiLCJfX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsIkhpIiwiSWkiLCJKaSIsImZvY3VzIiwiS2kiLCJMaSIsImNvbXBvbmVudFdpbGxVbm1vdW50IiwiRGkiLCJNaSIsIk5pIiwiT2kiLCJQaSIsIlFpIiwiUmkiLCJpbnN0YW5jZSIsImluc2VydEJlZm9yZSIsIl9yZWFjdFJvb3RDb250YWluZXIiLCJTaSIsIlRpIiwiZGlzcGxheSIsIlVpIiwiVmkiLCJhZGQiLCJ0aGVuIiwiV2kiLCJYaSIsIllpIiwiWmkiLCIkaSIsImNvbXBvbmVudERpZENhdGNoIiwiYWoiLCJjb21wb25lbnRTdGFjayIsIlJqIiwiYmoiLCJjZWlsIiwiY2oiLCJkaiIsIlYiLCJlaiIsImZqIiwiZ2oiLCJoaiIsImlqIiwiamoiLCJXIiwiWCIsImtqIiwibGoiLCJtaiIsIm5qIiwib2oiLCJwaiIsIlkiLCJxaiIsInJqIiwic2oiLCJ0aiIsInVqIiwidmoiLCJ3aiIsInRpbWVvdXRNcyIsInhqIiwieWoiLCJaIiwiemoiLCJsYXN0RXhwaXJlZFRpbWUiLCJBaiIsImZpcnN0UGVuZGluZ1RpbWUiLCJsYXN0UGluZ2VkVGltZSIsIm5leHRLbm93blBlbmRpbmdMZXZlbCIsImNhbGxiYWNrRXhwaXJhdGlvblRpbWUiLCJjYWxsYmFja1ByaW9yaXR5IiwiY2FsbGJhY2tOb2RlIiwiQmoiLCJ0aW1lb3V0IiwiQ2oiLCJEaiIsIkVqIiwiRmoiLCJHaiIsIkhqIiwiZmluaXNoZWRXb3JrIiwiZmluaXNoZWRFeHBpcmF0aW9uVGltZSIsImxhc3RTdXNwZW5kZWRUaW1lIiwiSWoiLCJKaiIsImJ1c3lNaW5EdXJhdGlvbk1zIiwiYnVzeURlbGF5TXMiLCJLaiIsIk1qIiwiTmoiLCJwaW5nQ2FjaGUiLCJPaiIsInciLCJ1YiIsIlBqIiwiWGMiLCJRaiIsIlNqIiwiZmlyc3RTdXNwZW5kZWRUaW1lIiwicmFuZ2VDb3VudCIsIndiIiwiYWN0aXZlRWxlbWVudERldGFjaGVkIiwiZm9jdXNlZEVsZW0iLCJzZWxlY3Rpb25SYW5nZSIsIlRqIiwiQiIsIm1pbiIsImNyZWF0ZVJhbmdlIiwic2V0U3RhcnQiLCJyZW1vdmVBbGxSYW5nZXMiLCJhZGRSYW5nZSIsInNldEVuZCIsImxlZnQiLCJzY3JvbGxMZWZ0IiwidG9wIiwic2Nyb2xsVG9wIiwidmIiLCJVaiIsIlZqIiwiV2oiLCJoaWRkZW4iLCJfY3RvciIsImRlZmF1bHQiLCJvYiIsIlhqIiwiX2NhbGN1bGF0ZUNoYW5nZWRCaXRzIiwidW5zdGFibGVfb2JzZXJ2ZWRCaXRzIiwiWmoiLCJpc1JlYWN0Q29tcG9uZW50IiwicGVuZGluZ0NoaWxkcmVuIiwiYWsiLCJiayIsImNrIiwiZGsiLCJlayIsImZrIiwiSmMiLCJfaW50ZXJuYWxSb290IiwiZ2siLCJpayIsImhhc0F0dHJpYnV0ZSIsImhrIiwia2siLCJqayIsInVubW91bnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9ybSIsIkxqIiwibGsiLCJFdmVudHMiLCJmaW5kRmliZXJCeUhvc3RJbnN0YW5jZSIsIl9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyIsImlzRGlzYWJsZWQiLCJzdXBwb3J0c0ZpYmVyIiwiaW5qZWN0Iiwib25Db21taXRGaWJlclJvb3QiLCJvbkNvbW1pdEZpYmVyVW5tb3VudCIsIllqIiwib3ZlcnJpZGVIb29rU3RhdGUiLCJvdmVycmlkZVByb3BzIiwic2V0U3VzcGVuc2VIYW5kbGVyIiwic2NoZWR1bGVVcGRhdGUiLCJjdXJyZW50RGlzcGF0Y2hlclJlZiIsImZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyIiwiZmluZEhvc3RJbnN0YW5jZXNGb3JSZWZyZXNoIiwic2NoZWR1bGVSZWZyZXNoIiwic2NoZWR1bGVSb290Iiwic2V0UmVmcmVzaEhhbmRsZXIiLCJnZXRDdXJyZW50RmliZXIiLCJidW5kbGVUeXBlIiwidmVyc2lvbiIsInJlbmRlcmVyUGFja2FnZU5hbWUiLCJjcmVhdGVQb3J0YWwiLCJmaW5kRE9NTm9kZSIsImZsdXNoU3luYyIsInVubW91bnRDb21wb25lbnRBdE5vZGUiLCJ1bnN0YWJsZV9iYXRjaGVkVXBkYXRlcyIsInVuc3RhYmxlX2NyZWF0ZVBvcnRhbCIsInVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyIiwiY2hlY2tEQ0UiLCJzZXRTdGF0ZSIsImZvcmNlVXBkYXRlIiwiX19zZWxmIiwiX19zb3VyY2UiLCJyZXN1bHQiLCJrZXlQcmVmaXgiLCJjb3VudCIsImVzY2FwZSIsIklzU29tZVJlbmRlcmVyQWN0aW5nIiwidG9BcnJheSIsIm9ubHkiLCJGcmFnbWVudCIsIlByb2ZpbGVyIiwiUHVyZUNvbXBvbmVudCIsIlN0cmljdE1vZGUiLCJTdXNwZW5zZSIsImNsb25lRWxlbWVudCIsImNyZWF0ZUNvbnRleHQiLCJfY3VycmVudFZhbHVlMiIsIl90aHJlYWRDb3VudCIsIlByb3ZpZGVyIiwiQ29uc3VtZXIiLCJjcmVhdGVGYWN0b3J5IiwiY3JlYXRlUmVmIiwiZm9yd2FyZFJlZiIsImlzVmFsaWRFbGVtZW50IiwibGF6eSIsIm1lbW8iLCJNZXNzYWdlQ2hhbm5lbCIsInVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlIiwicGVyZm9ybWFuY2UiLCJjYW5jZWxBbmltYXRpb25GcmFtZSIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImZsb29yIiwicG9ydDIiLCJwb3J0MSIsIm9ubWVzc2FnZSIsInBvc3RNZXNzYWdlIiwic29ydEluZGV4Iiwic3RhcnRUaW1lIiwicHJpb3JpdHlMZXZlbCIsInVuc3RhYmxlX1Byb2ZpbGluZyIsInVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uIiwidW5zdGFibGVfZ2V0Rmlyc3RDYWxsYmFja05vZGUiLCJ1bnN0YWJsZV9uZXh0IiwidW5zdGFibGVfcGF1c2VFeGVjdXRpb24iLCJkZWxheSIsInVuc3RhYmxlX3dyYXBDYWxsYmFjayIsInN0ciIsImhhc2giLCJjaGFyQ29kZUF0Iiwic3R5bGVzSW5ET00iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJtb2R1bGVzVG9Eb20iLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4Iiwic3BsaWNlIiwiYXBpIiwiZG9tQVBJIiwidXBkYXRlIiwibmV3T2JqIiwicmVtb3ZlIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwiaW5zZXJ0Iiwic3R5bGVUYXJnZXQiLCJxdWVyeVNlbGVjdG9yIiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImdldFRhcmdldCIsInNldEF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVzIiwic3R5bGVFbGVtZW50Iiwibm9uY2UiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsInJlbW92ZVN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsImdldHRlciIsIl9fZXNNb2R1bGUiLCJkZWZpbml0aW9uIiwibyIsImdsb2JhbFRoaXMiLCJGdW5jdGlvbiIsInByb3AiLCJzY3JpcHRVcmwiLCJpbXBvcnRTY3JpcHRzIiwiY3VycmVudFNjcmlwdCIsInNyYyIsInNjcmlwdHMiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsIk5vdGlmaWNhdGlvbkl0ZW0iLCJSZWFjdCIsIl9yZWYiLCJodG1sIiwibWFya0FzUmVhZCIsIml0ZW1TdHlsZSIsImhhbmRsZUNsaWNrIiwicHJvcFR5cGVzIiwiX3R5cGVvZiIsIl9kZWZpbmVQcm9wZXJ0eSIsIndyaXRhYmxlIiwiX29iamVjdFNwcmVhZCIsIm93bktleXMiLCJmaWx0ZXIiLCJzeW0iLCJfdG9Db25zdW1hYmxlQXJyYXkiLCJhcnIiLCJhcnIyIiwiX2FycmF5V2l0aG91dEhvbGVzIiwiaXRlciIsIl9pdGVyYWJsZVRvQXJyYXkiLCJfbm9uSXRlcmFibGVTcHJlYWQiLCJVUFBFUkNBU0VfUkUiLCJVUFBFUkNBU0VfUkVfVE9fS0VCQUIiLCJtYXRjaCIsImlzVW5pdGxlc3NOdW1iZXIiLCJwcmVmaXhlcyIsInByZWZpeCIsInByZWZpeEtleSIsInN0cmluZ2lmeVZhbHVlIiwic3RyaW5naWZ5QW5kSW1wb3J0YW50aWZ5VmFsdWUiLCJpbXBvcnRhbnRpZnkiLCJoYXNoU3RyaW5nIiwiTUFQX0VYSVNUUyIsIk9yZGVyZWRFbGVtZW50cyIsImVsZW1lbnRzIiwia2V5T3JkZXIiLCJfcHJvdG8iLCJzaG91bGRSZW9yZGVyIiwibmVzdGVkIiwiX25lc3RlZCIsImFkZFN0eWxlVHlwZSIsInN0eWxlVHlwZSIsIl90aGlzIiwidW53cmFwRXhwb3J0cyIsImNyZWF0ZUNvbW1vbmpzTW9kdWxlIiwiZm4iLCJjYXBpdGFsaXplU3RyaW5nXzEiLCJwcmVmaXhQcm9wZXJ0eV8xIiwicHJlZml4UHJvcGVydGllcyIsInByb3BlcnR5IiwibmV3U3R5bGUiLCJyZXF1aXJlZFByZWZpeGVzIiwiY2FwaXRhbGl6ZWRQcm9wZXJ0eSIsIl9jYXBpdGFsaXplU3RyaW5nMiIsInN0eWxlUHJvcGVydHkiLCJqIiwicHJlZml4VmFsdWVfMSIsInBsdWdpbnMiLCJtZXRhRGF0YSIsImxlbiIsInByb2Nlc3NlZFZhbHVlIiwiYWRkTmV3VmFsdWVzT25seV8xIiwiYWRkSWZOZXciLCJ2YWx1ZXMiLCJpc09iamVjdF8xIiwiY3JlYXRlUHJlZml4ZXJfMSIsInByZWZpeE1hcCIsIl9pc09iamVjdDIiLCJjb21iaW5lZFZhbHVlIiwiX3ByZWZpeFZhbHVlMiIsIl9hZGROZXdWYWx1ZXNPbmx5MiIsIl9wcm9jZXNzZWRWYWx1ZSIsIl9wcmVmaXhQcm9wZXJ0eTIiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiY3JlYXRlUHJlZml4ZXIiLCJiYWNrZ3JvdW5kQ2xpcF8xIiwiYmFja2dyb3VuZENsaXAiLCJpc1ByZWZpeGVkVmFsdWVfMSIsInJlZ2V4IiwiY2FsY18xIiwiX2lzUHJlZml4ZWRWYWx1ZTIiLCJjYWxjIiwiY3Jvc3NGYWRlXzEiLCJjcm9zc0ZhZGUiLCJjdXJzb3JfMSIsImdyYWIiLCJncmFiYmluZyIsImN1cnNvciIsImZpbHRlcl8xIiwiZmxleF8xIiwiZmxleGJveElFXzEiLCJhbHRlcm5hdGl2ZVByb3BzIiwiYWx0ZXJuYXRpdmVWYWx1ZXMiLCJmbGV4U2hvcnRoYW5kTWFwcGluZ3MiLCJtc0ZsZXgiLCJmbGV4VmFsdWVzIiwiYWxpZ25Db250ZW50IiwiYWxpZ25TZWxmIiwiYWxpZ25JdGVtcyIsImp1c3RpZnlDb250ZW50IiwiZmxleEJhc2lzIiwiYXV0byIsImluaGVyaXQiLCJpbml0aWFsIiwibm9uZSIsInVuc2V0IiwiZmxleGJveElFIiwiZmxleGJveE9sZF8xIiwiV2Via2l0Qm94T3JpZW50IiwiV2Via2l0Qm94RGlyZWN0aW9uIiwid3JhcCIsImZsZXhXcmFwIiwiZmxleGJveE9sZCIsImdyYWRpZW50XzEiLCJncmFkIiwiZ3JhZGllbnQiLCJncmlkXzEiLCJfc2xpY2VkVG9BcnJheSIsIl9hcnIiLCJfbiIsIl9kIiwiX2UiLCJfcyIsInNsaWNlSXRlcmF0b3IiLCJpc1NpbXBsZVBvc2l0aW9uVmFsdWUiLCJkaXNwbGF5VmFsdWVzIiwicHJvcGVydHlDb252ZXJ0ZXJzIiwicHJvcGVydHlDb252ZXJ0ZXIiLCJhbGlnbm1lbnRWYWx1ZXMiLCJncmlkIiwibXNHcmlkUm93QWxpZ24iLCJtc0dyaWRDb2x1bW4iLCJfdmFsdWUkc3BsaXQkbWFwIiwicG9zaXRpb24iLCJfdmFsdWUkc3BsaXQkbWFwMiIsIm1zR3JpZENvbHVtblNwYW4iLCJtc0dyaWRSb3ciLCJfdmFsdWUkc3BsaXQkbWFwMyIsIl92YWx1ZSRzcGxpdCRtYXA0IiwibXNHcmlkUm93U3BhbiIsImdyaWRUZW1wbGF0ZUNvbHVtbnMiLCJtc0dyaWRDb2x1bW5zIiwiZ3JpZFRlbXBsYXRlUm93cyIsIm1zR3JpZFJvd3MiLCJqdXN0aWZ5U2VsZiIsIm1zR3JpZENvbHVtbkFsaWduIiwiaW1hZ2VTZXRfMSIsImltYWdlU2V0IiwibG9naWNhbF8xIiwiYWx0ZXJuYXRpdmVQcm9wTGlzdCIsIm1hcmdpbkJsb2NrU3RhcnQiLCJtYXJnaW5CbG9ja0VuZCIsIm1hcmdpbklubGluZVN0YXJ0IiwibWFyZ2luSW5saW5lRW5kIiwicGFkZGluZ0Jsb2NrU3RhcnQiLCJwYWRkaW5nQmxvY2tFbmQiLCJwYWRkaW5nSW5saW5lU3RhcnQiLCJwYWRkaW5nSW5saW5lRW5kIiwiYm9yZGVyQmxvY2tTdGFydCIsImJvcmRlckJsb2NrU3RhcnRDb2xvciIsImJvcmRlckJsb2NrU3RhcnRTdHlsZSIsImJvcmRlckJsb2NrU3RhcnRXaWR0aCIsImJvcmRlckJsb2NrRW5kIiwiYm9yZGVyQmxvY2tFbmRDb2xvciIsImJvcmRlckJsb2NrRW5kU3R5bGUiLCJib3JkZXJCbG9ja0VuZFdpZHRoIiwiYm9yZGVySW5saW5lU3RhcnQiLCJib3JkZXJJbmxpbmVTdGFydENvbG9yIiwiYm9yZGVySW5saW5lU3RhcnRTdHlsZSIsImJvcmRlcklubGluZVN0YXJ0V2lkdGgiLCJib3JkZXJJbmxpbmVFbmQiLCJib3JkZXJJbmxpbmVFbmRDb2xvciIsImJvcmRlcklubGluZUVuZFN0eWxlIiwiYm9yZGVySW5saW5lRW5kV2lkdGgiLCJsb2dpY2FsIiwicG9zaXRpb25fMSIsInNpemluZ18xIiwicHJvcGVydGllcyIsIm1heEhlaWdodCIsIm1heFdpZHRoIiwiY29sdW1uV2lkdGgiLCJtaW5XaWR0aCIsIm1pbkhlaWdodCIsInNpemluZyIsInVwcGVyY2FzZVBhdHRlcm4iLCJtc1BhdHRlcm4iLCJjYWNoZSIsInRvSHlwaGVuTG93ZXIiLCJfaHlwaGVuYXRlU3R5bGVOYW1lIiwiZnJlZXplIiwiaE5hbWUiLCJoeXBoZW5hdGVQcm9wZXJ0eV8xIiwiX2h5cGhlbmF0ZVN0eWxlTmFtZTIiLCJ0cmFuc2l0aW9uXzEiLCJwcm9wZXJ0eVByZWZpeE1hcCIsIm91dHB1dFZhbHVlIiwibXVsdGlwbGVWYWx1ZXMiLCJzaW5nbGVWYWx1ZSIsImRhc2hDYXNlUHJvcGVydHkiLCJfaHlwaGVuYXRlUHJvcGVydHkyIiwicExlbiIsInVuc2hpZnQiLCJwcmVmaXhNYXBwaW5nIiwicHJlZml4VmFsdWUiLCJ3ZWJraXRPdXRwdXQiLCJtb3pPdXRwdXQiLCJ0cmFuc2l0aW9uUHJvcGVydHkiLCJXZWJraXRUcmFuc2l0aW9uIiwiV2Via2l0VHJhbnNpdGlvblByb3BlcnR5IiwiTW96VHJhbnNpdGlvbiIsIk1velRyYW5zaXRpb25Qcm9wZXJ0eSIsIldlYmtpdCIsIk1veiIsIm1zIiwid20iLCJ3bXMiLCJ3bW1zIiwicHJlZml4QWxsIiwiZGVmYXVsdFNlbGVjdG9ySGFuZGxlcnMiLCJzZWxlY3RvciIsImJhc2VTZWxlY3RvciIsImdlbmVyYXRlU3VidHJlZVN0eWxlcyIsImdlbmVyYXRlZCIsImdlbmVyYXRlQ1NTIiwic3R5bGVUeXBlcyIsInNlbGVjdG9ySGFuZGxlcnMiLCJzdHJpbmdIYW5kbGVycyIsInVzZUltcG9ydGFudCIsIm1lcmdlZCIsInBsYWluRGVjbGFyYXRpb25zIiwiZ2VuZXJhdGVkU3R5bGVzIiwic29tZSIsImhhbmRsZXIiLCJuZXdTZWxlY3RvciIsIndhcm4iLCJnZW5lcmF0ZWRSdWxlc2V0IiwiZ2VuZXJhdGVDU1NSdWxlc2V0IiwidHJhbnNmb3JtUnVsZSIsInRyYW5zZm9ybVZhbHVlIiwiYXJyYXlUb09iamVjdEtleXNSZWR1Y2VyIiwiYWNjIiwiZGVjbGFyYXRpb25zIiwic3RyaW5nSGFuZGxlcktleXMiLCJydW5TdHJpbmdIYW5kbGVycyIsIm9yaWdpbmFsRWxlbWVudHMiLCJyZWR1Y2UiLCJwcmVmaXhlZEVsZW1lbnRzIiwiZWxlbWVudE5hbWVzIiwib3JpZ2luYWxTdHlsZSIsIm9yaWdpbmFsSW5kZXgiLCJydWxlcyIsInN0eWxlVGFnIiwiZm9udEZhbWlseSIsIm5hbWVNYXAiLCJpbmplY3RTdHlsZU9uY2UiLCJmaW5hbFZhbCIsInZhbFZhbCIsInZhbEtleSIsImluamVjdEdlbmVyYXRlZENTU09uY2UiLCJhbHJlYWR5SW5qZWN0ZWQiLCJpbmplY3Rpb25CdWZmZXIiLCJpc0J1ZmZlcmluZyIsImdlbmVyYXRlZENTUyIsIl9pbmplY3Rpb25CdWZmZXIiLCJmbHVzaFRvU3R5bGVUYWciLCJkZWZpbml0aW9ucyIsInJlc2V0SW5qZWN0ZWRTdHlsZSIsImZsdXNoVG9BcnJheSIsInJldCIsImNzc1J1bGVzIiwic2hlZXQiLCJpbnNlcnRSdWxlIiwibnVtUnVsZXMiLCJydWxlIiwiaW5uZXJUZXh0IiwiaW5qZWN0U3R5bGVUYWciLCJwcm9jZXNzU3R5bGVEZWZpbml0aW9ucyIsInN0eWxlRGVmaW5pdGlvbnMiLCJjbGFzc05hbWVCaXRzIiwiZGVmaW5pdGlvbkJpdHMiLCJkZWYiLCJfbmFtZSIsIl9kZWZpbml0aW9uIiwiX2xlbiIsImluamVjdEFuZEdldENsYXNzTmFtZSIsImNsYXNzTmFtZSIsInVubWluaWZpZWRIYXNoRm4iLCJoYXNoRm4iLCJTdHlsZVNoZWV0Iiwic2hlZXREZWZpbml0aW9uIiwibWFwcGVkU2hlZXREZWZpbml0aW9uIiwic3RyaW5nVmFsIiwicmVoeWRyYXRlIiwiU3R5bGVTaGVldFNlcnZlciIsInJlbmRlclN0YXRpYyIsInJlbmRlckZ1bmMiLCJzdGFydEJ1ZmZlcmluZyIsInJlbmRlcmVkQ2xhc3NOYW1lcyIsIkFwaHJvZGl0ZSIsIm1ha2VFeHBvcnRzIiwiZXh0ZW5zaW9ucyIsImV4dGVuc2lvblNlbGVjdG9ySGFuZGxlcnMiLCJleHRlbnNpb24iLCJzZWxlY3RvckhhbmRsZXIiLCJTdHlsZVNoZWV0VGVzdFV0aWxzIiwibWluaWZ5Iiwic2hvdWxkTWluaWZ5IiwiX2tleSIsInJlc2V0IiwiTm90aWZpY2F0aW9ucyIsIl9QdXJlQ29tcG9uZW50IiwiX2NsYXNzQ2FsbENoZWNrIiwiX2NhbGxTdXBlciIsIl9pbmhlcml0cyIsIl90aGlzJHByb3BzIiwibGlzdE5vdGlmaWNhdGlvbnMiLCJkaXNwbGF5RHJhd2VyIiwiaGFuZGxlRGlzcGxheURyYXdlciIsImhhbmRsZUhpZGVEcmF3ZXIiLCJtYXJrTm90aWZpY2F0aW9uQXNSZWFkIiwic3R5bGVzIiwibWVudUl0ZW0iLCJiYWNrZ3JvdW5kIiwiYm9yZGVyIiwiZm9udFNpemUiLCJyaWdodCIsImJ1dHRvbkltYWdlIiwiY2xvc2VJY29uIiwiYWx0IiwiTm90aWZpY2F0aW9uc1RleHQiLCJOb3RpZmljYXRpb25zTGlzdCIsInBhZGRpbmciLCJiYWNrZ3JvdW5kQ29sb3IiLCJib3hTaGFkb3ciLCJsaXN0U3R5bGUiLCJib3JkZXJCb3R0b20iLCJ0ZXh0QWxpZ24iLCJ0cmFuc2Zvcm0iLCJhbmltYXRpb25EdXJhdGlvbiIsIk5vdGlmaWNhdGlvbkl0ZW1TaGFwZSIsIm9uQ2xvc2VEcmF3ZXIiLCJMb2dpbiIsIl9Db21wb25lbnQiLCJlbmFibGVTdWJtaXQiLCJoYW5kbGVTdWJtaXQiLCJfYXNzZXJ0VGhpc0luaXRpYWxpemVkIiwiaGFuZGxlQ2hhbmdlIiwiaGFuZGxlQ2hhbmdlRW1haWwiLCJoYW5kbGVDaGFuZ2VQYXNzd29yZCIsIl90aGlzJHN0YXRlIiwibG9nSW4iLCJfZSR0YXJnZXQiLCJwcmV2U3RhdGUiLCJfdGhpcyRzdGF0ZTIiLCJhcHBCb2R5Iiwib25TdWJtaXQiLCJhcHBMb2dpbiIsImh0bWxGb3IiLCJvbkNoYW5nZSIsImxvZ2luQnV0dG9uIiwib3ZlcmZsb3ciLCJnYXAiLCJtYXJnaW5MZWZ0IiwiZmxleERpcmVjdGlvbiIsImJvcmRlclJhZGl1cyIsIm1hcmdpblRvcCIsImxvY2FscyIsInVzZXIiLCJpc0xvZ2dlZEluIiwiQXBwQ29udGV4dCIsImxvZ091dCIsImdldEZ1bGxZZWFyIiwiSGVhZGVyIiwiX3RoaXMkY29udGV4dCIsImhlYWRlciIsImxvZ28iLCJ3ZWxjb21lTWVzc2FnZSIsImxvZ291dExpbmsiLCJiYWNrZ3JvdW5kU2l6ZSIsImZvbnRTdHlsZSIsIm1hcmdpblJpZ2h0IiwidGV4dERlY29yYXRpb24iLCJDb3Vyc2VMaXN0Um93IiwiaXNIZWFkZXIiLCJ0ZXh0Rmlyc3RDZWxsIiwidGV4dFNlY29uZENlbGwiLCJfdXNlU3RhdGUyIiwiaXNDaGVja2VkIiwic2V0SXNDaGVja2VkIiwicm93U3R5bGUiLCJjb2xTcGFuIiwiY3JlZGl0IiwiQ291cnNlTGlzdCIsImxpc3RDb3Vyc2VzIiwiY291cnNlTGlzdCIsImNvdXJzZSIsImJvcmRlckNvbG9yIiwidGFibGVIZWFkZXIiLCJ0YWJsZUhlYWRlckZpcnN0IiwiYm9yZGVyUmlnaHQiLCJ0YWJsZUhlYWRlclNlY29uZCIsImJvcmRlckxlZnQiLCJDb3Vyc2VTaGFwZSIsIkJvZHlTZWN0aW9uIiwidGl0bGUiLCJib2R5U2VjdGlvbiIsIm1hcmdpbiIsIkJvZHlTZWN0aW9uV2l0aE1hcmdpbkJvdHRvbSIsIkFwcCIsImxvZyIsIm5vdGlmaWNhdGlvbiIsImFwcCIsImFwcEhlYWRlciIsImFwcEZvb3RlciIsIkZvb3RlciIsImJvcmRlclRvcCIsIlJlYWN0RE9NIiwiZ2V0RWxlbWVudEJ5SWQiXSwic291cmNlUm9vdCI6IiJ9